(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[   2288317,      42820]
NotebookOptionsPosition[   2253634,      42223]
NotebookOutlinePosition[   2254058,      42240]
CellTagsIndexPosition[   2254015,      42237]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["Mohamed M. Hammad",
  FontFamily->"FZLanTingHei-DB-GBK",
  FontSize->12,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.8488288700694285, 0.3848325322346838, 0.1479972533760586]],
 StyleBox["\[LineSeparator]",
  FontSize->12,
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["\n",
  FontSize->12,
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["Neural Network and Deep Learning with Mathematica                  \
            ",
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox[ButtonBox["<",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "Neural_NetWork_and_Deep_Learning"}, 
     "NNDL-04-multilayer-ffnn.nb", CharacterEncoding -> "UTF-8"], None},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/Neural_NetWork_and_Deep_Learning/NNDL-\
04-multilayer-ffnn.nb"],
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox[" ",
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox[ButtonBox[">",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "Neural_NetWork_and_Deep_Learning"}, "NNDL-06-lr-gdv.nb", 
     CharacterEncoding -> "UTF-8"], None},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/Neural_NetWork_and_Deep_Learning/NNDL-\
06-lr-gdv.nb"],
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox["    ",
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox[ButtonBox["\[CapitalXi]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "Neural_NetWork_and_Deep_Learning"}, "contents.nb", 
     CharacterEncoding -> "UTF-8"], None},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/Neural_NetWork_and_Deep_Learning/\
contents.nb"],
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox["\[LineSeparator]\[LineSeparator]",
  FontSize->12,
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["Edited by Hao Feng",
  FontFamily->"Futura",
  FontSize->12,
  FontWeight->"Medium",
  FontSlant->"Italic",
  FontColor->RGBColor[
   0.8488288700694285, 0.3848325322346838, 0.1479972533760586]]
}], "Text",
 CellMargins->{{66, -45}, {4, 12}},
 CellChangeTimes->{{3.9397640484222183`*^9, 3.939764052679113*^9}, 
   3.9397641564677134`*^9, 3.939764214184162*^9, {3.939774845841297*^9, 
   3.9397748486786137`*^9}, 3.9397769383984737`*^9, 3.939777524212697*^9, {
   3.939777679887363*^9, 3.9397776986053457`*^9}, 3.939777748637487*^9, {
   3.939777854556375*^9, 3.939777878635145*^9}, {3.9397779299447737`*^9, 
   3.9397779337440853`*^9}, {3.9397779656956463`*^9, 
   3.9397779872993917`*^9}, {3.939783995957651*^9, 3.9397839959644203`*^9}, 
   3.93994857128743*^9, {3.9403030753694696`*^9, 3.9403030753782463`*^9}, {
   3.940303217729404*^9, 3.940303217737211*^9}, {3.940741024123201*^9, 
   3.940741027365489*^9}, {3.940741081934002*^9, 3.940741081942062*^9}, {
   3.943567220607367*^9, 3.9435672414910088`*^9}, {3.94356735516547*^9, 
   3.943567355169693*^9}, {3.9435681597640142`*^9, 3.943568192257277*^9}, {
   3.94360553842068*^9, 3.943605549222768*^9}, {3.944605232458186*^9, 
   3.944605244787657*^9}},
 LineSpacing->{0.6999999999999997, 3},
 Background->RGBColor[
  0.13066300450141147`, 0.12460517280842298`, 0.4353551537346456],
 CellID->912160115,ExpressionUUID->"67aab6c7-b186-4fbc-a04a-683b7453f682"],

Cell[CellGroupData[{

Cell["5 Challenges in Neural Network Optimization", "Section",
 CellChangeTimes->{{3.943567936366756*^9, 3.9435679403338757`*^9}, {
  3.94356810611018*^9, 3.9435681138472424`*^9}, {3.9436697752713633`*^9, 
  3.943669780056386*^9}, {3.944605092244577*^9, 3.9446051027689734`*^9}},
 CellID->622795188,ExpressionUUID->"4fba7fed-0087-40ae-a263-55e5b8fe4d49"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 "\[LineSeparator]This chapter provides a Mathematica implementation of the \
concepts and ideas presented in Chapter 4, [1], of the book titled ",
 ButtonBox["Artificial Neural Network and Deep Learning: Fundamentals and \
Theory",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "Artifical_Neural_Network_and_Deep_Learning"}, "contents.nb", 
     CharacterEncoding -> "UTF-8"], None},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/Artifical_Neural_Network_and_Deep_\
Learning/contents.nb"],
 ". We strongly recommend that you begin with the theoretical chapter to \
build a solid foundation before exploring the corresponding practical \
implementation."
}], "Note",
 CellChangeTimes->{{3.9435682523793507`*^9, 3.9435682907152853`*^9}, {
  3.9435754000406303`*^9, 3.943575400046158*^9}, {3.944605112751877*^9, 
  3.944605131151554*^9}},
 CellID->1196547533,ExpressionUUID->"2c93b86d-f330-4fb3-b295-cb7eba6efbe1"],

Cell["\<\
Neural Networks (NNs) have revolutionized various fields, from image \
recognition to natural language processing, by enabling machines to learn \
complex patterns and make decisions with human-like accuracy. However, \
despite their remarkable capabilities, training NNs effectively remains a \
challenging task. This chapter delves into the myriad challenges encountered \
during the optimization process of NNs, exploring key concepts such as \
activation function (AF) saturation, vanishing and exploding gradients, \
weight initialization methods [47,48,49-53], non-zero centered AFs [54], \
feature scaling techniques, including standardization, normalization, and \
whitening [55-61], and normalization methods like Batch Normalization (BN) \
[62] and Layer Normalization (LN) [63].\
\>", "Text",
 CellChangeTimes->{{3.944617171048563*^9, 3.944617200257567*^9}},
 CellID->1246293200,ExpressionUUID->"abb872f7-a2dc-4890-b8f6-dd579fc3a08b"],

Cell["\<\
\[Bullet] One of the fundamental challenges in NN optimization is AF \
saturation. AFs play a crucial role in introducing non-linearity to the \
model, enabling it to learn complex patterns. However, certain AFs, such as \
the Sigmoid or hyperbolic tangent (Tanh) functions, tend to saturate when the \
input values are too large or too small, leading to vanishing gradients and \
hampering the learning process.\
\>", "Text",
 CellChangeTimes->{{3.944617171048563*^9, 3.944617200287868*^9}},
 CellID->2008925822,ExpressionUUID->"dd6834d3-8b07-4ff0-b32e-52dd92adf9c3"],

Cell["\<\
\[Bullet] The vanishing and exploding gradients problem is another \
significant hurdle faced during NN training. In deep NNs, gradients can \
diminish exponentially or explode during backpropagation (BP), making it \
challenging to update the weights effectively. This phenomenon hinders the \
convergence of the model and affects its ability to generalize to unseen data.\
\>", "Text",
 CellChangeTimes->{{3.944617171048563*^9, 3.944617200317133*^9}},
 CellID->197928578,ExpressionUUID->"15d8bd33-7a5f-45ab-a19f-6af26b471ce2"],

Cell["\<\
\[Bullet] While non-zero centered AFs like ReLU and its variants indeed \
alleviate the vanishing gradient problem (VGP), they can introduce another \
issue known as \[OpenCurlyDoubleQuote]zig-zag\[CloseCurlyDoubleQuote] \
updates. These updates occur when the neuron\[CloseCurlyQuote]s output \
oscillates between positive and negative values, causing the Gradient Descent \
(GD) updates to zig-zag back and forth. This oscillatory behavior can \
potentially slow down the learning process, as the network struggles to \
converge towards the optimal solution.\
\>", "Text",
 CellChangeTimes->{{3.944617171048563*^9, 3.944617200356288*^9}},
 CellID->463822985,ExpressionUUID->"24812bfa-4a87-4987-b27d-c7f190a51a05"],

Cell["\<\
\[Bullet] Effective weight initialization is crucial for mitigating the \
issues of vanishing and exploding gradients. Common weight initialization \
techniques, such as random initialization, aim to set initial weights to \
small values to prevent saturation and maintain stable gradients during \
training. Kaiming or He initialization is a popular weight initialization \
method designed specifically for deep NNs. It initializes the weights of each \
layer based on the number of input units, effectively addressing the \
vanishing and exploding gradients problem and promoting faster convergence. \
Xavier or Glorot initialization is another widely used technique for weight \
initialization. It sets the initial weights using a uniform or normal \
distribution, scaled based on the number of input and output units, thus \
ensuring stable gradients and facilitating smoother training.\
\>", "Text",
 CellChangeTimes->{{3.944617171048563*^9, 3.944617200443119*^9}},
 CellID->1865419725,ExpressionUUID->"ebcdb152-6059-4fe4-9a3a-f92f6b81f7db"],

Cell["\<\
\[Bullet] Feature scaling techniques, including standardization, \
normalization, and whitening, are essential for preprocessing input data and \
enhancing the convergence of NNs. These methods ensure that input features \
are on similar scales, preventing certain features from dominating the \
learning process.\
\>", "Text",
 CellChangeTimes->{{3.944617171048563*^9, 3.944617200463324*^9}},
 CellID->715490214,ExpressionUUID->"9231f46d-9650-4936-b1f9-3e53ef184ce0"],

Cell["\<\
\[Bullet] BN and LN are techniques that normalize the activations of each \
layer, effectively stabilizing the learning process and accelerating \
convergence. These techniques mitigate the effects of internal covariate \
shift and facilitate smoother optimization of NNs.\
\>", "Text",
 CellChangeTimes->{{3.944617171048563*^9, 3.944617200483095*^9}},
 CellID->1500655646,ExpressionUUID->"8deee16b-2967-44af-8828-ef043eb1ef0b"],

Cell["\<\
In this chapter, building upon the foundational concepts established in \
earlier chapters, we delve deeper into the realm of NN construction using \
Mathematica, exploring advanced functionalities and techniques to enhance the \
efficiency and effectiveness of our models.\
\>", "Text",
 CellChangeTimes->{{3.944617881931682*^9, 3.944617918212935*^9}},
 CellID->791589773,ExpressionUUID->"ccf6795f-e6ad-46b6-b774-ff35b0735d98"],

Cell["\<\
\[Bullet] Our first focus will be on monitoring training progress, a crucial \
aspect of NN development. We will discuss methodologies and tools to track \
key performance metrics such as loss, accuracy, and convergence rates in \
real-time. By closely monitoring training progress, developers can gain \
valuable insights into the behavior of their models, enabling informed \
decisions and efficient optimization strategies.\
\>", "Text",
 CellChangeTimes->{{3.944617881931682*^9, 3.944617918249303*^9}},
 CellID->1017817514,ExpressionUUID->"e013528b-0e36-487b-ad40-20e70b658e51"],

Cell[TextData[{
 "\[Bullet] We will introduce ",
 StyleBox["NetPort", "CodeText"],
 " and ",
 StyleBox["NetExtract", "CodeText"],
 ", which serve as crucial components for managing the flow of data within NN \
architectures. NetPort enables us to designate input and output ports within \
our networks, facilitating the seamless integration of various data sources \
and outputs. ",
 StyleBox["NetExtract", "CodeText"],
 ", on the other hand, allows for the extraction of specific layers or \
parameters from networks, enabling the reusability and customization of \
complex architectures."
}], "Text",
 CellChangeTimes->{{3.944617881931682*^9, 3.9446179182902517`*^9}},
 CellID->1340308819,ExpressionUUID->"c40073ed-5fa8-4104-b1e7-bdafedf2af7c"],

Cell[TextData[{
 "\[Bullet] Next, we will discuss ",
 StyleBox["TrainingProgressMeasurements", "CodeText"],
 " and ",
 StyleBox["TrainingProgressFunction", "CodeText"],
 ", which provide invaluable insights into the training process of NNs. These \
tools enable real-time monitoring and analysis of key performance metrics, \
empowering developers to fine-tune models for optimal results efficiently."
}], "Text",
 CellChangeTimes->{{3.944617881931682*^9, 3.944617918309683*^9}},
 CellID->804463106,ExpressionUUID->"17c4f9d6-c903-4f41-84e9-854d20ad83fa"],

Cell[TextData[{
 "\[Bullet] Furthermore, we will explore the ",
 StyleBox["NetTrainResultsObject", "CodeText"],
 ", a comprehensive representation of the training outcomes generated by the ",
 StyleBox["NetTrain", "CodeText"],
 " function. This object encapsulates crucial information such as \
training/validation losses, accuracies, and other performance metrics, \
facilitating in-depth analysis and evaluation of model performance."
}], "Text",
 CellChangeTimes->{{3.944617881931682*^9, 3.9446179183388977`*^9}},
 CellID->2104012558,ExpressionUUID->"5ff1c90e-a71d-40a2-abad-41df7762f5e1"],

Cell["\<\
\[Bullet] Next, we address the challenge of saturation and vanishing \
gradients during training, which can hinder the convergence of NNs, \
particularly in deep architectures. We explore techniques to mitigate these \
issues, including advanced weight initialization methods. By effectively \
managing saturation and vanishing gradients, developers can foster more \
stable and reliable training dynamics, leading to improved model performance.\
\
\>", "Text",
 CellChangeTimes->{{3.944617881931682*^9, 3.944617918377743*^9}},
 CellID->842850862,ExpressionUUID->"382170c4-29ac-4181-94be-6f9a4adeac37"],

Cell[TextData[{
 "\[Bullet] In addition, we will delve into the initialization techniques, \
Xavier and Kaiming, using the ",
 StyleBox["NetInitialize", "CodeText"],
 " function. These techniques play a pivotal role in setting the initial \
weights of NN layers, influencing the convergence and stability of the \
training process significantly."
}], "Text",
 CellChangeTimes->{{3.944617881931682*^9, 3.944617918397773*^9}},
 CellID->954926975,ExpressionUUID->"b098c35d-1d75-4033-9686-0f90b34a8367"],

Cell[TextData[{
 "\[Bullet] Furthermore, we will introduce the ",
 StyleBox["BatchNormalizationLayer", "CodeText"],
 ", a fundamental tool for improving the training efficiency and \
generalization of NNs. BN mitigates the issues of internal covariate shift, \
promoting faster convergence and better performance across various tasks. The \
",
 StyleBox["BatchNormalizationLayer", "CodeText"],
 " can be easily incorporated into NN architectures using the ",
 StyleBox["NetChain", "CodeText"],
 " or ",
 StyleBox["NetGraph", "CodeText"],
 " constructs. It can be placed after a fully connected layer, or any other \
layer where normalization is desired."
}], "Text",
 CellChangeTimes->{{3.944617881931682*^9, 3.944617918437808*^9}},
 CellID->629017772,ExpressionUUID->"3d04242b-8969-4950-b38b-5537c0dc1cf0"],

Cell["\<\
\[Bullet] Finally, we delve into feature scaling techniques, specifically \
standardization, whitening, and Mahalanobis distances. Feature scaling plays \
a critical role in ensuring the stability and convergence of NNs by \
normalizing input data distributions. We examine the impact of different \
scaling methodologies on model performance and explore best practices for \
incorporating them into the training pipeline.\
\>", "Text",
 CellChangeTimes->{{3.944617881931682*^9, 3.944617918467454*^9}},
 CellID->1062357157,ExpressionUUID->"57f01989-d1f0-4ea3-b74b-4f1cf0444932"],

Cell["\<\
Throughout this chapter, we will provide practical examples and \
demonstrations to illustrate the application of these techniques. By \
mastering these advanced functionalities, readers will gain the necessary \
expertise to design, train, and optimize sophisticated NNs using Mathematica, \
empowering them to tackle complex problems across diverse domains effectively.\
\>", "Text",
 CellChangeTimes->{
  3.944617881931682*^9, {3.944617918477284*^9, 3.944617918496928*^9}},
 CellID->1909147870,ExpressionUUID->"9a90aa75-b335-42d1-9936-a5a66bd81146"],

Cell[CellGroupData[{

Cell["NetPort and NetExtract", "Subsection",
 CellChangeTimes->{{3.9446182011515903`*^9, 3.94461820551785*^9}},
 CellID->921939233,ExpressionUUID->"ac6c0f46-b724-4c17-9fec-582bf3635ba5"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["NetPort[\[OpenCurlyDoubleQuote]port\[CloseCurlyDoubleQuote]]\t\t", 
  "CodeText"],
 "represents the specified input or output port for a complete net."
}], "ItemParagraph",
 CellChangeTimes->{{3.9446182171455183`*^9, 3.9446182315576363`*^9}},
 CellID->54693742,ExpressionUUID->"428062be-c0c3-46c5-b6ca-0ec50d9370c7"],

Cell[TextData[{
 StyleBox["NetPort[{n,\[CloseCurlyDoubleQuote]port\[CloseCurlyDoubleQuote]}]\t\
", "CodeText"],
 "represents the specified port for layer number n in a NetGraph or similar \
construct."
}], "ItemParagraph",
 CellChangeTimes->{{3.9446182171455183`*^9, 3.94461823784028*^9}},
 CellID->539470276,ExpressionUUID->"4db3b860-101b-491a-bb62-2060fd2aacad"],

Cell[TextData[{
 StyleBox["NetPort[{\[OpenCurlyDoubleQuote]name\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]port\[CloseCurlyDoubleQuote]}]", "CodeText"],
 " represents the specified port for the layer with the specified name."
}], "ItemParagraph",
 CellChangeTimes->{{3.9446182171455183`*^9, 3.944618225968549*^9}},
 CellID->200881860,ExpressionUUID->"65d2e950-9785-4c38-bec3-811a0f36a5d7"],

Cell[TextData[{
 StyleBox["NetPort[spec,port]\t", "CodeText"],
 "is treated as equivalent to NetPort[{spec,port}]."
}], "ItemParagraph",
 CellChangeTimes->{{3.9446182171455183`*^9, 3.944618249315509*^9}},
 CellID->17506570,ExpressionUUID->"5e718b51-bbd4-4711-a30e-10a174a277fc"],

Cell[TextData[StyleBox["Remarks:",
 FontWeight->"Bold"]], "Note",
 CellChangeTimes->{{3.944618281464065*^9, 3.9446182844011593`*^9}},
 CellID->1838721527,ExpressionUUID->"fb07644c-7efe-4947-9c0d-b1a933b5282e"]
}, Open  ]],

Cell[TextData[{
 "\[Bullet] ",
 StyleBox["NetPort[{layer, \
\[OpenCurlyDoubleQuote]port\[CloseCurlyDoubleQuote]}]", "CodeText"],
 ": Refers to the named output port of a specific layer when used on the \
left- hand side of a rule. When used on the right-hand side of a rule, it \
refers to a named input port of a layer."
}], "Text",
 CellChangeTimes->{{3.944618297026651*^9, 3.944618308648687*^9}},
 CellID->1933531287,ExpressionUUID->"8ebfd4e1-14c1-4664-a180-20a71c10502a"],

Cell[TextData[{
 "\[Bullet] ",
 StyleBox["NetPort[\[OpenCurlyDoubleQuote]port\[CloseCurlyDoubleQuote]]", 
  "CodeText"],
 ": Refers to an input of the entire graph when used on the left-hand side of \
a rule. When used on the right-hand side of a rule, it refers to an output of \
the entire graph."
}], "Text",
 CellChangeTimes->{{3.944618297026651*^9, 3.944618308663987*^9}},
 CellID->188575394,ExpressionUUID->"5819979f-bf5c-4ee8-b4ab-75828162550d"],

Cell[TextData[{
 "\[Bullet] ",
 StyleBox["net[data, NetPort[oport]]", "CodeText"],
 " : Used to obtain the value of the net at a specific output port (oport) \
when it\[CloseCurlyQuote]s applied to the specified data. Here, oport must \
refer to an output port, a subnet of the net, or a layer."
}], "Text",
 CellChangeTimes->{{3.944618297026651*^9, 3.944618308677215*^9}},
 CellID->801919873,ExpressionUUID->"6e4c77ca-d589-4116-8590-ded470b0cf66"],

Cell[TextData[{
 "\[Bullet] ",
 StyleBox["net[data, {NetPort[oport1], NetPort[oport2], \[Ellipsis]}]", 
  "CodeText"],
 ": Returns an association where the keys are the specified output ports \
(oport1, oport2, etc.), and the values are the values of the net at those \
output ports when the net is applied to the specified data."
}], "Text",
 CellChangeTimes->{{3.944618297026651*^9, 3.944618308700601*^9}},
 CellID->592499881,ExpressionUUID->"f8e2f171-5f5b-4a46-a5ef-1a11ffc65588"],

Cell["code 5.1", "CodeCaption",
 CellChangeTimes->{{3.944618349081338*^9, 3.9446183507012463`*^9}},
 CellID->1092583201,ExpressionUUID->"fe4ef3ab-8f22-434d-a786-4de3a5923847"],

Cell["\<\
(* The code initializes and evaluates a neural network named net. This \
network, defined within a NetGraph, consists of multiple layers including \
LinearLayers and activation layers (ElementwiseLayer[Ramp] and \
ElementwiseLayer[Tanh]), forming a feedforward architecture with a sequential \
flow of information through the layers. Two distinct output ports (\
\[OpenCurlyDoubleQuote]Output1\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]Output2\[CloseCurlyDoubleQuote]) are specified, \
enabling the retrieval of specific outputs from the network during \
evaluation. Additionally, the code demonstrates the initialization of the \
network parameters using NetInitialize, ensuring that the network is prepared \
for evaluation with the provided inputs. Finally, the network is evaluated \
with a given input, producing the requested outputs corresponding to the \
specified ports: *)\
\>", "comment",
 CellChangeTimes->{{3.944618358158001*^9, 3.9446183627154512`*^9}},
 CellID->957375671,ExpressionUUID->"a39d6387-d665-4278-b73f-de85fe88e331"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"LinearLayer", "[", 
         RowBox[{"5", ",", 
          RowBox[{"\"\<Input\>\"", "->", "2"}]}], "]"}], ",", 
        RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LinearLayer", "[", "5", "]"}], ",", 
        RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LinearLayer", "[", "5", "]"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", 
         RowBox[{"NetPort", "[", "\"\<Output1\>\"", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"NetPort", "[", "\"\<Output2\>\"", "]"}]}], ",", 
        RowBox[{"1", "->", 
         RowBox[{"2", "->", 
          RowBox[{"3", "->", 
           RowBox[{"4", "->", "5"}]}]}]}]}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"net", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2"}], ",", "3.1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NetPort", "[", "\"\<Output1\>\"", "]"}], ",", 
     RowBox[{"NetPort", "[", "\"\<Output2\>\"", "]"}], ",", 
     RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}], ",", 
     RowBox[{"NetPort", "[", 
      RowBox[{"All", ",", "\"\<Output\>\""}], "]"}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.944618367458686*^9, 3.944618464034648*^9}},
 CellLabel->"In[69]:=",
 CellID->2002463053,ExpressionUUID->"e116a5b0-b91e-4638-a2ea-95ef11389a4f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               EdgeForm[{
                 RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                 Thickness[0.03]}], 
               FaceForm[
                RGBColor[0.9855164, 0.9754575, 0.99025]], 
               
               RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                7]}, {
               Thickness[0.03571428571428571], {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 20.}, {
                 19.903200149536133`, 16.}, {17.903200149536133`, 14.}, {
                 13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
                 9.903200149536133, 14.}, {7.903200149536133, 16.}, {
                 7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
                 9.903200149536133, 14.}, {7.903200149536133, 12.}, {
                 7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                FaceForm[{
                  RGBColor[
                  0.8313725490196079, 0.4117647058823529, 
                   0.12941176470588237`], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {18.,
                  21.}}}]}, {
                FaceForm[{
                  RGBColor[0.42065599999999986`, 0.018300000000000014`, 0.61], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {12.,
                  16.}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.6274509803921569, 0.8156862745098039, 
                   0.49411764705882355`], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6., 
                 21.}}}]}, {
                FaceForm[{
                  Hue[0.5247747747747747, 0.43, 0.86], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                 10.}}}]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
             GrayLevel[1], ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 
                 TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["3", "SummaryItem"], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               EdgeForm[{
                 RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                 Thickness[0.03]}], 
               FaceForm[
                RGBColor[0.9855164, 0.9754575, 0.99025]], 
               
               RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                7]}, {
               Thickness[0.03571428571428571], {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 20.}, {
                 19.903200149536133`, 16.}, {17.903200149536133`, 14.}, {
                 13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
                 9.903200149536133, 14.}, {7.903200149536133, 16.}, {
                 7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
                 9.903200149536133, 14.}, {7.903200149536133, 12.}, {
                 7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                FaceForm[{
                  RGBColor[
                  0.8313725490196079, 0.4117647058823529, 
                   0.12941176470588237`], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {18.,
                  21.}}}]}, {
                FaceForm[{
                  RGBColor[0.42065599999999986`, 0.018300000000000014`, 0.61], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {12.,
                  16.}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.6274509803921569, 0.8156862745098039, 
                   0.49411764705882355`], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6., 
                 21.}}}]}, {
                FaceForm[{
                  Hue[0.5247747747747747, 0.43, 0.86], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                 10.}}}]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
             GrayLevel[1], ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = None}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -9}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"1\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{0, -20.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output1\"", 
                    
                    Offset[{
                    0, -9}, {-4.000000026794896, -0.9999998928204116}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"2\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{0, -20.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"3\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -20.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output2\"", 
                    
                    Offset[{
                    0, -9}, {-2.0000000267948965`, -0.9999999464102056}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"4\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -20.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"5\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -20.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -9}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]], 
                    StyleBox[{
                    InsetBox[
                    StyleBox[
                    "\"2\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917623294277`*^-7, 
                    5.4999999999999964`}, {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999993, -3.8974395678716865`*^-8}], 
                    InsetBox[
                    StyleBox[
                    "\"5\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{4.532230661050467, 
                    3.1159084124913}, {-4.450000014737192, \
-0.5499998807627081}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.5665288022711454, -0.8240419383728121}], 
                    InsetBox[
                    StyleBox[
                    "\"5\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917623294266`*^-7, 
                    5.4999999999999964`}, {-4.449999999999998, 
                    1.192372917795744*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999993, -3.8974395678716846`*^-8}], 
                    InsetBox[
                    StyleBox[
                    "\"5\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917623294266`*^-7, 
                    5.4999999999999964`}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999993, -3.8974395678716846`*^-8}], 
                    InsetBox[
                    StyleBox[
                    "\"5\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{4.532230661050466, 
                    3.1159084124913003`}, {-2.4500000147371925`, \
-0.5499999343525022}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.5665288022711455, -0.824041938372812}], 
                    InsetBox[
                    StyleBox[
                    "\"5\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.143591762329427*^-7, 
                    5.4999999999999964`}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999993, -3.897439567871685*^-8}], 
                    InsetBox[
                    StyleBox[
                    "\"5\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917623294271`*^-7, 
                    5.499999999999997}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999994, -3.897439567871686*^-8}], 
                    InsetBox[
                    StyleBox[
                    "\"5\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917623294271`*^-7, 
                    5.499999999999997}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999994, -3.897439567871686*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999999999998, 
                    1.339744851455892*^-7}, {-4.000000026794896, \
-0.9999998928204116}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output1\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "Output1"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-2.0000000267948965`, \
-0.9999999464102056}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output2\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "Output2"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4499999999999975`,
                     1.4603218880869225`*^-7}, {-0.25, 0}, 
                    Offset[10], {1., -3.897439567871689*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-4.450000014737192, \
-0.5499998807627081}, {-0.25, 0}, 
                    Offset[10], {0.9999999732051021, -1.4545454935198499`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output1\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "Output1"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.449999999999998, 
                    1.192372917795744*^-7}, {-0.25, 0}, 
                    Offset[10], {0.9999999999999996, -3.897439567871685*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[10], {0.9999999999999996, -3.897439567871685*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-2.4500000147371925`, \
-0.5499999343525022}, {-0.25, 0}, 
                    Offset[10], {0.9999999732051026, -1.4545454935198499`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output2\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "Output2"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999999999993`,
                     6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[10], {0.9999999999999998, -3.897439567871687*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999999999993`,
                     3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -3.8974395678716865`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -3.8974395678716865`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-5.999999999999998, 1.6076938217470707`*^-7}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                    GrayLevel[1], ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}], {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-4.000000026794896, -0.9999998928204116}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output1\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output1", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{{
                    EdgeForm[{
                    RGBColor[0.25, 0.599125, 0.5153350000000001], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571]}}, 
                    InsetBox[
                    GraphicsBox[{{}, {{}, {}, 
                    TagBox[{
                    Hue[0.47, 0.97, 0.61], 
                    PointSize[
                    NCache[
                    Rational[1, 60], 0.016666666666666666`]], 
                    AbsoluteThickness[1.3], 
                    LineBox[CompressedData["
1:eJxdkj9owkAUh0NHcXQudFPXuIrdnOPsJDibbpI6uHR2baVbOzs5uCni7CRI
l0JKQEpFWmrpH1pp7t7LB95B+PJxye/e3b2zVqfRPvE8z08fQx2z7GVyevUS
TA7TzC+qufVd+IeXmoP5R/EXj6PCqB7/4MMbM77xhg38wk1aNfeJp2EmEb80
cdEe9+14x7eBCXzD70NT4Csu9e9wm17cOvU9O/VscLudKHHWi538R/za5j3g
Pfv/yvl+iXft/ALvWx/j7tD52jEXcCb5UPJXUOuDWj/U/UGpP4F5OR94K+cH
9Xyhnj/U+4F6f7Ai9wtl3T3U/oDaP1D7C2r/wSfpT1iW/oWh9DfU/od6DecZ
/wGMMjr0
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag#1"]& ]}, {{}, {}}}, 
                    AspectRatio -> NCache[
                    GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> GrayLevel[0, 0.3], 
                    Background -> GrayLevel[0, 0], DisplayFunction -> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {25, 25}, 
                    Method -> {"AxisPadding" -> Scaled[0.02], 
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {"Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {"freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> 
                    True, "IncludeHighlighting" -> "CurrentSet", 
                    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotRange -> {{-2., 2.}, {0, 2.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {{}, {}}], {14, 14}, Center, 
                    Scaled[0.784]]}, Background -> GrayLevel[1, 0], BaseStyle -> 
                    GrayLevel[1], ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}], {-3.9999999999999987`,
                     1.0717958811647137`*^-7}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                    GrayLevel[1], ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}], {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-2.0000000267948965`, -0.9999999464102056}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output2\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output2", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{{
                    EdgeForm[{
                    RGBColor[0.25, 0.599125, 0.5153350000000001], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571]}}, 
                    InsetBox[
                    GraphicsBox[{{}, {{}, {}, 
                    TagBox[{
                    Hue[0.47, 0.97, 0.61], 
                    PointSize[
                    NCache[
                    Rational[1, 60], 0.016666666666666666`]], 
                    AbsoluteThickness[1.3], 
                    LineBox[CompressedData["
1:eJxdk19IU3EUxy/R02pBtCDIPwRFK4MKhUCQb9tDvoQ1o4dg9RBIBYULC3RG
BBFCQSsapGMV/bOgTCsfNiq+su5TxiAamCXRdGrT7ZZklrEk7z3nqQOXy49z
f9/zPed87rrDzY1NSwzDqF587LfGQOb12kN7hy0mKi5MBxIL3PHi0Xb/A4sn
61xDd0N/uX+q+1v+uMVNwUjqp7fEp4VLK0tei9mw50l99g/buudajY9Fxrrs
mOe2noPuPWeLbHQEf/NO7Y0yt6dIW63O9YsdNZ/mq7oKXBSzFXk/eqTt2LIC
22258Cyr1vS69x2dZrUTP9g74j2xu2eKhYAtOMNxD83YUJ73QrbB7xxMvjx/
OvdV/VvccDuSKH83SUfdW+DGt4N9pdiE+svTd/GU6w3G1c8k41dWRBOvxui0
E86xqVRZ+3DVqNbLclf28dgB3xfV/8xrgaVBX2SEnY7eMDP+VMvqwAeece5n
eDVeWTGXfq/fp3n9eUNHcn2arU7eZMvWVFlng8lzzrmfZjBan2zup/FfaB6a
h5xNtMt9DIg+bok+RD+Dy1If6g/qD+of6h/aH7Q/iP8ctH8sl/ngpswHcZkf
/DI/6Hyh81V9Czp/6H6g+9F6M9D9oUb2iz7Zr9afxRbZP5QPKB9QfqD8QPmC
8gXlD8ofRoVPhIVPbBZ+8Uz4RUj4hvKt/heg/EPXsFP/D/wDv36wTQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag#1"]& ]}, {{}, {}}}, 
                    AspectRatio -> NCache[
                    GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> GrayLevel[0, 0.3], 
                    Background -> GrayLevel[0, 0], DisplayFunction -> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {25, 25}, 
                    Method -> {"AxisPadding" -> Scaled[0.02], 
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {"Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {"freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> 
                    True, "IncludeHighlighting" -> "CurrentSet", 
                    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{-2., 2.}, {-0.9640275800758169, 
                    0.9640275800758169}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {{}, {}}], {14, 14}, Center, 
                    Scaled[0.784]]}, Background -> GrayLevel[1, 0], BaseStyle -> 
                    GrayLevel[1], ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}], {-1.9999999999999993`,
                     5.3589794058235685`*^-8}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                    GrayLevel[1], ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    
                    GeneralUtilities`Graphics`PackagePrivate`\
makeSelectionHighlighter[
                    
                    Part[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}, {-4.000000026794896, \
-0.9999998928204116}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-2.0000000267948965`, \
-0.9999999464102056}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    
                    Part[{8, 31, 8, 31, 31, 8, 31, 31, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Part[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[0.565492, 0.263725, 0.7075], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[0.25, 0.599125, 0.515335], 
                    RGBColor[0.565492, 0.263725, 0.7075], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[0.25, 0.599125, 0.515335], 
                    RGBColor[0.565492, 0.263725, 0.7075], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    StandardForm, Graphics], 
                    ImageSizeCache -> {{
                    4.503599627370496*^15, -4.503599627370496*^15}, {
                    4.503599627370496*^15, -4.503599627370496*^15}}]}, 
                    AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{35., 35.}, {35., 25.}}, 
                    ImageSize -> {399.9999999999999, 140.00000857436703`}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Ports"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output1\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Output1\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output1"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output1\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output1"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output2\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Output2\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output2"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output2\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output2"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "1" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{5, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{5}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{5}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{5}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output1" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT], 
                    "Output2" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT], 
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output2"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Output1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Outputs", "Output2"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Output1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Outputs", "Output2"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {0., {0., 7.8955078125}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output1" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT], 
      "Output2" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT], 
      "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          RawArray[
            "Real32",{{-0.508335530757904, -0.07060185819864273}, \
{-1.593896508216858, 1.5365939140319824`}, {
            2.6780192852020264`, -1.3168306350708008`}, {-1.0945649147033691`,
             0.14294791221618652`}, {
            0.10416555404663086`, -1.6731092929840088`}}], "Biases" -> 
          RawArray["Real32",{0., 0., 0., 0., 0.}]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {5}, "$OutputSize" -> 5, "$InputSize" -> 2, 
          "$InputDimensions" -> {2}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>, 
      "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {5}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>, 
      "3" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          RawArray["Real32",{{0.01598852500319481, 0.07610956579446793, 
            0.41800257563591003`, -0.3697849214076996, -0.04067988321185112}, \
{0.4621543884277344, -0.16257496178150177`, 
            0.0843404158949852, -0.06088467687368393, -0.03754350543022156}, {
            0.24955888092517853`, -0.9665545225143433, 
            0.00446299696341157, -0.380592942237854, -0.4059075713157654}, \
{-0.4474472999572754, 0.21902643144130707`, 
            0.17108406126499176`, -0.2019430547952652, 0.5100546479225159}, {
            0.06581547856330872, 0.3068055808544159, 
            0.572440505027771, -0.5417832732200623, -0.25941336154937744`}}], 
          "Biases" -> RawArray["Real32",{0., 0., 0., 0., 0.}]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {5}, "$OutputSize" -> 5, "$InputSize" -> 5, 
          "$InputDimensions" -> {5}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>, 
      "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
          "$Dimensions" -> {5}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>, 
      "5" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          RawArray["Real32",{{0.24905122816562653`, 
            0.012243662029504776`, -0.18527089059352875`, 0.3699740171432495, 
            0.04357273131608963}, {-0.4069335162639618, 0.44185903668403625`, 
            0.07148218154907227, -0.3282529413700104, -0.2931325435638428}, \
{-0.19917114078998566`, 0.16378869116306305`, -0.11417704820632935`, 
            0.11194313317537308`, 0.1481722891330719}, {0.1407308727502823, 
            0.7673150300979614, -0.0660296380519867, 0.16881093382835388`, 
            0.23128609359264374`}, {0.012128211557865143`, 
            0.19856978952884674`, 0.7654763460159302, 0.23533418774604797`, 
            0.27433836460113525`}}], "Biases" -> 
          RawArray["Real32",{0., 0., 0., 0., 0.}]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {5}, "$OutputSize" -> 5, "$InputSize" -> 5, 
          "$InputDimensions" -> {5}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Outputs", "Output1"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output2"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"]}|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.944618465564629*^9},
 CellLabel->"Out[69]=",
 CellID->2063829186,ExpressionUUID->"6b8a70e3-ef29-49d8-8e15-fffa818f8d7c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Output1\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.39113688468933105`", ",", "6.676116943359375`", ",", 
      RowBox[{"-", "7.295798301696777`"}], ",", "1.756616473197937`", ",", 
      RowBox[{"-", "5.3116374015808105`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Output2\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13520020246505737`"}], ",", 
      RowBox[{"-", "1.0115548372268677`"}], ",", 
      RowBox[{"-", "7.023775100708008`"}], ",", "0.9324963688850403`", ",", 
      "1.122307300567627`"}], "}"}]}], ",", 
   RowBox[{"\<\"Output\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.44837236404418945`", ",", 
      RowBox[{"-", "0.8326005935668945`"}], ",", "0.2171066552400589`", ",", 
      RowBox[{"-", "0.2304626852273941`"}], ",", 
      RowBox[{"-", "0.5253157019615173`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"NetPort", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "\<\"Output\"\>"}], "}"}], "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.39113688468933105`", ",", "6.676116943359375`", ",", 
      RowBox[{"-", "7.295798301696777`"}], ",", "1.756616473197937`", ",", 
      RowBox[{"-", "5.3116374015808105`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"NetPort", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\<\"Output\"\>"}], "}"}], "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.39113688468933105`", ",", "6.676116943359375`", ",", "0.`", ",", 
      "1.756616473197937`", ",", "0.`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"NetPort", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "\<\"Output\"\>"}], "}"}], "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13520020246505737`"}], ",", 
      RowBox[{"-", "1.0115548372268677`"}], ",", 
      RowBox[{"-", "7.023775100708008`"}], ",", "0.9324963688850403`", ",", 
      "1.122307300567627`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"NetPort", "[", 
     RowBox[{"{", 
      RowBox[{"4", ",", "\<\"Output\"\>"}], "}"}], "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13438239693641663`"}], ",", 
      RowBox[{"-", "0.7664043307304382`"}], ",", 
      RowBox[{"-", "0.9999983906745911`"}], ",", "0.7317556738853455`", ",", 
      "0.8083699941635132`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"NetPort", "[", 
     RowBox[{"{", 
      RowBox[{"5", ",", "\<\"Output\"\>"}], "}"}], "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.44837236404418945`", ",", 
      RowBox[{"-", "0.8326005935668945`"}], ",", "0.2171066552400589`", ",", 
      RowBox[{"-", "0.2304626852273941`"}], ",", 
      RowBox[{"-", "0.5253157019615173`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.9446184655778923`*^9},
 CellLabel->"Out[70]=",
 CellID->621262758,ExpressionUUID->"1bcd63b1-011c-48b7-9815-d52c016ecebe"]
}, Open  ]],

Cell["code 5.2", "CodeCaption",
 CellChangeTimes->{{3.944618735627452*^9, 3.944618737356135*^9}},
 CellID->497681992,ExpressionUUID->"150164d6-dc2e-4379-96ed-e40b24305adb"],

Cell["\<\
(* The code initializes and evaluates a neural network named net. The \
network, defined within a NetGraph, consists of a single layer represented by \
TotalLayer[], which computes the total sum of its inputs. Three custom-named \
input ports, \[OpenCurlyDoubleQuote]Input1\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Input2\[CloseCurlyDoubleQuote], and \
\[OpenCurlyDoubleQuote]Input3\[CloseCurlyDoubleQuote], are defined, enabling \
the network to receive input data through specific channels. These inputs are \
then aggregated by the TotalLayer[]. After initialization, the network is \
evaluated with the input {4,5,5}, resulting in the computation of the total \
sum of the input data: *)\
\>", "comment",
 CellChangeTimes->{{3.944618745345427*^9, 3.944618748064835*^9}},
 CellID->1563782102,ExpressionUUID->"fe597cd2-47e5-4a89-86d8-e9a105ed4b42"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"TotalLayer", "[", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input1\>\"", "]"}], "->", "1"}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input2\>\"", "]"}], "->", "1"}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input3\>\"", "]"}], "->", "1"}]}], 
       "}"}]}], "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"net", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "5"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.944618750561063*^9, 3.944618793871929*^9}},
 CellLabel->"In[71]:=",
 CellID->852840970,ExpressionUUID->"ea8818b0-3402-4ed9-87a9-b404f7f05056"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               EdgeForm[{
                 RGBColor[0.25, 0.599125, 0.5153350000000001], 
                 Thickness[0.03]}], 
               FaceForm[
                RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
               
               RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                7]}, {
               Thickness[0.03571428571428571], {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 20.}, {
                 19.903200149536133`, 16.}, {17.903200149536133`, 14.}, {
                 13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
                 9.903200149536133, 14.}, {7.903200149536133, 16.}, {
                 7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
                 9.903200149536133, 14.}, {7.903200149536133, 12.}, {
                 7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                FaceForm[{
                  RGBColor[
                  0.8313725490196079, 0.4117647058823529, 
                   0.12941176470588237`], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {18.,
                  21.}}}]}, {
                FaceForm[{
                  RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {12.,
                  16.}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.6274509803921569, 0.8156862745098039, 
                   0.49411764705882355`], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6., 
                 21.}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.5803921568627451, 0.5098039215686274, 0.8352941176470589], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                 10.}}}]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
             GrayLevel[1], ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Number of inputs\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["3", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               EdgeForm[{
                 RGBColor[0.25, 0.599125, 0.5153350000000001], 
                 Thickness[0.03]}], 
               FaceForm[
                RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
               
               RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                7]}, {
               Thickness[0.03571428571428571], {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 20.}, {
                 19.903200149536133`, 16.}, {17.903200149536133`, 14.}, {
                 13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
                 9.903200149536133, 14.}, {7.903200149536133, 16.}, {
                 7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
                 9.903200149536133, 14.}, {7.903200149536133, 12.}, {
                 7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                FaceForm[{
                  RGBColor[
                  0.8313725490196079, 0.4117647058823529, 
                   0.12941176470588237`], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {18.,
                  21.}}}]}, {
                FaceForm[{
                  RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {12.,
                  16.}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.6274509803921569, 0.8156862745098039, 
                   0.49411764705882355`], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6., 
                 21.}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.5803921568627451, 0.5098039215686274, 0.8352941176470589], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                 10.}}}]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
             GrayLevel[1], ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = None}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input1\"", 
                    
                    Offset[{0, -9}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"1\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -20.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Input2\"", 
                    
                    Offset[{0, -9}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Input3\"", 
                    
                    Offset[{0, -9}, {-1.9999999464102052`, 
                    2.0000000535897935`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    
                    Offset[{0, -9}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]], 
                    StyleBox[{
                    InsetBox[
                    StyleBox[
                    "\"\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{-4.532230505142572, 
                    3.1159086392664164`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.5665288435029848,
                     0.8240419100259223}], 
                    InsetBox[
                    StyleBox[
                    "\"\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917574308395`*^-7, 
                    5.4999999999999964`}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999993, -3.897439558965163*^-8}], 
                    InsetBox[
                    StyleBox[
                    "\"\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{4.532230661050466, 
                    3.1159084124913003`}, {-1.4499999611473986`, 
                    1.4500000388526004`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.5665288022711455, -0.824041938372812}], 
                    InsetBox[
                    StyleBox[
                    "\"\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917663126244`*^-7, 
                    5.499999999999997}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999994, -3.8974395751138626`*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input1\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input1", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input2\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input2", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999464102052`, 
                    2.0000000535897935`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input3\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input3", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input3"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[10], {1.0000000267948967`, 1.4545454155710584`}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input1\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input1", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999732051023`,
                     1.0000000388526005`}, {-0.25, 0}, 
                    Offset[10], {0.9999999999999998, -3.897439558965165*^-8}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input2\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input2", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999611473986`,
                     1.4500000388526004`}, {-0.25, 0}, 
                    Offset[10], {0.9999999732051026, -1.4545454935198499`}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input3\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input3", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input3"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[10], {0.9999999999999997, -3.897439575113863*^-8}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input1\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input1", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[0.25, 0.599125, 0.5153350000000001], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], 
                    FaceForm[{
                    RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{13.19140625, 
                    13.171142578125}, {10.551025390625, 13.171142578125}, {
                    10.551025390625, 14.731201171875}, {13.19140625, 
                    14.731201171875}, {13.19140625, 17.48876953125}, {
                    14.81005859375, 17.48876953125}, {14.81005859375, 
                    14.731201171875}, {17.450439453125, 14.731201171875}, {
                    17.450439453125, 13.171142578125}, {14.81005859375, 
                    13.171142578125}, {14.81005859375, 10.409912109375}, {
                    13.19140625, 10.409912109375}, {13.19140625, 
                    13.171142578125}}}]}}, Background -> GrayLevel[1, 0], 
                    BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}], {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "TotalLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    TotalLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input2\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input2", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-1.9999999464102052`, 2.0000000535897935`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input3\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input3", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    
                    GeneralUtilities`Graphics`PackagePrivate`\
makeSelectionHighlighter[
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-1.9999999464102052`, 
                    2.0000000535897935`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    
                    Part[{8, 31, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Part[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[0.25, 0.599125, 0.515335], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    StandardForm, Graphics], 
                    ImageSizeCache -> {{
                    4.503599627370496*^15, -4.503599627370496*^15}, {
                    4.503599627370496*^15, -4.503599627370496*^15}}]}, 
                    AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{35., 35.}, {35., 25.}}, 
                    ImageSize -> {180.0000014737193, 219.99999999999994`}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Ports"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input1\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input1\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input1"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input1\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input1"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input2\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input2\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input2"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input2\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input2"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input3\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input3\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input3"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input3\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input3"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "1" -> <|"Type" -> "Total", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Input2" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Input3" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Input2" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Input3" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input1"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input2"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input3"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input1"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Inputs", "Input2"], 
                    NeuralNetworks`NetPath["Inputs", "Input3"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input1"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Inputs", "Input2"], 
                    NeuralNetworks`NetPath["Inputs", "Input3"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {0., {0., 7.8955078125}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT], "Input3" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`RealT]|>, 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Total", "Arrays" -> <||>, "Parameters" -> <||>, 
        "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT], "Input3" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input1"] -> 
      NeuralNetworks`NetPath["Inputs", "Input1"], 
      NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input2"] -> 
      NeuralNetworks`NetPath["Inputs", "Input2"], 
      NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input3"] -> 
      NeuralNetworks`NetPath["Inputs", "Input3"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"]}|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.944618794546122*^9},
 CellLabel->"Out[71]=",
 CellID->595758447,ExpressionUUID->"e26168ae-0dc5-4329-86bc-40568b31e414"],

Cell[BoxData["14.`"], "Output",
 CellChangeTimes->{3.944618794558339*^9},
 CellLabel->"Out[72]=",
 CellID->1343456415,ExpressionUUID->"2ba4d852-dd6d-480f-99ea-9683bb9a7bf4"]
}, Open  ]],

Cell["code 5.3", "CodeCaption",
 CellChangeTimes->{{3.9446188187638073`*^9, 3.94461882036132*^9}},
 CellID->635327940,ExpressionUUID->"88cbe0b5-6b4b-4b8d-aff7-b60a661ea0ad"],

Cell["\<\
(* The code demonstrates the creation and evaluation of a neural network \
chain (NetChain). The network consists of three element-wise layers: Tanh, \
Cos, and Sin, arranged sequentially to process input data through a series of \
element-wise operations. Through the use of NetPort, the code showcases \
different methods for retrieving outputs from specific layers or obtaining \
outputs from all layers within the network: *)\
\>", "comment",
 CellChangeTimes->{{3.944618827378584*^9, 3.944618830342019*^9}},
 CellID->1434963849,ExpressionUUID->"bc262e96-5c53-420d-b171-3d17b7280bc0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ElementwiseLayer", "[", "Tanh", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "Cos", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "Sin", "]"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.2"}], ",", "3.1"}], "}"}], ",", 
    RowBox[{"NetPort", "[", 
     RowBox[{"1", ",", "\"\<Output\>\""}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tanh", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2"}], ",", "3.1"}], "}"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.2"}], ",", "3.1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NetPort", "[", 
       RowBox[{"1", ",", "\"\<Output\>\""}], "]"}], ",", 
      RowBox[{"NetPort", "[", 
       RowBox[{"2", ",", "\"\<Output\>\""}], "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"net", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2"}], ",", "3.1"}], "}"}], ",", 
   RowBox[{"NetPort", "[", 
    RowBox[{"All", ",", "\"\<Output\>\""}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.94461884580669*^9, 3.9446189723166847`*^9}},
 CellLabel->"In[83]:=",
 CellID->1271753736,ExpressionUUID->"83fd4a4d-5bb3-48ff-939c-2328a2c9d1dd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{
                 EdgeForm[{
                   RGBColor[0.25, 0.599125, 0.5153350000000001], 
                   Thickness[0.03]}], 
                 FaceForm[
                  RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                 
                 RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                  7]}, {
                 Thickness[0.03571428571428571], {
                  FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{6.221999645233154, 18.73400115966797}, {
                   9.045999526977539, 18.73400115966797}, {9.045999526977539, 
                   8.734001159667969}, {6.221999645233154, 
                   8.734001159667969}, {6.221999645233154, 
                   18.73400115966797}}}]}, {
                  FaceForm[{
                    RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{12.81100082397461, 18.73400115966797}, {
                   15.635000228881836`, 18.73400115966797}, {
                   15.635000228881836`, 8.734001159667969}, {
                   12.81100082397461, 8.734001159667969}, {12.81100082397461, 
                   18.73400115966797}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.5803921568627451, 0.5098039215686274, 
                    0.8352941176470589], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{19.39900016784668, 18.73400115966797}, {
                   22.222999572753906`, 18.73400115966797}, {
                   22.222999572753906`, 8.734001159667969}, {
                   19.39900016784668, 8.734001159667969}, {19.39900016784668, 
                   18.73400115966797}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   9.98699951171875, 15.73439884185791}, {11.868999481201172`,
                    13.73439884185791}, {9.98699951171875, 
                   11.73439884185791}, {9.98699951171875, 
                   15.73439884185791}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   16.575298309326172`, 15.73439884185791}, {
                   18.457298278808594`, 13.73439884185791}, {
                   16.575298309326172`, 11.73439884185791}, {
                   16.575298309326172`, 15.73439884185791}}}]}}}}}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
              Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
              ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{
                 EdgeForm[{
                   RGBColor[0.25, 0.599125, 0.5153350000000001], 
                   Thickness[0.03]}], 
                 FaceForm[
                  RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                 
                 RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                  7]}, {
                 Thickness[0.03571428571428571], {
                  FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{6.221999645233154, 18.73400115966797}, {
                   9.045999526977539, 18.73400115966797}, {9.045999526977539, 
                   8.734001159667969}, {6.221999645233154, 
                   8.734001159667969}, {6.221999645233154, 
                   18.73400115966797}}}]}, {
                  FaceForm[{
                    RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{12.81100082397461, 18.73400115966797}, {
                   15.635000228881836`, 18.73400115966797}, {
                   15.635000228881836`, 8.734001159667969}, {
                   12.81100082397461, 8.734001159667969}, {12.81100082397461, 
                   18.73400115966797}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.5803921568627451, 0.5098039215686274, 
                    0.8352941176470589], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{19.39900016784668, 18.73400115966797}, {
                   22.222999572753906`, 18.73400115966797}, {
                   22.222999572753906`, 8.734001159667969}, {
                   19.39900016784668, 8.734001159667969}, {19.39900016784668, 
                   18.73400115966797}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   9.98699951171875, 15.73439884185791}, {11.868999481201172`,
                    13.73439884185791}, {9.98699951171875, 
                   11.73439884185791}, {9.98699951171875, 
                   15.73439884185791}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   16.575298309326172`, 15.73439884185791}, {
                   18.457298278808594`, 13.73439884185791}, {
                   16.575298309326172`, 11.73439884185791}, {
                   16.575298309326172`, 15.73439884185791}}}]}}}}}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
              Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
              ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Cos], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Sin], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Cos", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Sin", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Tanh], "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Cos], "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Sin], "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"]}, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.944618949064295*^9, 3.9446189725767307`*^9}},
 CellLabel->"Out[83]=",
 CellID->1962630137,ExpressionUUID->"e5529509-8570-4af6-8a96-a2dc6e2656ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.8336546421051025`"}], ",", "0.995949387550354`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.944618949064295*^9, 3.944618972590255*^9}},
 CellLabel->"Out[84]=",
 CellID->575894639,ExpressionUUID->"7694418d-2d0b-4c0b-8464-152880ea1d6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.8336546070121552`"}], ",", "0.9959493592219002`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.944618949064295*^9, 3.944618972600321*^9}},
 CellLabel->"Out[85]=",
 CellID->352400644,ExpressionUUID->"97bb3776-1d8c-4c01-82d5-6c6d40fef70e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"NetPort", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "\<\"Output\"\>"}], "}"}], "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.8336546421051025`"}], ",", "0.995949387550354`"}], 
     "}"}]}], ",", 
   RowBox[{
    RowBox[{"NetPort", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\<\"Output\"\>"}], "}"}], "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.6721743941307068`", ",", "0.5437063574790955`"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.944618949064295*^9, 3.9446189726094847`*^9}},
 CellLabel->"Out[86]=",
 CellID->37725282,ExpressionUUID->"e97c26d9-f93c-4876-8b6a-a114e6fa377f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"NetPort", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "\<\"Output\"\>"}], "}"}], "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.8336546421051025`"}], ",", "0.995949387550354`"}], 
     "}"}]}], ",", 
   RowBox[{
    RowBox[{"NetPort", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\<\"Output\"\>"}], "}"}], "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.6721743941307068`", ",", "0.5437063574790955`"}], "}"}]}], 
   ",", 
   RowBox[{
    RowBox[{"NetPort", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "\<\"Output\"\>"}], "}"}], "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.6226888298988342`", ",", "0.5173114538192749`"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.944618949064295*^9, 3.944618972618146*^9}},
 CellLabel->"Out[87]=",
 CellID->541138709,ExpressionUUID->"4364f49a-834b-4073-b09a-2ed8d270178b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["NetExtract[layer,\[CloseCurlyDoubleQuote]param\
\[CloseCurlyDoubleQuote]]\t", "CodeText"],
 "extracts the value of a parameter for the specified net layer."
}], "ItemParagraph",
 CellChangeTimes->{{3.9446190047662067`*^9, 3.944619017462365*^9}},
 CellID->177735147,ExpressionUUID->"958d906f-a185-47cc-a1eb-66ce20af931f"],

Cell[TextData[{
 StyleBox["NetExtract[net,lspec]\t\t", "CodeText"],
 "extracts the layer identified by lspec from within the NetGraph or NetChain \
object net."
}], "ItemParagraph",
 CellChangeTimes->{{3.9446190047662067`*^9, 3.9446190231488657`*^9}},
 CellID->30744650,ExpressionUUID->"bce72efe-864c-46c0-8320-4b18ca71a8ef"],

Cell[TextData[{
 StyleBox["NetExtract[net,{lspec,\[CloseCurlyDoubleQuote]param\
\[CloseCurlyDoubleQuote]}]", "CodeText"],
 "extracts the value of the parameter param from the layer identified by \
lspec in net."
}], "ItemParagraph",
 CellChangeTimes->{{3.9446190047662067`*^9, 3.9446190350598783`*^9}},
 CellID->558128210,ExpressionUUID->"f4ad2b09-1db0-467b-bb52-03e95ea7d498"],

Cell[TextData[StyleBox["Remarks:",
 FontWeight->"Bold"]], "Note",
 CellChangeTimes->{{3.94461904665777*^9, 3.944619048198399*^9}},
 CellID->810962282,ExpressionUUID->"66eac030-441f-476f-8b2c-b9d92d77890d"]
}, Open  ]],

Cell["\<\
\[Bullet] The layer specification can be an integer indicating the n^(th) \
layer or a string indicating a named layer.\
\>", "Text",
 CellChangeTimes->{{3.9446190585124826`*^9, 3.944619062799615*^9}},
 CellID->1951957785,ExpressionUUID->"2cfe22f0-63dc-4155-833d-de48e6dccf8d"],

Cell["\<\
\[Bullet] Parameter specifications can be the names of any of the arrays or \
options contained within a layer.\
\>", "Text",
 CellChangeTimes->{3.9446190585124826`*^9},
 CellID->98845228,ExpressionUUID->"7898ab86-0d0d-48bd-b670-e408f59b6ec2"],

Cell["code 5.4", "CodeCaption",
 CellChangeTimes->{{3.944619084770796*^9, 3.944619086673545*^9}},
 CellID->878860648,ExpressionUUID->"6356c742-4f27-4d61-b712-e5b9a17764e5"],

Cell["\<\
(* The code constructs a neural network model using Wolfram Language\
\[CloseCurlyQuote]s NetChain, comprising layers with distinct names such as \
linear and activation layers. It subsequently extracts various components \
from this network, including the first and last layers, a specific named \
layer, the function utilized within a particular layer, a selection of \
layers, and finally, all layers. Through these operations, the code showcases \
the flexibility of Wolfram Language\[CloseCurlyQuote]s neural network \
framework in both constructing and inspecting neural network architectures, \
thereby facilitating tasks such as layer manipulation, function extraction, \
and overall network comprehension: *)\
\>", "comment",
 CellChangeTimes->{{3.9446190931182947`*^9, 3.94461909715406*^9}},
 CellID->724671897,ExpressionUUID->"30b61746-d714-4c90-8ef8-790b67059bcc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"chain", "=", 
   RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<linearLayer1\>\"", "->", 
       RowBox[{"LinearLayer", "[", "4", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<activationLayer1\>\"", "->", "Ramp"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<linearLayer2\>\"", "->", 
       RowBox[{"LinearLayer", "[", "7", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<activationLayer2\>\"", "->", "Tanh"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<linearLayer3\>\"", "->", 
       RowBox[{"LinearLayer", "[", "1", "]"}]}]}], "\[IndentingNewLine]", 
     "|>"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NetExtract", "[", 
  RowBox[{"chain", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"NetExtract", "[", 
  RowBox[{"chain", ",", 
   RowBox[{"-", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"NetExtract", "[", 
  RowBox[{"chain", ",", "\"\<linearLayer1\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NetExtract", "[", 
  RowBox[{"chain", ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "\"\<Function\>\""}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NetExtract", "[", 
  RowBox[{"chain", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "3", "}"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"NetExtract", "[", 
  RowBox[{"chain", ",", "All"}], "]"}]}], "Input",
 CellChangeTimes->{{3.944619101894556*^9, 3.944619198108679*^9}},
 CellLabel->"In[88]:=",
 CellID->1277593942,ExpressionUUID->"8c294210-adfb-41ae-9e06-bf069589cc74"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                GrayLevel[1, 0], BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                GrayLevel[1, 0], BaseStyle -> GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "linearLayer1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{4, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "activationLayer1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "linearLayer2" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{7, 4}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {7}, "$OutputSize" -> 7, 
                    "$InputSize" -> 4, "$InputDimensions" -> {4}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>|>, 
                    "activationLayer2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {7}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>|>, 
                    "linearLayer3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 7}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 7, "$InputDimensions" -> {7}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "linearLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "activationLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linearLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linearLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "activationLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "activationLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linearLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linearLayer3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "activationLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linearLayer3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart = {
                   "Nodes", "linearLayer1"}, 
                  NeuralNetworks`Private`NetChain`part = {
                   "Nodes", "linearLayer1"}, 
                  NeuralNetworks`Private`NetChain`selected = <|
                   "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{4, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linearLayer1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linearLayer1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linearLayer1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "linearLayer1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"activationLayer1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "activationLayer1"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "activationLayer1"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "activationLayer1"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linearLayer2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linearLayer2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linearLayer2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "linearLayer2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"activationLayer2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "activationLayer2"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "activationLayer2"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "activationLayer2"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linearLayer3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linearLayer3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linearLayer3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "linearLayer3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  ImageSizeCache -> {
                   329.314697265625, {175.96112060546875`, 
                    184.31622314453125`}}, 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "linearLayer1" -> <|
       "Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{4, NeuralNetworks`SizeT}, 
            NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 
          NeuralNetworks`SizeT, "$InputDimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
      "activationLayer1" -> <|
       "Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {4}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
      "linearLayer2" -> <|
       "Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> NeuralNetworks`TensorT[{7, 4}, NeuralNetworks`RealT], 
          "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {7}, "$OutputSize" -> 7, "$InputSize" -> 4, 
          "$InputDimensions" -> {4}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>|>, 
      "activationLayer2" -> <|
       "Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
          "$Dimensions" -> {7}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>|>, 
      "linearLayer3" -> <|
       "Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> NeuralNetworks`TensorT[{1, 7}, NeuralNetworks`RealT], 
          "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 7, 
          "$InputDimensions" -> {7}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "linearLayer1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "activationLayer1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "linearLayer1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "linearLayer2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath[
       "Nodes", "activationLayer1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "activationLayer2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "linearLayer2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "linearLayer3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath[
       "Nodes", "activationLayer2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "linearLayer3", "Outputs", "Output"]}, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9446191984377003`*^9},
 CellLabel->"Out[88]=",
 CellID->947381443,ExpressionUUID->"70b33d6a-3ecd-4084-9b0e-002cfe74c4d8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinearLayer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                ItemBox[
                 StyleBox["Parameters", FontWeight -> Bold]], "SummaryItem"], 
               
               TagBox[
                ItemBox[""], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"4\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox["Arrays", FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, 
                    {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 
                    4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 
                    17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25,
                     17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {
                    12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                   StyleBox[
                   "\"(\[VeryThinSpace]size: 4\[Times]\[DottedSquare]\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                 "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LinearLayer[<|
   "Type" -> "Linear", 
    "Arrays" -> <|
     "Weights" -> 
      NeuralNetworks`TensorT[{4, NeuralNetworks`SizeT}, NeuralNetworks`RealT],
       "Biases" -> NeuralNetworks`Nullable[
        NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
    "Parameters" -> <|
     "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 
      NeuralNetworks`SizeT, "$InputDimensions" -> 
      NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.944619198462339*^9},
 CellLabel->"Out[89]=",
 CellID->1196153643,ExpressionUUID->"f947499f-56f8-4346-94e6-d361e3e682ae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinearLayer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                ItemBox[
                 StyleBox["Parameters", FontWeight -> Bold]], "SummaryItem"], 
               
               TagBox[
                ItemBox[""], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"1\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox["Arrays", FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                   StyleBox[
                   "\"(\[VeryThinSpace]size: 1\[Times]7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                 "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LinearLayer[<|
   "Type" -> "Linear", 
    "Arrays" -> <|
     "Weights" -> NeuralNetworks`TensorT[{1, 7}, NeuralNetworks`RealT], 
      "Biases" -> NeuralNetworks`Nullable[
        NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
    "Parameters" -> <|
     "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 7, 
      "$InputDimensions" -> {7}|>, 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.944619198486493*^9},
 CellLabel->"Out[90]=",
 CellID->1159858334,ExpressionUUID->"22a35d44-6ed9-4d94-b553-997811e6046f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinearLayer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                ItemBox[
                 StyleBox["Parameters", FontWeight -> Bold]], "SummaryItem"], 
               
               TagBox[
                ItemBox[""], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"4\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox["Arrays", FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, 
                    {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 
                    4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 
                    17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25,
                     17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {
                    12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                   StyleBox[
                   "\"(\[VeryThinSpace]size: 4\[Times]\[DottedSquare]\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                 "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LinearLayer[<|
   "Type" -> "Linear", 
    "Arrays" -> <|
     "Weights" -> 
      NeuralNetworks`TensorT[{4, NeuralNetworks`SizeT}, NeuralNetworks`RealT],
       "Biases" -> NeuralNetworks`Nullable[
        NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
    "Parameters" -> <|
     "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 
      NeuralNetworks`SizeT, "$InputDimensions" -> 
      NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.944619198508278*^9},
 CellLabel->"Out[91]=",
 CellID->1029955719,ExpressionUUID->"fac015e7-d551-4cc0-88dd-8f783adc9ba9"],

Cell[BoxData["Tanh"], "Output",
 CellChangeTimes->{3.944619198514085*^9},
 CellLabel->"Out[92]=",
 CellID->1747574413,ExpressionUUID->"56008ef6-e1ea-4b54-98b6-299e01ff410d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["LinearLayer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                  GrayLevel[1], ImageSize -> 36, 
                  PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
                InsetBox[
                 FrameBox[
                  StyleBox[
                  "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                   RGBColor[0.66, 0, 0], FrontFaceColor -> 
                   RGBColor[0.66, 0, 0], BackFaceColor -> 
                   RGBColor[0.66, 0, 0], GraphicsColor -> 
                   RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                   FontColor -> RGBColor[0.66, 0, 0]], Background -> 
                  GrayLevel[1, 0.9], BaselinePosition -> (Center -> Center), 
                  FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                  RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
               ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
              GridBox[{{
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                 ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                  GrayLevel[1], ImageSize -> 36, 
                  PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
                InsetBox[
                 FrameBox[
                  StyleBox[
                  "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                   RGBColor[0.66, 0, 0], FrontFaceColor -> 
                   RGBColor[0.66, 0, 0], BackFaceColor -> 
                   RGBColor[0.66, 0, 0], GraphicsColor -> 
                   RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                   FontColor -> RGBColor[0.66, 0, 0]], Background -> 
                  GrayLevel[1, 0.9], BaselinePosition -> (Center -> Center), 
                  FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                  RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
               ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
              GridBox[{{
                 TagBox[
                  ItemBox[
                   StyleBox["Parameters", FontWeight -> Bold]], 
                  "SummaryItem"], 
                 TagBox[
                  ItemBox[""], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox["\"4\"", "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  ItemBox[
                   StyleBox["Arrays", FontWeight -> Bold], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"], 
                 TagBox[
                  ItemBox[
                   StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]\[DottedSquare]\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                   "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  ItemBox[
                   StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"], 
                 TagBox[
                  ItemBox[
                   StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  ItemBox[
                   StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"], 
                 TagBox[
                  ItemBox[
                   StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    LinearLayer[<|
     "Type" -> "Linear", 
      "Arrays" -> <|
       "Weights" -> 
        NeuralNetworks`TensorT[{4, NeuralNetworks`SizeT}, 
          NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
          NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
      "Parameters" -> <|
       "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 
        NeuralNetworks`SizeT, "$InputDimensions" -> 
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>,
       "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
          NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT],
           NeuralNetworks`AtomT]|>, 
      "Outputs" -> <|
       "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, <|
     "Version" -> "14.1.2", "Unstable" -> False|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["LinearLayer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                  GrayLevel[1], ImageSize -> 36, 
                  PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
                InsetBox[
                 FrameBox[
                  StyleBox[
                  "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                   RGBColor[0.66, 0, 0], FrontFaceColor -> 
                   RGBColor[0.66, 0, 0], BackFaceColor -> 
                   RGBColor[0.66, 0, 0], GraphicsColor -> 
                   RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                   FontColor -> RGBColor[0.66, 0, 0]], Background -> 
                  GrayLevel[1, 0.9], BaselinePosition -> (Center -> Center), 
                  FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                  RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
               ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
              GridBox[{{
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                 ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                  GrayLevel[1], ImageSize -> 36, 
                  PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
                InsetBox[
                 FrameBox[
                  StyleBox[
                  "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                   RGBColor[0.66, 0, 0], FrontFaceColor -> 
                   RGBColor[0.66, 0, 0], BackFaceColor -> 
                   RGBColor[0.66, 0, 0], GraphicsColor -> 
                   RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                   FontColor -> RGBColor[0.66, 0, 0]], Background -> 
                  GrayLevel[1, 0.9], BaselinePosition -> (Center -> Center), 
                  FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                  RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
               ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
              GridBox[{{
                 TagBox[
                  ItemBox[
                   StyleBox["Parameters", FontWeight -> Bold]], 
                  "SummaryItem"], 
                 TagBox[
                  ItemBox[""], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox["\"7\"", "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  ItemBox[
                   StyleBox["Arrays", FontWeight -> Bold], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"], 
                 TagBox[
                  ItemBox[
                   StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                   "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  ItemBox[
                   StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"], 
                 TagBox[
                  ItemBox[
                   StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0},
                     {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  ItemBox[
                   StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"], 
                 TagBox[
                  ItemBox[
                   StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                   Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                   GrayLevel[0.85]], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    LinearLayer[<|
     "Type" -> "Linear", 
      "Arrays" -> <|
       "Weights" -> NeuralNetworks`TensorT[{7, 4}, NeuralNetworks`RealT], 
        "Biases" -> NeuralNetworks`Nullable[
          NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]]|>, 
      "Parameters" -> <|
       "OutputDimensions" -> {7}, "$OutputSize" -> 7, "$InputSize" -> 4, 
        "$InputDimensions" -> {4}|>, 
      "Inputs" -> <|
       "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
      "Outputs" -> <|
       "Output" -> NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>|>, <|
     "Version" -> "14.1.2", "Unstable" -> False|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.944619198538205*^9},
 CellLabel->"Out[93]=",
 CellID->349319272,ExpressionUUID->"459d45ce-fcee-4db7-92aa-f1d7fde0b770"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"linearLayer1\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["LinearLayer",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}}}, {
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                  Center, Center, 32], 
                 InsetBox[
                  FormBox[
                   FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
               
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}}}, {
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                  Center, Center, 32], 
                 InsetBox[
                  FormBox[
                   FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
               
               GridBox[{{
                  TagBox[
                   ItemBox[
                    StyleBox["Parameters", Bold]], "SummaryItem"], 
                  TagBox[
                   ItemBox[""], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"4\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]\[DottedSquare]\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TagBox[
                    TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     LinearLayer[<|
      "Type" -> "Linear", 
       "Arrays" -> <|
        "Weights" -> 
         NeuralNetworks`TensorT[{4, NeuralNetworks`SizeT}, 
           NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
           NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
       "Parameters" -> <|
        "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 
         NeuralNetworks`SizeT, "$InputDimensions" -> 
         NeuralNetworks`ListT[
          NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
       "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
           NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
           NeuralNetworks`AtomT]|>, 
       "Outputs" -> <|
        "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, <|
      "Version" -> "14.1.2", "Unstable" -> False|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"activationLayer1\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["ElementwiseLayer",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.25, 0.599125, 0.5153350000000001], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571]}}}, 
                 InsetBox[
                  GraphicsBox[{{}, {{{}, {}, 
                    TagBox[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    NCache[
                    Rational[1, 60], 0.016666666666666666`]], 
                    Hue[0.47, 0.97, 0.61], 
                    AbsoluteThickness[1.3]], 
                    LineBox[CompressedData["
1:eJxdkj9owkAUh0NHcXQudFPXuIrdnOPsJDibbpI6uHR2baVbOzs5uCni7CRI
l0JKQEpFWmrpH1pp7t7LB95B+PJxye/e3b2zVqfRPvE8z08fQx2z7GVyevUS
TA7TzC+qufVd+IeXmoP5R/EXj6PCqB7/4MMbM77xhg38wk1aNfeJp2EmEb80
cdEe9+14x7eBCXzD70NT4Csu9e9wm17cOvU9O/VscLudKHHWi538R/za5j3g
Pfv/yvl+iXft/ALvWx/j7tD52jEXcCb5UPJXUOuDWj/U/UGpP4F5OR94K+cH
9Xyhnj/U+4F6f7Ai9wtl3T3U/oDaP1D7C2r/wSfpT1iW/oWh9DfU/od6DecZ
/wGMMjr0
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag#1"]& ]}}, {{}, {}}}, {
                   DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> GrayLevel[0, 0.3], 
                    Background -> GrayLevel[0, 0], DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {25, 25}, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> 
                    True, "IncludeHighlighting" -> "CurrentSet", 
                    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotRange -> {{-2., 2.}, {0, 2.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {{}, {}}}], {14, 14}, Center, 
                  Scaled[0.784]]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                 ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.25, 0.599125, 0.5153350000000001], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571]}}}, 
                 InsetBox[
                  GraphicsBox[{{}, {{{}, {}, 
                    TagBox[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    NCache[
                    Rational[1, 60], 0.016666666666666666`]], 
                    Hue[0.47, 0.97, 0.61], 
                    AbsoluteThickness[1.3]], 
                    LineBox[CompressedData["
1:eJxdkj9owkAUh0NHcXQudFPXuIrdnOPsJDibbpI6uHR2baVbOzs5uCni7CRI
l0JKQEpFWmrpH1pp7t7LB95B+PJxye/e3b2zVqfRPvE8z08fQx2z7GVyevUS
TA7TzC+qufVd+IeXmoP5R/EXj6PCqB7/4MMbM77xhg38wk1aNfeJp2EmEb80
cdEe9+14x7eBCXzD70NT4Csu9e9wm17cOvU9O/VscLudKHHWi538R/za5j3g
Pfv/yvl+iXft/ALvWx/j7tD52jEXcCb5UPJXUOuDWj/U/UGpP4F5OR94K+cH
9Xyhnj/U+4F6f7Ai9wtl3T3U/oDaP1D7C2r/wSfpT1iW/oWh9DfU/od6DecZ
/wGMMjr0
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag#1"]& ]}}, {{}, {}}}, {
                   DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> GrayLevel[0, 0.3], 
                    Background -> GrayLevel[0, 0], DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {25, 25}, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> 
                    True, "IncludeHighlighting" -> "CurrentSet", 
                    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotRange -> {{-2., 2.}, {0, 2.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {{}, {}}}], {14, 14}, Center, 
                  Scaled[0.784]]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                 ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
               GridBox[{{
                  TagBox[
                   ItemBox[
                    StyleBox["Parameters", Bold]], "SummaryItem"], 
                  TagBox[
                   ItemBox[""], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Function\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Function\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Function"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Function\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Function"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Ramp\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     ElementwiseLayer[<|
      "Type" -> "Elementwise", "Arrays" -> <||>, 
       "Parameters" -> <|
        "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
         "$Dimensions" -> {4}|>, 
       "Inputs" -> <|
        "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
       "Outputs" -> <|
        "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, <|
      "Version" -> "14.1.2", "Unstable" -> False|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"linearLayer2\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["LinearLayer",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}}}, {
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                  Center, Center, 32], 
                 InsetBox[
                  FormBox[
                   FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
               
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}}}, {
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                  Center, Center, 32], 
                 InsetBox[
                  FormBox[
                   FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
               
               GridBox[{{
                  TagBox[
                   ItemBox[
                    StyleBox["Parameters", Bold]], "SummaryItem"], 
                  TagBox[
                   ItemBox[""], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"7\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TagBox[
                    TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     LinearLayer[<|
      "Type" -> "Linear", 
       "Arrays" -> <|
        "Weights" -> NeuralNetworks`TensorT[{7, 4}, NeuralNetworks`RealT], 
         "Biases" -> NeuralNetworks`Nullable[
           NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]]|>, 
       "Parameters" -> <|
        "OutputDimensions" -> {7}, "$OutputSize" -> 7, "$InputSize" -> 4, 
         "$InputDimensions" -> {4}|>, 
       "Inputs" -> <|
        "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
       "Outputs" -> <|
        "Output" -> NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>|>, <|
      "Version" -> "14.1.2", "Unstable" -> False|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"activationLayer2\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["ElementwiseLayer",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.25, 0.599125, 0.5153350000000001], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571]}}}, 
                 InsetBox[
                  GraphicsBox[{{}, {{{}, {}, 
                    TagBox[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    NCache[
                    Rational[1, 60], 0.016666666666666666`]], 
                    Hue[0.47, 0.97, 0.61], 
                    AbsoluteThickness[1.3]], 
                    LineBox[CompressedData["
1:eJxdk19IU3EUxy/R02pBtCDIPwRFK4MKhUCQb9tDvoQ1o4dg9RBIBYULC3RG
BBFCQSsapGMV/bOgTCsfNiq+su5TxiAamCXRdGrT7ZZklrEk7z3nqQOXy49z
f9/zPed87rrDzY1NSwzDqF587LfGQOb12kN7hy0mKi5MBxIL3PHi0Xb/A4sn
61xDd0N/uX+q+1v+uMVNwUjqp7fEp4VLK0tei9mw50l99g/buudajY9Fxrrs
mOe2noPuPWeLbHQEf/NO7Y0yt6dIW63O9YsdNZ/mq7oKXBSzFXk/eqTt2LIC
22258Cyr1vS69x2dZrUTP9g74j2xu2eKhYAtOMNxD83YUJ73QrbB7xxMvjx/
OvdV/VvccDuSKH83SUfdW+DGt4N9pdiE+svTd/GU6w3G1c8k41dWRBOvxui0
E86xqVRZ+3DVqNbLclf28dgB3xfV/8xrgaVBX2SEnY7eMDP+VMvqwAeece5n
eDVeWTGXfq/fp3n9eUNHcn2arU7eZMvWVFlng8lzzrmfZjBan2zup/FfaB6a
h5xNtMt9DIg+bok+RD+Dy1If6g/qD+of6h/aH7Q/iP8ctH8sl/ngpswHcZkf
/DI/6Hyh81V9Czp/6H6g+9F6M9D9oUb2iz7Zr9afxRbZP5QPKB9QfqD8QPmC
8gXlD8ofRoVPhIVPbBZ+8Uz4RUj4hvKt/heg/EPXsFP/D/wDv36wTQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag#1"]& ]}}, {{}, {}}}, {
                   DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> GrayLevel[0, 0.3], 
                    Background -> GrayLevel[0, 0], DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {25, 25}, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> 
                    True, "IncludeHighlighting" -> "CurrentSet", 
                    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{-2., 2.}, {-0.9640275800758169, 
                    0.9640275800758169}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {{}, {}}}], {14, 14}, Center, 
                  Scaled[0.784]]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                 ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.25, 0.599125, 0.5153350000000001], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571]}}}, 
                 InsetBox[
                  GraphicsBox[{{}, {{{}, {}, 
                    TagBox[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    NCache[
                    Rational[1, 60], 0.016666666666666666`]], 
                    Hue[0.47, 0.97, 0.61], 
                    AbsoluteThickness[1.3]], 
                    LineBox[CompressedData["
1:eJxdk19IU3EUxy/R02pBtCDIPwRFK4MKhUCQb9tDvoQ1o4dg9RBIBYULC3RG
BBFCQSsapGMV/bOgTCsfNiq+su5TxiAamCXRdGrT7ZZklrEk7z3nqQOXy49z
f9/zPed87rrDzY1NSwzDqF587LfGQOb12kN7hy0mKi5MBxIL3PHi0Xb/A4sn
61xDd0N/uX+q+1v+uMVNwUjqp7fEp4VLK0tei9mw50l99g/buudajY9Fxrrs
mOe2noPuPWeLbHQEf/NO7Y0yt6dIW63O9YsdNZ/mq7oKXBSzFXk/eqTt2LIC
22258Cyr1vS69x2dZrUTP9g74j2xu2eKhYAtOMNxD83YUJ73QrbB7xxMvjx/
OvdV/VvccDuSKH83SUfdW+DGt4N9pdiE+svTd/GU6w3G1c8k41dWRBOvxui0
E86xqVRZ+3DVqNbLclf28dgB3xfV/8xrgaVBX2SEnY7eMDP+VMvqwAeece5n
eDVeWTGXfq/fp3n9eUNHcn2arU7eZMvWVFlng8lzzrmfZjBan2zup/FfaB6a
h5xNtMt9DIg+bok+RD+Dy1If6g/qD+of6h/aH7Q/iP8ctH8sl/ngpswHcZkf
/DI/6Hyh81V9Czp/6H6g+9F6M9D9oUb2iz7Zr9afxRbZP5QPKB9QfqD8QPmC
8gXlD8ofRoVPhIVPbBZ+8Uz4RUj4hvKt/heg/EPXsFP/D/wDv36wTQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag#1"]& ]}}, {{}, {}}}, {
                   DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, AxesStyle -> GrayLevel[0, 0.3], 
                    Background -> GrayLevel[0, 0], DisplayFunction :> 
                    Identity, Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {25, 25}, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> 
                    True, "IncludeHighlighting" -> "CurrentSet", 
                    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {
                    "DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{-2., 2.}, {-0.9640275800758169, 
                    0.9640275800758169}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {{}, {}}}], {14, 14}, Center, 
                  Scaled[0.784]]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                 ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
               GridBox[{{
                  TagBox[
                   ItemBox[
                    StyleBox["Parameters", Bold]], "SummaryItem"], 
                  TagBox[
                   ItemBox[""], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Function\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Function\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Function"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Function\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Function"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Tanh\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     ElementwiseLayer[<|
      "Type" -> "Elementwise", "Arrays" -> <||>, 
       "Parameters" -> <|
        "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
         "$Dimensions" -> {7}|>, 
       "Inputs" -> <|
        "Input" -> NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>, 
       "Outputs" -> <|
        "Output" -> NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>|>, <|
      "Version" -> "14.1.2", "Unstable" -> False|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"linearLayer3\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["LinearLayer",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}}}, {
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                  Center, Center, 32], 
                 InsetBox[
                  FormBox[
                   FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
               
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}}}, {
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                  Center, Center, 32], 
                 InsetBox[
                  FormBox[
                   FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
               
               GridBox[{{
                  TagBox[
                   ItemBox[
                    StyleBox["Parameters", Bold]], "SummaryItem"], 
                  TagBox[
                   ItemBox[""], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"1\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]7\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TagBox[
                    TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 7\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     LinearLayer[<|
      "Type" -> "Linear", 
       "Arrays" -> <|
        "Weights" -> NeuralNetworks`TensorT[{1, 7}, NeuralNetworks`RealT], 
         "Biases" -> NeuralNetworks`Nullable[
           NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
       "Parameters" -> <|
        "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 7, 
         "$InputDimensions" -> {7}|>, 
       "Inputs" -> <|
        "Input" -> NeuralNetworks`TensorT[{7}, NeuralNetworks`RealT]|>, 
       "Outputs" -> <|
        "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
      "Version" -> "14.1.2", "Unstable" -> False|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.944619198586974*^9},
 CellLabel->"Out[94]=",
 CellID->1936197253,ExpressionUUID->"91d9e507-0423-426e-b5aa-4e3a48ceae6e"]
}, Open  ]],

Cell["code 5.5", "CodeCaption",
 CellChangeTimes->{{3.9446192460125103`*^9, 3.944619247069035*^9}},
 CellID->847528180,ExpressionUUID->"6bab135a-1340-47d2-a8f9-6068adefb5f7"],

Cell["\<\
(* The code constructs a NetGraph object, which represents a neural network \
model with named layers. The network consists of two linear layers denoted as \
\[OpenCurlyDoubleQuote]linear1\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]linear2\[CloseCurlyDoubleQuote], connected \
sequentially where the output of \[OpenCurlyDoubleQuote]linear1\
\[CloseCurlyDoubleQuote] serves as the input to \
\[OpenCurlyDoubleQuote]linear2\[CloseCurlyDoubleQuote]. The subsequent \
operations involve extracting specific components from the network. Firstly, \
it extracts the layer named \[OpenCurlyDoubleQuote]linear1\
\[CloseCurlyDoubleQuote], which retrieves the first linear layer from the \
network. Secondly, it extracts all layers from the network, providing a list \
containing both \[OpenCurlyDoubleQuote]linear1\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]linear2\[CloseCurlyDoubleQuote]. These operations \
exemplify the ability to access individual layers or all layers collectively \
within a NetGraph object, facilitating tasks such as layer inspection and \
manipulation: *)\
\>", "comment",
 CellChangeTimes->{{3.94461925391798*^9, 3.944619262474053*^9}},
 CellID->1032845936,ExpressionUUID->"df6f93d1-a58a-43ef-ad6a-5958643e9dbc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<linear1\>\"", "->", 
        RowBox[{"LinearLayer", "[", "2", "]"}]}], ",", 
       RowBox[{"\"\<linear2\>\"", "->", 
        RowBox[{"LinearLayer", "[", "5", "]"}]}]}], "|>"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<linear1\>\"", "->", "\"\<linear2\>\""}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NetExtract", "[", 
  RowBox[{"graph", ",", "\"\<linear1\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"NetExtract", "[", 
  RowBox[{"graph", ",", "All"}], "]"}]}], "Input",
 CellChangeTimes->{{3.944619267432846*^9, 3.94461930798281*^9}},
 CellLabel->"In[95]:=",
 CellID->1434114704,ExpressionUUID->"602b8db2-4b1d-4076-927a-a2db564444ae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 
                    20.}, {19.903200149536133`, 16.}, {17.903200149536133`, 
                    14.}, {13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    16.}, {7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    12.}, {7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    Hue[
                    0.9744623655913979, 0.4881889763779528, 
                    0.996078431372549], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {
                    18., 21.}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {
                    12., 16.}}}]}, {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6.,
                     21.}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                    10.}}}]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 
                    20.}, {19.903200149536133`, 16.}, {17.903200149536133`, 
                    14.}, {13.903200149536133`, 14.}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    16.}, {7.903200149536133, 20.}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 
                    14.}, {9.903200149536133, 14.}, {7.903200149536133, 
                    12.}, {7.903200149536133, 8.}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    Hue[
                    0.9744623655913979, 0.4881889763779528, 
                    0.996078431372549], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {
                    18., 21.}}}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {
                    12., 16.}}}]}, {
                   FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6.,
                     21.}}}]}, {
                   FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 
                    10.}}}]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = 2}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -9}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"linear1\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -20.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"linear2\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-41, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -20.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -9}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]], 
                    StyleBox[{
                    InsetBox[
                    StyleBox[
                    "\"\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.143591762329427*^-7, 
                    5.4999999999999964`}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999993, -3.897439567871685*^-8}], 
                    InsetBox[
                    StyleBox[
                    "\"2\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917623294271`*^-7, 
                    5.499999999999997}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999994, -3.897439567871686*^-8}], 
                    InsetBox[
                    StyleBox[
                    "\"5\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FrontFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], BackFaceColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], GraphicsColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177], FontColor -> 
                    RGBColor[0.5615686274509804, 0.6211764705882353, 
                    0.6305882352941177]], 
                    
                    Offset[{2.1435917623294271`*^-7, 
                    5.499999999999997}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999994, -3.897439567871686*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999999999993`,
                     6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[10], {0.9999999999999998, -3.897439567871687*^-8}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999999999993`,
                     3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -3.8974395678716865`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -3.8974395678716865`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[10], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    RGBColor[
                    0.4658823529411765, 0.6176470588235294, 
                    0.6494117647058824]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                    GrayLevel[1], ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}], {-1.9999999999999993`,
                     5.3589794058235685`*^-8}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"linear1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["linear1", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                    GrayLevel[1], ImageSize -> 36, 
                    PlotRange -> {{-2, 30}, {-2, 30}}], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"linear2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["linear2", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    
                    GeneralUtilities`Graphics`PackagePrivate`\
makeSelectionHighlighter[
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    
                    Part[{8, 31, 31, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Part[{
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                    RGBColor[0.817375, 0.318085, 0.3521275], 
                    RGBColor[0.817375, 0.318085, 0.3521275], 
                    RGBColor[0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    StandardForm, Graphics], 
                    ImageSizeCache -> {{90.00000000000003, 
                    135.00000000000003`}, {-32.927552609276105`, 
                    12.072447390723895`}}]}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{35., 35.}, {35., 25.}}, 
                    ImageSize -> {234.99999999999994`, 60.00000643077529}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "linear1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`TensorT[{
                    2, NeuralNetworks`SizeT}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`TensorT[{5, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "linear1"], 
                    NeuralNetworks`NetPath["Nodes", "linear2"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "linear1"], 
                    NeuralNetworks`NetPath["Nodes", "linear2"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    ImageSizeCache -> {
                    302.979345703125, {106.22576904296875`, 
                    114.58087158203125`}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
    "Nodes" -> <|
     "linear1" -> <|
       "Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{2, NeuralNetworks`SizeT}, 
            NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 
          NeuralNetworks`SizeT, "$InputDimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
      "linear2" -> <|
       "Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> NeuralNetworks`TensorT[{5, 2}, NeuralNetworks`RealT], 
          "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {5}, "$OutputSize" -> 5, "$InputSize" -> 2, 
          "$InputDimensions" -> {2}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "linear1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "linear2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "linear1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "linear2", "Outputs", "Output"]}|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.944619308309369*^9},
 CellLabel->"Out[95]=",
 CellID->1792348384,ExpressionUUID->"8e72c1ca-ec62-41cf-ba39-442c001b2256"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinearLayer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{
                  EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                  FaceForm[
                   RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                  
                  RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                   7]}, {
                  Thickness[0.03571428571428571], {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   RGBColor[
                   0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                   FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
                GrayLevel[1], ImageSize -> 36, 
                PlotRange -> {{-2, 30}, {-2, 30}}], Center, Center, 32], 
              InsetBox[
               FrameBox[
                StyleBox[
                "\"uninitialized\"", StripOnInput -> False, LineColor -> 
                 RGBColor[0.66, 0, 0], FrontFaceColor -> RGBColor[0.66, 0, 0],
                  BackFaceColor -> RGBColor[0.66, 0, 0], GraphicsColor -> 
                 RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, FontColor -> 
                 RGBColor[0.66, 0, 0]], Background -> GrayLevel[1, 0.9], 
                BaselinePosition -> (Center -> Center), 
                FrameMargins -> {{0, 0}, {-1.5, -1.5}}, FrameStyle -> None, 
                RoundingRadius -> 3, StripOnInput -> False], {14, 14}]}, 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-12, 40}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                ItemBox[
                 StyleBox["Parameters", FontWeight -> Bold]], "SummaryItem"], 
               
               TagBox[
                ItemBox[""], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"2\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox["Arrays", FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, 
                    {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 
                    4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 
                    17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25,
                     17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {
                    12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                   StyleBox[
                   "\"(\[VeryThinSpace]size: 2\[Times]\[DottedSquare]\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                 "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LinearLayer[<|
   "Type" -> "Linear", 
    "Arrays" -> <|
     "Weights" -> 
      NeuralNetworks`TensorT[{2, NeuralNetworks`SizeT}, NeuralNetworks`RealT],
       "Biases" -> NeuralNetworks`Nullable[
        NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]|>, 
    "Parameters" -> <|
     "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 
      NeuralNetworks`SizeT, "$InputDimensions" -> 
      NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.944619308330133*^9},
 CellLabel->"Out[96]=",
 CellID->1246173419,ExpressionUUID->"396fe0f5-f9fb-4d67-8a9f-f32eabc29a5b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"linear1\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["LinearLayer",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}}}, {
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                  Center, Center, 32], 
                 InsetBox[
                  FormBox[
                   FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
               
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}}}, {
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                  Center, Center, 32], 
                 InsetBox[
                  FormBox[
                   FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
               
               GridBox[{{
                  TagBox[
                   ItemBox[
                    StyleBox["Parameters", Bold]], "SummaryItem"], 
                  TagBox[
                   ItemBox[""], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"2\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]\[DottedSquare]\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TagBox[
                    TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     LinearLayer[<|
      "Type" -> "Linear", 
       "Arrays" -> <|
        "Weights" -> 
         NeuralNetworks`TensorT[{2, NeuralNetworks`SizeT}, 
           NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
           NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]|>, 
       "Parameters" -> <|
        "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 
         NeuralNetworks`SizeT, "$InputDimensions" -> 
         NeuralNetworks`ListT[
          NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
       "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
           NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
           NeuralNetworks`AtomT]|>, 
       "Outputs" -> <|
        "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, <|
      "Version" -> "14.1.2", "Unstable" -> False|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"linear2\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["LinearLayer",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}}}, {
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                  Center, Center, 32], 
                 InsetBox[
                  FormBox[
                   FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
               
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 InsetBox[
                  GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {7.250000953674316, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {14.000000953674316`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                    9.64120101928711}, {20.750001907348633`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {7.249997138977051, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {13.999998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                    9.64120101928711}, {20.749998092651367`, 
                    18.079200744628906`}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                    "]]}}}}}, {
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                    ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                  Center, Center, 32], 
                 InsetBox[
                  FormBox[
                   FrameBox[
                    StyleBox["\"uninitialized\"", 
                    RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                    StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                    FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {-1.5, -1.5}}, RoundingRadius -> 
                    3, BaselinePosition -> (Center -> Center), StripOnInput -> 
                    False], TraditionalForm], {14, 14}]}, {
                ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                 PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
               
               GridBox[{{
                  TagBox[
                   ItemBox[
                    StyleBox["Parameters", Bold]], "SummaryItem"], 
                  TagBox[
                   ItemBox[""], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"5\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[Times]2\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], 
                    RGBColor[0.66, 0, 0]], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TagBox[
                    TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, "RowDefault"], Short], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"], 
                  TagBox[
                   ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     LinearLayer[<|
      "Type" -> "Linear", 
       "Arrays" -> <|
        "Weights" -> NeuralNetworks`TensorT[{5, 2}, NeuralNetworks`RealT], 
         "Biases" -> NeuralNetworks`Nullable[
           NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]|>, 
       "Parameters" -> <|
        "OutputDimensions" -> {5}, "$OutputSize" -> 5, "$InputSize" -> 2, 
         "$InputDimensions" -> {2}|>, 
       "Inputs" -> <|
        "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
       "Outputs" -> <|
        "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>, <|
      "Version" -> "14.1.2", "Unstable" -> False|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.944619308357675*^9},
 CellLabel->"Out[97]=",
 CellID->28643942,ExpressionUUID->"98babf99-6a14-4e2c-8d33-8468588c2782"]
}, Open  ]],

Cell["code 5.6", "CodeCaption",
 CellChangeTimes->{{3.9446193302475758`*^9, 3.944619331504921*^9}},
 CellID->382396266,ExpressionUUID->"03c1a4b4-0d35-4e96-8e8d-6630daf89cde"],

Cell["\<\
(* The code initializes a linear layer with two input neurons and two output \
neurons. The layer is randomly initialized, and then the weight matrix is \
extracted from the layer. The weight matrix represents the parameters of the \
layer that map inputs to outputs. By using NetExtract with the argument \
\[OpenCurlyDoubleQuote]Weights\[CloseCurlyDoubleQuote], only the weight \
matrix of the layer is retrieved. Finally, the weight matrix is converted to \
a standard matrix format using Normal to display its values: *)\
\>", "comment",
 CellChangeTimes->{{3.944619338698127*^9, 3.9446193418163958`*^9}},
 CellID->382364883,ExpressionUUID->"8f8bb0bc-44d1-4815-a579-97f6651ad284"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"layer", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"LinearLayer", "[", 
    RowBox[{"2", ",", 
     RowBox[{"\"\<Input\>\"", "->", "2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NetExtract", "[", 
   RowBox[{"layer", ",", "\"\<Weights\>\""}], "]"}], "//", 
  "Normal"}]}], "Input",
 CellChangeTimes->{{3.9446193441281443`*^9, 3.944619363498191*^9}},
 CellLabel->"In[98]:=",
 CellID->2125293798,ExpressionUUID->"001ca146-5525-4e84-913a-1900d87311d7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinearLayer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               EdgeForm[{
                 RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                 Thickness[0.03]}], 
               FaceForm[
                RGBColor[0.9855164, 0.9754575, 0.99025]], 
               
               RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                7]}, {
               Thickness[0.03571428571428571], {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                 9.64120101928711}, {7.250000953674316, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                 9.64120101928711}, {14.000000953674316`, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                 9.64120101928711}, {20.750001907348633`, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                 9.64120101928711}, {7.249997138977051, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                 9.64120101928711}, {13.999998092651367`, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                 9.64120101928711}, {20.749998092651367`, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                FaceForm[{
                  RGBColor[0.42065599999999986`, 0.018300000000000014`, 0.61], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                 "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
             GrayLevel[1], ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               EdgeForm[{
                 RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                 Thickness[0.03]}], 
               FaceForm[
                RGBColor[0.9855164, 0.9754575, 0.99025]], 
               
               RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                7]}, {
               Thickness[0.03571428571428571], {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                 9.64120101928711}, {7.250000953674316, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                 9.64120101928711}, {14.000000953674316`, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
                 9.64120101928711}, {20.750001907348633`, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                 9.64120101928711}, {7.249997138977051, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                 9.64120101928711}, {13.999998092651367`, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                RGBColor[
                0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                Opacity[1.], 
                CapForm["Round"], 
                JoinForm["Round"], 
                
                JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
                 9.64120101928711}, {20.749998092651367`, 
                 18.079200744628906`}}}, CurveClosed -> {0}]}, {
                FaceForm[{
                  RGBColor[0.42065599999999986`, 0.018300000000000014`, 0.61], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
                 "]]}}}, Background -> GrayLevel[1, 0], BaseStyle -> 
             GrayLevel[1], ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                ItemBox[
                 StyleBox["Parameters", FontWeight -> Bold]], "SummaryItem"], 
               
               TagBox[
                ItemBox[""], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"OutputDimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"2\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox["Arrays", FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                   StyleBox[
                   "\"(\[VeryThinSpace]size: 2\[Times]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Biases\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Biases\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Biases"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Biases\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Biases"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Input", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                ItemBox[
                 StyleBox[
                  RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"], 
               TagBox[
                ItemBox[
                 StyleBox[
                  
                  GraphicsBox[{}, 
                   BaselinePosition -> (Scaled[0.] -> Baseline), 
                   ImageSize -> {1, 11}], CacheGraphics -> False], 
                 Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                 GrayLevel[0.85]], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LinearLayer[<|
   "Type" -> "Linear", 
    "Arrays" -> <|
     "Weights" -> 
      RawArray["Real32",{{-0.3594474792480469, -0.04992305114865303}, \
{-1.127055048942566, 1.086535930633545}}], "Biases" -> 
      RawArray["Real32",{0., 0.}]|>, 
    "Parameters" -> <|
     "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 2, 
      "$InputDimensions" -> {2}|>, 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.944619363819598*^9},
 CellLabel->"Out[98]=",
 CellID->877048800,ExpressionUUID->"a4f4b138-ea17-48cb-9af0-577b39d937a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3594474792480469`"}], ",", 
     RowBox[{"-", "0.04992305114865303`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.127055048942566`"}], ",", "1.086535930633545`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9446193638346643`*^9},
 CellLabel->"Out[99]=",
 CellID->231428592,ExpressionUUID->"306443aa-ff30-494e-980b-53a6dd45ea7b"]
}, Open  ]],

Cell["code 5.7", "CodeCaption",
 CellChangeTimes->{{3.944619380709593*^9, 3.944619382663731*^9}},
 CellID->1327205123,ExpressionUUID->"103a4491-1454-4dbb-924e-87f3e5d156c6"],

Cell["\<\
(* The code initializes a neural network chain (NetChain) with three layers, \
each having two neurons, and with a total input size of 2. The layers are \
named \[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]b\[CloseCurlyDoubleQuote], and \
\[OpenCurlyDoubleQuote]c\[CloseCurlyDoubleQuote]. Following this \
initialization, the code extracts weights from the specified layers and all \
layers within the chain: *)\
\>", "comment",
 CellChangeTimes->{{3.9446193904861603`*^9, 3.94461939389561*^9}},
 CellID->2101663652,ExpressionUUID->"95aaa01b-04a7-470d-a6eb-62cfbffbaa7d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"chain", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetChain", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "->", "2"}], ",", 
        RowBox[{"\"\<b\>\"", "->", "2"}], ",", 
        RowBox[{"\"\<c\>\"", "->", "2"}]}], "|>"}], ",", 
      RowBox[{"\"\<Input\>\"", "->", "2"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NetExtract", "[", 
   RowBox[{"chain", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "\"\<Weights\>\""}], "}"}]}], "]"}], "//", 
  "Normal"}], "\[IndentingNewLine]", 
 RowBox[{"NetExtract", "[", 
  RowBox[{"chain", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", "\"\<Weights\>\""}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.944619401743743*^9, 3.944619440155636*^9}},
 CellLabel->"In[100]:=",
 CellID->533688799,ExpressionUUID->"83fbe633-0e5f-4561-b999-54e97fc19464"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               EdgeForm[{
                 RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                 Thickness[0.03]}], 
               FaceForm[
                RGBColor[0.9855164, 0.9754575, 0.99025]], 
               
               RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                7]}, {
               Thickness[0.03571428571428571], {
                FaceForm[{
                  RGBColor[
                  0.6274509803921569, 0.8156862745098039, 
                   0.49411764705882355`], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{6.221999645233154, 18.73400115966797}, {
                 9.045999526977539, 18.73400115966797}, {9.045999526977539, 
                 8.734001159667969}, {6.221999645233154, 8.734001159667969}, {
                 6.221999645233154, 18.73400115966797}}}]}, {
                FaceForm[{
                  RGBColor[0.42065599999999986`, 0.018300000000000014`, 0.61], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.81100082397461, 18.73400115966797}, {
                 15.635000228881836`, 18.73400115966797}, {
                 15.635000228881836`, 8.734001159667969}, {12.81100082397461, 
                 8.734001159667969}, {12.81100082397461, 
                 18.73400115966797}}}]}, {
                FaceForm[{
                  Hue[0.5247747747747747, 0.43, 0.86], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{19.39900016784668, 18.73400115966797}, {
                 22.222999572753906`, 18.73400115966797}, {
                 22.222999572753906`, 8.734001159667969}, {19.39900016784668, 
                 8.734001159667969}, {19.39900016784668, 
                 18.73400115966797}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 9.98699951171875, 15.73439884185791}, {11.868999481201172`, 
                 13.73439884185791}, {9.98699951171875, 11.73439884185791}, {
                 9.98699951171875, 15.73439884185791}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 16.575298309326172`, 15.73439884185791}, {
                 18.457298278808594`, 13.73439884185791}, {
                 16.575298309326172`, 11.73439884185791}, {
                 16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
             GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {15.430517578125, {0., 15.430517578125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               EdgeForm[{
                 RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                 Thickness[0.03]}], 
               FaceForm[
                RGBColor[0.9855164, 0.9754575, 0.99025]], 
               
               RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                7]}, {
               Thickness[0.03571428571428571], {
                FaceForm[{
                  RGBColor[
                  0.6274509803921569, 0.8156862745098039, 
                   0.49411764705882355`], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{6.221999645233154, 18.73400115966797}, {
                 9.045999526977539, 18.73400115966797}, {9.045999526977539, 
                 8.734001159667969}, {6.221999645233154, 8.734001159667969}, {
                 6.221999645233154, 18.73400115966797}}}]}, {
                FaceForm[{
                  RGBColor[0.42065599999999986`, 0.018300000000000014`, 0.61], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.81100082397461, 18.73400115966797}, {
                 15.635000228881836`, 18.73400115966797}, {
                 15.635000228881836`, 8.734001159667969}, {12.81100082397461, 
                 8.734001159667969}, {12.81100082397461, 
                 18.73400115966797}}}]}, {
                FaceForm[{
                  Hue[0.5247747747747747, 0.43, 0.86], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{19.39900016784668, 18.73400115966797}, {
                 22.222999572753906`, 18.73400115966797}, {
                 22.222999572753906`, 8.734001159667969}, {19.39900016784668, 
                 8.734001159667969}, {19.39900016784668, 
                 18.73400115966797}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 9.98699951171875, 15.73439884185791}, {11.868999481201172`, 
                 13.73439884185791}, {9.98699951171875, 11.73439884185791}, {
                 9.98699951171875, 15.73439884185791}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 16.575298309326172`, 15.73439884185791}, {
                 18.457298278808594`, 13.73439884185791}, {
                 16.575298309326172`, 11.73439884185791}, {
                 16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
             GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
             ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
             Dynamic[{
               Automatic, 
                4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "a" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "b" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "c" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "a", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "b", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "c", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"c\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  ImageSizeCache -> {
                   224.168212890625, {42.68572998046875, 51.04083251953125}}, 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "a" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          RawArray[
            "Real32",{{-0.3594474792480469, -0.04992305114865303}, \
{-1.127055048942566, 1.086535930633545}}], "Biases" -> 
          RawArray["Real32",{0., 0.}]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 2, 
          "$InputDimensions" -> {2}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
      "b" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          RawArray["Real32",{{
            1.8936456441879272`, -0.9311398267745972}, {-0.7739742994308472, 
            0.10107943415641785`}}], "Biases" -> 
          RawArray["Real32",{0., 0.}]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 2, 
          "$InputDimensions" -> {2}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
      "c" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          RawArray["Real32",{{0.07365617156028748, -1.183066964149475}, {
            0.025280077010393143`, 0.1203397884964943}}], "Biases" -> 
          RawArray["Real32",{0., 0.}]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 2, 
          "$InputDimensions" -> {2}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "a", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "b", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "a", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "c", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "b", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "c", "Outputs", "Output"]}, 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.944619441336266*^9},
 CellLabel->"Out[100]=",
 CellID->1876370138,ExpressionUUID->"3a69e1bb-39f0-4fe5-afdf-2a8522fa7f96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.8936456441879272`", ",", 
     RowBox[{"-", "0.9311398267745972`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7739742994308472`"}], ",", "0.10107943415641785`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9446194413524437`*^9},
 CellLabel->"Out[101]=",
 CellID->355553171,ExpressionUUID->"3ab146e3-95df-4954-bf11-2b64e1e94ef8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                   ImageSizeCache -> {
                   15.430517578125, {0., 15.430517578125}}], Appearance -> 
                 None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}}, 
                AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
             False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
           GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"],
                   ImageSizeCache -> {
                   15.430517578125, {0., 15.430517578125}}], Appearance -> 
                 None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"-", "0.3594474792480469`"}], "\", \"", 
                    RowBox[{"-", "0.04992305114865303`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
                AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
             False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     RawArray[
      "Real32",{{-0.3594474792480469, -0.04992305114865303}, \
{-1.127055048942566, 1.086535930633545}}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                   ImageSizeCache -> {
                   15.430517578125, {0., 15.430517578125}}], Appearance -> 
                 None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}}, 
                AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
             False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
           GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"],
                   ImageSizeCache -> {
                   15.430517578125, {0., 15.430517578125}}], Appearance -> 
                 None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"1.8936456441879272`", "\", \"", 
                    RowBox[{"-", "0.9311398267745972`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
                AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
             False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     RawArray["Real32",{{
      1.8936456441879272`, -0.9311398267745972}, {-0.7739742994308472, 
      0.10107943415641785`}}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NumericArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                   ImageSizeCache -> {
                   15.430517578125, {0., 15.430517578125}}], Appearance -> 
                 None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}}, 
                AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
             False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
           GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"],
                   ImageSizeCache -> {
                   15.430517578125, {0., 15.430517578125}}], Appearance -> 
                 None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Real32\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"0.07365617156028748`", "\", \"", 
                    RowBox[{"-", "1.183066964149475`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
                AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
             False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     RawArray["Real32",{{0.07365617156028748, -1.183066964149475}, {
      0.025280077010393143`, 0.1203397884964943}}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.944619441358354*^9},
 CellLabel->"Out[102]=",
 CellID->1482639043,ExpressionUUID->"d1febadb-8e3b-41cc-b844-f4f864ed0dae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Monitor Training Progress", "Subsection",
 CellChangeTimes->{{3.94461948598132*^9, 3.9446194911577387`*^9}},
 CellID->1016916310,ExpressionUUID->"3d643ac4-d627-481f-b38a-8c115467c9e3"],

Cell[TextData[{
 StyleBox["NetTrain[net,{input1->output1,input2->output2,\[Ellipsis]}]\t", 
  "CodeText"],
 "trains the specified neural net by giving the inputi as input and \
minimizing the discrepancy between the outputi and the actual output of the \
net, using an automatically chosen loss function."
}], "ItemParagraph",
 CellChangeTimes->{{3.944619501811884*^9, 3.944619511058661*^9}},
 CellID->386505054,ExpressionUUID->"9b71d8b2-cf3c-4c9e-b604-4c73d234428c"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3VdzHMfW7vk3ZiYm5nK+wvkCcz23czm3Z2I+wDkx591bW9racpRE0ciS
lN/ylER4DzS892g02pAA6D1oQO9BECQBeq6pzKqszqquBkAKZJPg/xexBAoE
G0CjuxORT62V/+W//+u//uf/9B//8R/v/m/Of/7rf/vg/3rnnf+29v/5353/
+X/ffPe1v735P/6///vN9/7H3/7HO//nf/+fnXf+H//rf/xHjVP/i/NnAQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADgBffgwQOZm7sZqGvXZuTc+Qt+HTs+LSenTwXeNzs7qz/2zp27hf4WAAAA
AAAAAAAAUED37t2XW7dvy5WrM3L23EU5fea8HDtxRg4dmda1a/9xmdg9JTt2
HZHkjgOBSqT3yfDYLr/6RiZkID4ReF8is19/bGbysL6dyd3HZM+B47LXq/2H
TsiRqVNyfPqMXLp0RS5fuSYz12dlfn6+0HcNAAAAAAAAAAAAnoLqd7qhepxm
ZuXylRk5c+6yHJ++IAePnJJde4/KWGaP9A/vkJ6BjLR2J6ShdURXWf2AFFX3
r1gV1/RLRcOAVMYGdVU3Dklje1zae5Myktwpo+ndkh7fL3v2H9Nf36kzl+TM
+cty4eJVuep87ep7mLt5Sx49elTouxQAAAAAAAAAAOCV9vDhQz0zb2Hhjtye
X5Abc7dl5vpNOXv+skzsOiiJ1E4ZGNkhsbb4EvnRQODPK1VPmmFVxQal0fla
O/uSEk9OyuTug7JrzyG5fHVWZm/ckrmbt2Xe+T5V3xcAAAAAAAAAAACevceP
3UxKneW0/+BRGd+5V+LJCWlsH32iHEhlRyW1A1JaNxj4s6qy+iGpaBiR8oZh
/baiIS4VsWxVNo4G/l69Vf/GLnV7quysyvz/k/ZeqX6r9t4xSe/YLcdPntY9
VOp+UAUAAAAAAAAAAICVo85gOn/hkhydOinbJ/dLc1dKYh1JqWkakarYsFTE
VJ4U3QtVWpfNm3SOFItLVVNCqpvHpKZlTGpbndtpSUpdW0rq292qa0tLQ4cq
9/8bnIp1mvelrT+rv0/rj69rTevbU7erSn0OUyrH0lmW87lVZmVyLPU1+dmV
6dfKk6OV1amZgENS2zKqv/+u/u2SSO+WfQen5NTps3Ll6jWd1wEAAAAAAAAA
AGD57t+/r8+Hmjp+SnbuOSJDY7uls3+7NHeNSW1z7lw+049k9zqZvqaqplEv
d0pKfXtSYp0pae5JS0tvsNr6M9I+kJGOwexbVer9bX3eW6daQ39u6XXKe6tu
V1VTd1oau9z8SleHm22p/Kq2JaW/HpVX6f6riH6rQF6Vp7+qtLZfqvSZVQlp
d77+nsFxSe44IIePnpQLFy/J7dvzhf4xAgAAAAAAAAAAvHDUXDp1TtSly1fl
8NQZ2bn3mCTSe6W9Nym1zcNSUmtlMqEMyvRAqQyqujmh+5/c/CkpjV0paepO
6fzIzpq6hjPSE3erd9SrREb6x7LVZ94msn/fa/951P333c5tdY+4t9mpaiib
bZnsyuRXTd1uqazK7ctK+f1adm9VOK8KzwMsqome91dePyAt3WMyODop47sO
ydHjZ+Tixcty48acPHjwoNA/ZgAAAAAAAAAAgIJQM+dUT8/Va7Ny5txlOXRk
WkbGJqWqcTiyF8qc/2T6odwMaszLoNweJdX3ZPqZ7PxJZUgqYxpMujXk1HAq
IyPptFsp923cKv2+VPbvwqX+vbqdAa9MlmXnVzq3MpnVUDarcnur3FI5VWNX
Rs8F9LOqlqQ/C9A+yyrbS9Ufyqlye6pUP1Vdy4gMjY7LxO5DcnL6vFxx7utb
zn3OvD8AAAAAAAAAALDaPX78WGcid+7ekytXr8u+A0elZyAjlbHBRbMolcuo
fEad36Rm4cW63ExH5Tsq51GZj8p/dAbl5UL9Kn9KZWTYy5FGnUo4NeZU0qmU
VeklKmn9O7sSXo2arMop9TlVmQzMZFZ2VmVnVP4swN5sThXrzOhzq+p1P1Uq
kFGpfMqe+2fP/IvqoTJV0TAgnX0p2b33sFy+MiO35xfkrvNzIKMCAAAAAAAA
AACrkZold/nKNRlNTepzosrqBtzeHz+P6tf/r3uiYnGvJ8o9l0n1E6nMRuU3
KtNROZTKeVSPksp+hqxeJjuDWk7utBKVsvIrk1X5vVdWZqW+Vt1XNep+D3ru
X0RO1eRlVA0dGfdcqlb3XCqTUdmz/oK9VKaPKjebKnHer+7zigZ1LtWopLbv
1hkVAAAAAAAAAADAy071Ry3ML8ipU2cluWO/dPSNS3N3SqpiQ35/j+mLKjfz
+ZrcLKqhIyWNejZfxFy+hNuLpGbsxVPBDOp55VDpdLDnKpxJmVwqZ/6fl08N
ptyeLtNHZc/76wjN+1P9U+6cv3Q2o2pORp5HFc6odE4V0T+l5vxVNw47P5OM
ZCb2658RAAAAAAAAAADAy0bNhpu9MSeHp6Ylkdkvnf0ZnYEUWX1RKo+yZ/Sp
M5XUWVFNVhaleohUVmOfD6XPhfKyKDOP73lkT2Z2n8me7PxpqQxq2Ct7xp+e
75e0zqTyZvz1jGSk2+RTg8F8Sp1DZWdU4R6qcEYVyKdqomf9qXyqpmlYuge2
y+Seo/pnNnN9Vh48YL4fAAAAAAAAAAB4cak5fercqKPHz8j2yYPS3JXQc/ns
LEplJGVWb1RdW1L3RqncRc2wU1mMP6Mv4c3oU1mUl/+s9Gy+cM+TfZaUyaAC
mVPKrWErbzKZ06CVOdm5kyr7z6ZMHtUb9zKpuPu9+71Tw+79ofI5M9/PP4Oq
y82nTP9U+Bwqk0+Fz6HKdxaVel9FbFCaO8ecn90BOT59Vi5fndH9bqrvDQAA
AAAAAAAAoNBUZnH//gO5MXdLzpy7JKPJ3VLdOBQ816i2X+ciqodHZSY1LWNS
357S/T8qa1GZi+oP0nmUl0UNW1mU6Y16VudAjebJncxbcy6UyZrCGVOg7ykR
7H8yOZOqnjz5U9dQtj8qqgJnT/VF90/ZGZXqofLzqYaRyP6p4jz9U6rKGwak
qWNU4slJOXz0pFy5dkNu317QfXAAAAAAAAAAAADPm2qhefTokdy5c1cuXLws
w4lxqWgI5lFFNW4mVe68v6pp1Ds3Ku3nUSprUXmM6hdS2c7gCvdFJa0KZ1B6
xp5Xg6lg5mTnToEZe+E8yavw+zqtOXwqU1KlzowyZ2TZGVR7KHdS1dbn/r8p
0ysVLt075fVPNer+qYx1BlVS53/Z/imVTw3rn4XdO7VURqXeX9M4JOM798vV
a9d1NkX/FAAAAAAAAAAAeJ4WFu7I8ZOnZXB0Qmqa4lJWn8021My+0roB3aej
chGTR6n8xO6P0rP6rDzqafqi7P4nuwcqfN6TmbM3YDInq6/J5E521tQ5lK1w
fhTIkPpzy/xdVJZk/5ucj+lxsyZVeXOo7mypLMr0TOk/d4azKe/8KednUJXn
7KnSnHwqKpvq15ljU8eY7Jg8oM+fAgAAAAAAAAAAeJZUf9Tt+Xk5OX1GEul9
0tyVDPRIqVxDZR06j9Lz+pLS0J6Spu60zlVUrqN6iVQGpLIhdRaTmpU3uow8
ajn5k3/OU9KtfjuD8vIn/+ymUD+TnydF5EGRuZCXCdk5UWRm5FWj9fHNVv5k
f7zKl3SFPtb+fDHr41QGZWb4+dWe1rmUzqZarWzKO3vKZFN+PqWyqboBXW4+
1Z/Np0IZlfq7WNuoc7/v1pnkzZu3mO0HAAAAAAAAAABW3O35BTkxfVZS4wek
eyAjlbHcPCp7flRSnx8V60wH5vXZeZTKkOKLzOuLOgcqHsqfhrz8yczgizrb
SWVQ4XOaonKmxq60NDpfb8yrho6UztTqQ6X6kOrb1NuUznzU/+etVpMNBd+v
biecJ/lZUpv7VuVL6v1+VmUyqPbgx4Y/X61f7tdX25LNpUzfVKXKpqJ6p8x8
v5r8s/1UNlXdNCydfRnZsfOgfkzcvHW70A9PAAAAAAAAAACwCty9e1euXJuV
/YeOS2dfOufsIZVjqFxD5Rwq+1D5iMp1zCw6lQepfEjlRQNWHpWwMilTJoMy
OZTug0q5M/hMH5TpgQrnT6qieqDCGZTKn+x8x8y7c89j8kplOM0J3V9kV3XT
mM7d/IqNBv5fnaHllvdv1Pv8v/NuQ9/2mP48fnbk9TTZVev9vcmxTCZW5398
+N+M+bedt/T34GVTjcFsqrw+m08t59ypouoB598P6sfE7v3H5OLlGbl9e77Q
D1cAAAAAAAAAAPCSefz4sZ7PdufOXTl1+rwMxCekvH4g1DeTzaNU3qL6h+wz
pFQupHqV9BlSY26uNOLlTWNL9EINh3Iovw9KZVDD2R6o8HlPJn+yMyiVkeWc
t2RlTjqbiY0EZtuZHqKVLHWb5nPocj6vyoYCOZeVdbkZVsLPsLI5VDBrCmdn
UaVvrzH8fvfzVET0Ttn5VHHNQN65frqcvytvGJSOvrTsP3RMbt6alwcPHurH
EAAAAAAAAAAAwFJUrjAzMys7dx+Qupa4m0lYWYQ5Q8rM7HN7pNw8SOVDZmaf
ypLMGVJxL38KZFBeDTk1mLLOgxoL9kLZfVAmgwrmT+a8peCMu+y5St7sugYv
f9HZizW3zj9T6dmW6UMyM/PCuZVdbnZl8qvRnDwpkCkto3Lyr5zbGFlGNmWV
1TelsqlsPpWU8xcvy/379wv9MAYAAAAAAAAAAC+42Rtzsmf/lDR2JKW6aURn
NtkzpFT24M3saxrT/Uc5PVJDbl+TypgGvR4pu1QO5Z8JNWbN5LPOg1Jlsig9
i68vNIvPz6DsGXjZ3iHVc2T3P5kcqFRlQrUDzzWLWk5OFS47tyoP91pF9Hbl
q3B/lumLiqw8udSi2VQgn3LPnlLZVHtvWsZ37pdLl64W+uEMAAAAAAAAAABe
QOocqRPTZ2U0tUca28eiZ/Y1jOh+nWyPVNrvkfLPkRrNZlKD1jw+P4vy5vL1
WDmUnUG1WjP5TBbl9kOlvTOW3LOgzAy7qBl0ZXWDkeckLV3W2VmRZyo9eanb
dCv7OXIq8LG52VWpl1Wp76s8Ykagm2Et3oO1VJZVEfr/8O0/yX1ZVj8g9a2j
0jcyKQeOTMudO3eY6wcAAAAAAAAAAOTBgwdy8dIV2XPguHT1b5eKhkErU3Gz
iPL6Yf8cqdqWlJ6Tp7IilRupLMnPpBJu/9OAlUHpuXyJ7Fw+VSaLMnP57AzK
PheqoSPlZ1EqCzNnJamvJWrenF9P1b+0MjnU4tlU/kzKzsMC73vCHqvwjMCl
eqqyNeRV9PlaT5PzldUNSHN3SvYfOi4XLl6We/eY7QcAAAAAAAAAwKvo0aNH
Mj+/IGfOXZKhxLievxbOQkyPlMqCVH9SeG6fypRUvmT6pPrsuXyj1hlRw+58
P/ucqFZ7Np/XD6VuW/Vhmdl81WYuX+NooCfq6XqhghlUTv7zEtVyZgL6+VSo
h2rxyv+xpZE9aOqxsvjXpv5NbfOIDMYn5Oz5S2RTAAAAAAAAAAC8YtRMtVu3
5+XA4RPS2B7PyRV0j1RDtkeqptmd26czqZ7oTMrPoEKz+UwO1Raaz+f2Rak8
KqP7r0wWle2Jys6cW/KMowL2Qr0olS+nKo3opVLnhJn7NPfvsjMB7VzL/vuo
TDCbaUbkZt7HDsTH5fTZC3L//gPm+gEAAAAAAAAA8IpYmF+Qyd1HdB9LiZUp
mP6WQCblnyWV8c+SUjmTyaRMDrVYBhWc0ZeRhg6n2r3eqBb3rCgzn0/1Rfk9
UcvtfYqYh/cqVzifsnOqxWcBRudUUbVYNhWZS+kzygb1uVM7dh7SvXoAAAAA
AAAAAGD1evjwoZw7f1HiyT1S1zIqJbXZLKOkdsA/j8g/S6rVPUsqKpPSNehW
+2BuFqU+3vRDqVK9Vu5ZUWn/vKhqf0afOS/K7eXJ3xtF/vTE5eVFxVF9TDqj
6s+bUy2nwrcXmU1ZH6/6r2LtYzKa2iNHp07K3Xv3Cv20AAAAAAAAAAAAK2xh
/o4cmZqWvpEJqWwYDuQH+TIp1dOksqVma3afyqXsvqi2vtBZUX5PVFpnWoHz
oprH9G1XNZneqNzzolROEsg0Cp3rrMbKm095pf4//D6/lp9NFVUH+6Xcj3fn
BFY3jUh7b1p275uSG3O3C/30AAAAAAAAAAAAK0D1SM3euCkHD5+Ulq5EoEdq
sUyq3sukVM6kMieVPZmeqHwz+rJ9Udk8ymRRpi9KzelbXm8UudSzrHy9U/6f
nyCbysml/GxqICKbGpSSOq9q3bl+k3um5OrMrH6sAgAAAAAAAACAl9ODBw/k
8tXrMr7zoNS3jARyCfc8oUGdSVXkOU9KZU3NvREZlNUXZWb1BfKollAeFTNz
+oa884kWPy+q0JnNq1hLn+P1ZOVmU1bvVCD/ymZT6vFQGRuSRGafXHEeq2RT
AAAAAAAAAAC8fB4/fiyXLl2WnsHxnAzCZFLlDdlMSuVIJpNSGZPKm0wOFc6i
3Bwqo3OofLP6ovKoRXujXoBshsqXWf2F3Ko6ONfPz6dU75TKpdRjQ2WjsWEZ
SuySubmb8vDho0I/fQAAAAAAAAAAwDLdv39fTkyfkrbetJ6X5+cL1eE+qZG8
mVRuP5TJoVL64+paU4EsqrrpSfIo92sxVejchXqG+VQgl/LK66dysymVS6nH
yrDUNI9K79AO2bv/sNyeXyj00wgAAAAAAAAAACxhYWFBjp08La09KSmrH7Ay
BXOWVCiTagpmUiqDauzMzaPcnqj8fVH69vyzo6LyKDKo1VDFfj61VC3RBxeR
TZU7j5+qprh09KVl38EpuTF3s9BPJwAAAAAAAAAAkMfs7JzsO3RMuga2h/pc
BiL7pOzzpFT2pDIouxbNo2Kjzu3EA1mUyrzU2VEmjyryq/B5CrXCVbOMWvI2
3MeHmedXVj/iZlONcd3rt/fAcZm9QTYFAAAAAAAAAMCL5sbNW7Jr71GJtY8u
mkmVe+dJBTOplH9WlMmizJlRi/VHhXujsv1Ry8wlKCqQTQ3rbMpUa29a9uyb
IpsCAAAAAAAAgBfQwsIdmZu7GahLly7LufMXdJ0+c04OHzkmZ86e89+n/t58
7MOHDwv9LeApPH4scufOXZnYdUga2uKBPf/FMimVM6nMyfRK2VlUTYubRYXz
KN0jpTOpbB4VnNf3AuQc1MtXJpuqHfTm+cV1qWyqoX1Mtk/s0+dNPXr0uNBP
NzwBtaaE16Tr12f99UfViZOn5LhT9vtmZq7rj13gjDEAAAAAAADguVP7euq8
ILVHd23muly6dEXOnLskJ0+dk2Mnz8rUiTOy79C0rp17j8n4riOBSu04IGOZ
fbpG03tkcHRCvzXvU39vPnbPgRP6dg4cPiWHj57265jzOdTnO3/hkvM1zOqa
u3lT7j94UOi7B44HzmNE7dvXtcQDuZCdSakqrx/WPU4qXzK9UiaXsnuiTKmP
qVJZVCCPCvZIqZl9el5foXMN6uUvcx6VesyqbKo+7uVT6jEbl+aupNwipyi4
x48fy7179+T27XmZnb0hV67OyPmLl+X0mQtyfPqsXpcOOeuGWkv2HDyZsyZt
nzzkrz+qRpK7dNnvUx+jPnZyzzF/fTt4JLsmHTl2Ro47n0d9zstXruk1SX0t
8zw+AAAAAAAAgGVT+ZPqebl567Y+I+jy1ety7uI1OTF9Xg4ePik79xyW1I69
MpyYkJ7BjLR0JaSxLS71LSMrvj9cWtcvVbFBv9TnaO1OSP/IDkmP79O1c88R
OXbynPM1XpWLl67pr9fNq27p/co7d+8W+i59JdyYuy2jqd1S2zwiJbXZn2FO
JtUwHDhTSuVOph+qxmRRTVZflD+rz82icvOobI9UwfMMavWU1TdV5vVNVXiZ
aFXTqM5fmen3fKj86cGDBzrrmZu7Jdeuzzqv9TNy5twVOXr8jOw7OCXjOw9I
Ir1LBpy1oaMvKY3to3pdqnTWjZV+bFQ0DPhrUk3jkPO54vpzjiZ36TVJfS37
Dx2XM+evynln7bx0eUauXJvV66lak1TREwwAAAAAAIBXkbvX91Du3bsvd+/d
k4U7d+X2/B25OjMrx0+elsndBySR2imt3aNSVv8Ue/6m5+AJy+wHP+nnK6sb
kLrmYf319g5lZMfOfbJn3xE5MX1Gf1/zTt25c0/u3b/PnuAKUzlgevyAVMWG
AvlQbiY15GdSplfK7YlKuD1RVl+U6YkKZ1GReRSZFPWMqtg7b0rN8StvUI9L
lZcmpLEjKRO7DuvHPlaGmgP66NEj/Rqt1qU7d++5M2FvzsuFi1dk/6Ep2TGx
T/qHtz/1dRDLXYNWYk1SpbIrlY919iUlnpzUa5IqlVOpNWlh4a5ef1XuptZk
AAAAAAAAYDWbn5+XE9OnZefuA7JjYq9096ekqnFEZwdl9e5ctNLa/rx9KGpO
m9m3M/mA/jdeZmDOEPL7Y7w8wlRlLB74GPV53c+dzR7U7ZbUWp/H3itc5GtS
/0Z9LSqrUt9LZWxYXz8/nBiXvfsPy9VrM4W++1cNtS+/ffKg7hvI2c+vDZ4p
VeGdKeVnUl5flOo/cWf0xQN5lJ1FuY/JQf82F3scUNRKlptNDelsSudSTUmp
aByTpq6UTOw+IjPXbxT6abgqqOsk1JlPe/Ye0utSPDkhTZ1j/ppUVueuMe6a
kO9n1R9Yk8xaYPdrBtYla00yrz3ua9WIvy5lX4OGctYke12K/HrM48f7Wsq8
dUndruot7exLSXrHHpk6dlJncQAAAAAAAMBqcffuPZm9cUOfy7T/4JR0D05I
W+92ibWP6b2x6qZh3RMV3utT/29yAFVmv87NFUa9GWymklLXlpL6dvetOiuo
vj2lS50Z1NARrFhHyv97c65QrXMbpofG75/xKrxvaPfNhHt0ovYHVcZW0TCk
zz5q7k7p+2B4bKdM7j4ox06ckgsXL8nNW7cK/aN6qdyYu6X7pKqXkUmZfeBK
K5fKmdVnnRsVntXn7kd7e8Hefm+h8wrqVSkvd9eP47jOpfxsqjMp47sOyW3O
E3oiqi/q9vy8XJuZ0ddHqNeR9r4d0tLtrAXNcb0uVcaG9CxX+2dh506mysN5
t1mXnLe1rd661OauQ/aaoyq8LjVErEtmPQqvS/brlp1d5cwWzXsdxYBed6sb
h6WhLSHtvTukb2RSktv3yr5DU3L6zDm5fOUq5ycCAAAAAADgpaDm1N26dVtO
nT4nBw6f0Ht+Q2O7pGdwXF9/Hsxxsvtk4QzB7LmpOWtqn6+uLSkN7Ulp7EpJ
U3dKmnvSulp63Wrtz0ibVe0D7tvWvuxbU+b/W3rtSuvbbexK64p1pvxqaM/u
LaoMTO0R6n3BnL4ae85bf945b+r7Lq8fkPrWuLT1pqR3aFxGU3tlz/5jej9w
5vqs3L/P9etRzAxIdZ6Umt0X3mst8ef3uf1q9uPJ5FJumT6FEbdCPQr2vD7O
kKIKWToPrc32Talcqqo55TyGx6S5O61ns92/zyy2xah+oCtXZ2TqxGnZtXdK
RpJ7pT8+KR19aalpGrHu6+y65Pbh5q5L6vVDrUm1rWN6XVDXObjrUmhN6g2u
SU+zLqnbM+tSYE3qyOZXZk0y11DY2XpUXrXY9RMq51frdFf/dp1TZSYPypGp
ablw8bJe1wEAAAAAAIAXgdoKVRnK9dkbMn3mohw4fEqffdIzuF3Pr4s6H8rt
f7LO/HFK9UD5+VNHUu+9NTql9ubMnp3a0+sYzEjXcEa6RzLSE3erV1UiI31e
9Say/6//POqW//Hen9XtmNvqHHKrYyC4d2j2CZt7MtLUnZHGrozz9aW9Xqyk
/pqz17J7/TcN8UDPTeC8kDx7z2pPsLZpWN9vye37nPtxWs6cu6QzqoX5BWHH
2XXnzl3JTOzTPQ12rmn3MpR6/XXBTCq3NypbwX3c8BlSZFJUwcs8tuudx6rz
WFa5VHVL2in3dXL33kP6dQIudX3EvHN/XLp0VY4cPyt7D5yQ0fQeae91XrOd
19nw/ZvNoIJZtrouQudP7dl1SeVPLb3BNUmtHWodMetSr7fO9C1zXbL/bG5L
rU16TRrMrkl+duWtS2pNUhXrTHs5VcrvIc7prWrIzsq1X9sWe31T63dzV0KG
E5N6XT82fU7fpzfmbnLtBAAAAAAAAJ4rNQdJzedTs9QuX52Vk6cuyPaJfdLU
kYjc2zJ5gT6no35I96qo/T43g3KvBTd7fWrPTe3B6b25YW/PLpGR/rGMDCSd
ct4OOW+HUxkZSafdSrlv417570tl/86U+neqhlLu7anb7U96e4WjuRmWyazM
vqCfUVk5ldkTNHMD/evXGxOBOUvhrGOxPUHVT9XWk5T0jr1y6MhJfT+r+1vd
7+r+fxUtLNyRqeOn9DxE1Y8W9RiLmt8XlUXZZ72Ez5Eik6JexHIf44M6m6pw
XltUJlXd6mZT6rypvfundF7wKlK9YiaLmpmdk3MXrsjBwydlMD6ueydz7s9Q
X6XKps21ESqDUq/pal1Sr/Umg9LXRHiZkcmc9Jrk1KC3JgXWpeWuSda6NJjM
rnXqrZ1f9VprksqsOoayWZV97YTOqbrS/vUTdV6vr7l+wvT62uvSctakEq+f
St2nO3cfkunT5/V9reZIqvuefj0AAAAAAAA8C2bv7+bN23L85GkZGZuQ6sbB
yHPgi619P3fPL+GdsZHW+2b+ft9AtmfJ7L/1jXn7fNbe3qhTCa+SXqWcSi9R
6mPGvDL/zvx/wrtdsz+o8i6VVw2msvuNKrMye4PmWnadUTnV2r94P5WZsWTv
Bfo5SGBOXH/kfWjflzWNQxJPTsiJ6TP6/lez7B4+fHXyqbt378r0qfPS6dzf
4X3T4Py+QX+/1c+lwlmU+ruI2YvqsWqfJVXoHIKiguU+Lkv0Y1zN8xvTuVSN
8zqj+qfaenfIvoPHZPbGXKGfrs+NikJUTq/m9F2bmZVdew5JR29S5/o595+X
uZjXCTOPT71OqxzKrEnqNV1lUP51Ed661O+tD/a6ZNaksSdcl5IR/85ek0yW
Za6hGPQyK7MuqTXSfF1q7VRfb9tA7ixA9T25105kIs+tUveB+5qYuy4ttiap
cq+dGJOduw/IlavXdS+r+v3gVb1uAgAAAAAAACtP7TWp8yWOHD0u3YM7pDI2
rGf82GdxmFlIap9L7XepvS91rbbKacy152rfTGU7Zr9PZ1DmOnPvWnKTQSWX
sb+3EpVaZF/Q3hu0cyqTUdkzluyMKrsX6J5xX9uSlBrn/qhuGvNn/dk5VaBP
J2IP0JxTXxUbkeauMefr3CUnpk/Jg1fgXPq79+7J6TMXZDCxM/J+WSqXiu6N
svOoQT37j7OkqBe9zFlTpXXq8R2XquakzqVq2jO6b6prYFwOH53WOe6rQPWP
Xrx4WXZM7pOaprieU1daGzwjqsSb6+nOi03o12J1ZqDKotS1BOo1u927PkJn
PQkrg/LWpbi3Lo0tM3daiTUpvC7ZvVcqG7OvoTA5lcmootal7HUTGT+fCp9N
Zb9e5vT45jwW3fmz6j6vdu77Hufz7d57WK5emyn0wwIAAAAAAAAvMXfP74rs
O6DOid+t9zwbO8akvGEwsE9qsii1r1XjZVHqHI5mbzafP5dvJJtFqd4ks99n
rhk3e3HPI4sKZ1L2/l9UNmVnVFF7gfZZIHqukrUXqPYBVT5V3xY8pz583lEg
o6p1s5aojMQ9n35YmruS+uey7+CUPodqNVJ56Nnzl6Q/PhG9Rx/qgQjnUuEs
KpwBloTyKDIp6kUv//GuspbYqD5nqtZ5jalRrzEdKec1YY+cOXdxVfZTqn6c
27fn5cT0adk+ecB5XZiUNud1Vp03Z99HOVlUa3ZmbEtPWve6tntnFZpZsQPJ
bA5lZ1CFXJfCvb1Ra9KIyahC102Y8xNNj2/4ugm3rzcdyKhyz6MKZVTeNQBR
j0t13UR966h0D+yQzMQB3VOtfl4AAAAAAADAUlQOoM7xuXDxsuzcO6X3/Ro7
EnrPKbsvau376bPhx/RZUTqL6smeCe/3RZnrz/NkUc97j8/On5bKoMw18+bP
Q9Y8pf7QPKVe++yPwexeoJnxp/qn/L3A1nTgWvXwXmDuTKXozET9XNS5Xon0
Xjl89JT+ual5SqthlpKa0aV69HqHJyP35rOZVH/wXCmdSeXpiwrkUcHbKXTe
QFHLKjuLrR/W8/xq2jJS1+lmU+q6gMHELrl589aqeB1QVF/o7OwNOXbyjCQy
+6Wzz3n9bBrWGb25X8L9uur1VZ0VpbMoaz6f6YvqG8vNop7nmhSVPdlr0mLr
UnhNCq9L/rlU6kyqkWA+ZZ9HZff11rel8vRQ5V43sdiaVOJdN6FmrqrfIU5O
n5Xrzs/u/v3V39sLAAAAAACAJ6PPjbo1L2fOX5Z9B4/LUGJC7y3Ze37Zfb8h
qWyMe/t+qcAsJHtGX7/dF5V+NrP5UqFKphc/r8OcOT9szWgKZE6h/b2cGnP3
M/tCZ9L3hM6kD/dP2bOU1D5gLHytenP0tep2trJoPlXXL7G2uAyPTcqhI9Ny
7sJluTF3U+7fv1/oh9ZTe/jokWTG9+f0QqhcNKpXKtwXlZtJ5fZGkUlRL2Nl
H/vuWVNVTUmpdV5T6rpUPpWWmPNWZVN37t4r9NP4qanzDFWWcXVmVo6dPCvb
Jw9Ke18q535wr5EY1OcYVjuvoXWtKf+8KP+sqBH39bnP7otKP7vZfPnWpPC6
ZK9JZi0ybwNnS6UWWZOsdclek/x1aSS3p7fdOx8xnE8FeqiWuG7CzvijXkPV
3L+KhgHpcH5mO3YekOPTZ/U5VPPz86smLwUAAAAAAMDTUXmU6q+5fPW67N1/
TJ9jHrXvp/agzEwkd05f9Nkc5lyOkXQ2i1rpfb/w3l7OdeWpbNl7e2Zfz8zg
s/f1FsuaekasP1v5U1QGFVXq/gnMUeq2z/pIS0PEterLyaei96v7pTo2KJ19
SZnYdVDPwJufX9D9Bo8L/WB7Auprntx9WBpaRwM9EeZ7DGZSJpdyK9wfFXV+
VLYKnzFQ1BOXefyqx7R31lS18/qheqbqu71syql9B4/J7dsLhX46P5FHj9w8
Sl8nce6SjCZ3BbJp+7lvenbV/Fh1jYR6TQ3nUfoMw1AWtdLXSCx1RmF4XTLX
QYSzJntd6ou4BiKwDuVZl+w1Kd+61B4+f6rHXZcaw3291tmIS+VTi2X8qq+3
sT0uQ4lxOXzkhO6funP3LnP+AAAAAAAAXkFqT0j11Ow7eFRausZy9pIC+34t
Sb1Hpfas7H0/nUd516APeftvK7XnFz77yWRQZp9vyFRof68vnDNZe3rmunmT
K4XLz5gi9vPU+8P7fXpvz9vfy1fqvjKZlF1mvp99rXr4PPrlXKeu9wLz7AfG
2kdl+8ReOX/h0kuzB7gwvyBTx09LbfNw5FkmJpcy90FkDkUmRa32srIpddZU
ZWNCapzXD5VLxZzXlvqutLT3bZcjx07L7fmXI5tSPVLqOomz5y86r/m79Ew4
+3u2Z/W550aldK5vrpGw58fqPEr1HXkZ0UpcHxHugQpnUMPWmhTuu81ZkxLZ
8wnD1zvkXZciMiZ7TQqsS8tYk8LrUnNvnrmz3roU6J+y5vuFz+tbqg+1x/ka
Dx4+JrM3buifOQAAAAAAAFY/Ndvt8pVrsmvPIWnsSEp144juObH3/srVuSX+
2VFpfy6S2rsy16HbZ8U/7b6f2eezz9cIX2s+bO3zmbPd+xLB3qZ8+3hRe3X5
9uzs68ej9u3M/9t7e+GsabFS95+dRdmlZ/vpfUD3rI/wOR/uPmBu71TpEvuA
qteoMjYksfYxSe/YK5cuXX2hZ/upvq7TZy5It/OzyLenafdLROdSA4E90shM
qtCZAkWtRPnZlDvPT501VduRkkbn9SbmVG17SvpHJ2X61LkX/nwf1SN5cvq0
jCR3SV2Ler0bCnyffs+ud3aUykwarTxKveabPMrMjzVnRq1U/1NgXQrPfY3o
t11sTbLnvJqe2sgcKWJdWnRNeoJ1yV+TQuuSWouy10tkgjNnW/LPnDVrkr0u
RT1uVf9UddOI9A7tkIOHj+ufPfkUAAAAAADA6qSuQ1d9MxO7D0vXwLg0tI0G
ekbUPpLaX6rw86joczr8/ihvLtJSeVT4GvN8s470zL1k6DrzMS+DCp3hZF87
7udJi/Qm+Xtw3dlsyC6zPxf+Ozs7sj/O7neye57Mfp79seHbMh+n7ls9x88q
ff58e27f1HLO+AhmL8F9QPW+2qYR6RuZlD37p3Qu+SK6NjMryR37Ft2LtzMp
O5eKyqJKasI9UpwlRa2yMjmtym1io3qen+qVanJeD1U+1didlszEQf2cVzPy
XiS6Z/fGTTl24rQMJ/dIa09KqmLBcw3dPEr1R43qmXLumYbpnDMN+721Y7l5
lL0uLTYXdihiXdJ9T6H8SedOpo9J5UzhftnF1qWItSffuhRek8zH5fTh2utS
aA2LWuOy10aE1qX2POtS05jOCM2atFRPr9vnGnzsljcMSnPXmIxt3ydTx0/J
wsKdQj8kAQAAAAAAsELUdfLnL16SnXunZCA+IfUt8cDekD2vz+RRaj9Kz0YK
5VH2+VH59v7C+33ha839M5+i9voSEXt9Q+4+n509+ft6gf26tK5YZ7bcvbWU
W+0pvaepSu2v2VVv/d1iH2P26oK3n923M6U/piNtZVDudefBj839HKbU3p/Z
/1tONhW9D5ibwbjnfCQkntwjR46dkQsXL8uDBy/OfL+Dh09KY9to3j34cK9U
viKLol6p0s8J53WgftjNptQ1BSqrcF67G3rSbja185DMz88X+inuUzNkp06c
keT2A9LRl5KyUM+umddX6fVHuedHpaPn9SWzZxrmu05i0TOgUtHXRSy2JnWG
z2iKnNGa9ioTvSZ1pPOuOVFrUvTHpAPrUlSeFP6Y4Jpkr0uLrUmhdclZk6q9
Nakytvi6FHgtDr0eq2sHVE9vR19aJvdMyclT52X2xlyhH54AAAAAAAB4Supa
dHV2/PHpczIQH9fXJtv7fmYPX89GMmd1dLh7aDnXoo8F86gxK5OK6oWy9/uG
vHlH+fb6VIXPz1Cf297rc/f5srlTNg9KBa7htnuMTKnvLVx6L80rdc131Mfo
sv5O3ZbJiWpaUv4eXa36s//+pP/+ulazd+hUOHOyPj5bY4GvO1yBr13tAcZG
dB/B4teoR2cyatZdXcuIDI6Oy8lTF+TG3C09Q6+Q9h86rvslSuvy77/ny6XC
ORSz+qhXqvyeqSE9z6+qaUzqOt1cSlWsJy1tfTtk554jBZ2Xpj61ysEvX53V
X0tLd/BcQ/PcLtPnZbnXSdQv0bc77K1L5lzDVDp/L1TczqC8NSncA2X35drr
ksmg7L4nkz2FM6fwtQXmbKbw67nuOcq3LuVbk6xS/95el/w1KWKNcdekVHZN
ardyp9anW5eCa1Iwm1r0PMTIx/GA/h2lrTepe7ovX7kud+7cYb4fAAAAAADA
S0T1SF2fnZNde49KZWwwZ+/PnNVhX4uurp+29/7U3py/9+ft6SVCGVTes6DC
OdRo7jkb9nkaUdeam32+3Ll2icj+ofAsoaet8oYhf19NnbNl/qxvX+dBbtl7
iGZfrjIyx8rtfcrWUnuPo17ZWZmbl6l9WzebMt+3+vrz9U7l38+uig3Jjp0H
5NLlq3L33n159OjRc32sqs93Y25OeofGAz0TUZXNpfp1ReZRi32/FLVKq9jq
mSpvGJXqFrdnqtV5rW0ecLOprsEJOX36fEHOmFPPczWn7eKlq9Ldv915rttf
e7Bv175Oosm7TkKds6TWDrWW5LtOYtEZsWpNSgWvjbDPgArnT+G+3GZ/Ll52
XVI9ROr13c1u3Nd8f01awXXJXZOsdclek6x1KWdN8q+9yM2x3OspotalhO6D
evJ1yXy+7LqU/Z6jeqdy5/rpqhnQfb2tvSk93/Hmrds6yySfAgAAAAAAePFN
HZ+Wzr603gey93xUn4yZjeTO7EtnZ/Z5PVJm728gNLMv6uz3IacCZ78nc+ce
+ft9oQwqmz8F9/rc/T7v+nJvzys8I0jtc5V5Z6zn7ZdZoSqpCZ5jpEp//vrg
PqH5f7NPWKn3Cd29Qnufz+wV2hlXTi2VgQVuw+x9Lt07lXutujtXqcR5XKje
hT37DsutW7ef2x6g2qu+Pb8gE7sOS21zfIl998VyKDIpirKzqYpYQmqc19Rm
lbEMu9lUk/O6G0/ulNnZueeeP6u5fdvH9zqvU0OB16FinUMM+n277nUS7qy5
fDP7zHUSUedBDVvrUlSPbng+bHt/bm9u9rylYG9Rvpmq/pqk85eBZ74ulUSs
S2ZNCqxLEddVmDVJZVXVoTXpSdalfGtScF0aDuRxUXP9ctcld00qrnUfF4Px
cTl99oLcvXvvuT5eAQAAAAAAsDz37t/X50gNj+2SWHtC7+mYvR7/WvTA3l9K
77+ZHimz96d7pFLZ+Uh2DdkZlLXXF86h7H6oqBzKzOCz5+4FZtRFnFPhlpnd
5p5L8SzzqEX3BWv7I881yu4RDgVzKjtnsq6fz1cV9r8LZFQj2bL/LuLc+cWy
qZy9QG9vuKFtVPrjE7L/0JTMzy8888fsnTt35diJM4EZk5FFJkVRS5e3n1+i
X4Oc1/rmlDR0p3XPVJvz+tyq5vr1pvW5Tgvzd57581uZu3lT9h8+Lp3926W6
cdh/jpq+Xf16551t6PdIRVwnYZ9tOBLKoew1adFzCsMzYv1zoDL+bFh1vmJt
qzu/Luc6Au81Nu+atGgPZ2HWJLMuhfuBo9akxdalivC6FLUmRaxL4VxqsWwq
fN2E+n919lRbb0rS4/vkzLmLz+UxCwAAAAAAgKWpmUzXZq7LgcPHpXtwXCoa
BiP3/tzzOhI5e38516OrmUfeNedD3vwjs+/n7/mFMqjA+Ru9wfM3Fsuhcvau
rP2+pTKVyFLfs1dFoT9HVdTf+7dRY1du/hFdA35eFr0n6F7D7s9osv4u7yzB
QEaV3R8M/124dys8028596Xa21T9DE2dY7Jr7xHdV/GsqJ6si5euSXNnImc/
MnK/nUyKohYv/3msnvvqNSQuNW3Oa32fm0u1j2akuT8tnc5r9dkLV55ZX6SZ
2Xf23EVJjx/QryeltdmvM3idhDtLVvUj5TtHSmVSZl0aDq1J4R5dP4Maip7J
l+2HCp4FZebYRfZBmXXpKdck9T0Xh2qxn+Py1qXo18B8a5K9LtnXTwTXjPzr
UnloXYpakyqWXJMWmzWbv8r0eYhxGRydlBPTZ557rx8AAAAAAACCFuYX5NjJ
s5LI7JWWruwZ8mb/yez96XOk9Nw+9wx5k0mpvT9zPbrKnPqTuWfBh7Mo9fH2
dedmz8/th0pbM/mCe3762nN1Nnrevp6/2AO1gvu7S2dT1vvDH2vfTiDzyV9R
s5jCcwKfpPLtAT7Jnmpje0K2Tx6ScxeuyMLCyvdOXb4yI4n07sB+9VL77YtV
wTMBinoRSj0fAj1TSanrSkuL85rd4byOtzmv4bHetEzsPiwzM7Mr/rx+8OCB
XHNud3LPlPSPTOgeKfO1mddB0yPlniOV1PlQY1fwOgk7kxqIWJfyzYsN51BN
OodK+zlU+PqI3BxqKLgm/ZV1aQV/roFca6k1KbwuhW8rtC6F14h8c2v/yrpk
r0lPk02pUtdMdDs/3yPHzsj12Rv6sQYAAAAAAIDn5+HDh3J1ZlYOHT0pLT3p
nD0nez6SmdvnX4/e6+7btZvr0UfdPT5/ry9iBlKX6ouK6InKzuYzM5BCOZS/
5+f2CS1njs/z3u8rxL5x1N6guxcY3g/M7aV6morOpsIZWu41+Or6+N6hcf/8
+ZW6Tv3evXuy/9AJqWkaWd6eLJkURS2vvFxKVanOEEal2nlNjqk+JOf1vCfp
9k71xCec9eOU3L17d0We04qa/Xnm3CXZPnkg52syWYe5TsLM7VM5UVTvrlmT
whnUUrP5mv3ZfOnoPt1Gsy4Fr49YkfOgCv2zf8qyX0OjrqOw16WVXJMis6nq
UL9z6D5WH1sVG5bxXQflwsUrehYsAAAAAAAAni01d0llUjPXb0hrd0LPtwnv
L9k9Utm9v3TgevQOO5MKn8MxnDubT1+D3h9xTlR7xs+iapqT2SyqYSX2/Nys
pNB7ds90PzDPvlvUNevhyvf39jXp5jr38B6g6QUIZzo52ZTubRjUc7h2TOyT
uZu39ePvr87/On32ovQOTzz1fbQa9oIp6pmV6ZlS8/zq1QxXZx3ocHumelNu
NtU6kJbRzD45e/7yiqxL9x88kH0Hj0l9S27WHO6Ryl4nkQmcJeX3SUWtS2ZN
stal1v5gHuWeE5XR613UzFh7jupfWZNe5XVpqTUp6mPCvVLhcyPDa1IwJ4t4
/Xc+VvXh9Q/v0OcT3rv/4JnNpAQAAAAAAIDI3bv3ZPrUOenqS+s9nPDen5tJ
xb1MypwllQlej+7N7jNncQT2/PqDs/nsHCp7PnzGndEXnoVksqgnms+z+vf4
nmg/sCbqevV+/77MPwcwt9dqqb1D++cT/BqC+3/Ffp/DsM6nTkyf0/1OT+vO
3bv6zBl1nv2T3idRj59C/8wo6kUs//XCO2dK9Uw1Oq/nnaoPKeW8jatrEHbo
eX6q5+Rp9/XVv7t9e152TB6QhrbRnN6b3N7dMZ0bqUxKrS16nqyVSYVzqI6I
M6KCfVHuNRLqNuvbUoF+Xf/8wie6PuLVyJ6W/ziK6u3tD6whi69LS69J+Wb6
2Y+j8LpU4ty2+rnWtsQlntwtt1awnxcAAAAAAABZc3M3ZdfeKWnqTEpZfZ69
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
TfxMasCak+RmUmqPL3fPL39fVPbseK5Fp55vbavql1+KO+WtjcXy+roieWN9
ia5/ri+WNZ8Wy9e/NMjWsq6Cf50U9SqX20PirC9NY/J71YBs+bVONnxdLOs2
F8kGpz7aXCzvfl4i3/3WLH9W9uqzn+wzpcJrUuDMqIhrJMJZFGsS9TzLZLHq
Ma8yqcrGMZ1PNXendTZ1jb4pAAAAAACwSqk+qaPHTktLVyJnv8TOpdT+n8mk
wvt/Jo/Knhm/eB5lbpv9P+p51a+lnfLJN5Xy+od/yD/W/imvryuWf24ocapU
51Pvf0Y2RVGFLreHZFD+qOyTT76tlnc/K5F3vyjSvVIql9qwpVg+2FwiG7+u
kF9KOkPXSsSlKmJdypnTZ82PjVqXCn0fUK9WmTmz6qwplUmpTFblU01dadmx
84DcmLslDx8+KvSvigAAAAAAACtGnSd1YvqMdPWnA/skdm5k5vf5mZQ6U97b
/8vpj1rkWnTVb8XeH1Wo+uHPNnlz3R/y9/d/c+p3nU29sa5Y3txY5lS5nuun
sqmvfqrXfRiF/nop6lWsbVV98nt5j3zydbn8a6PqayyStz4tkg82uZnURqfW
bymRDzeVyve/t+i1xL5WIucaidB1ErmZFD1SVOHLn2FZH9e5VFVzynmblLq2
pGTG98rczVv69zUAAAAAAIDV4NrMdRke2yUltbl7JIFMyjq7Q+//2TlUbMSt
wN7fUP75SOz/Uc+51D73lz/H5D/f+1XX39b8Jn//4Hf5x0fb5I0NpfLWJ5Xy
r48rdP+UOrtmyw/VBf+aKepVrK1lnfLVT3Xy+lrT11gkb35cJGs+L5L1W4rl
4y+L5ZOvSmTdl6XOc7pefq/oiViT4oE1Kbwu2WsSmRT1YpT7OCytdx6n6tzO
5pRUt6T126rmMclM7JPrszcK/SsjAAAAAADAX/Lw4UO5NjMjQ2O7pDI2HNgf
CWdS9pyk8PXn4evQ7TwqfH48mRRVqFJ9FR98VuznUv+55jf52/tb5TU10++j
IvnnxjIvmyqXtz4ukQ8+d7Mp+qYo6vnVb6UdsvmHGnlz3Z/W83Ob/HNDkbzr
PCfXeZnUp1+XyoavSuXT76rkp6KOJdakxa+TIJOiXpjSv3cN6mxKzfOraklJ
daubTbX2qvOmDsqVqzOF/vURAAAAAADgqahzCtR5BSPJ3YtkUv16vlFOLhW5
5zdsZVGD+c/sYP+PKlB9+VNMXv9wq5VLudnU3729b9WToTOpTyqdymZT3/zW
IL+Xdxf866eo1V5/OM+zLT/Wy9sbt/nZsd/TuL5I3v6sWNZuKfFzqU+/KZN1
W8rku62tkeuSfX2EvS6RSVEvbPm/f6nfu0b0GVMql6ppS0utU+1922X3vimZ
pW8KAAAAAAC8ZFSf1OzsnOzcc1TK6oJ7clFnSoVzqUAeVR8+P8qq0N4f+39U
oerHba2ybku5/G3Nr9lcysum/uZnU3/KG+tL5K1PKuTtzyrlrU8rdDb10eZS
+fHPFvqmKOoZ1h8VPfLNLzFZ82lx4Pn59w+2uufArS92npsl8r7zfNzo5VKf
fVMmH31ZJpt/jjn/vjcyj4pak8ikqBe5zGNTnzWlzvJsTkpNW0Zq2jM6m+oe
mpCDh0/K/fsPCv3rJAAAAAAAwLLdvHlb9h44JpWxQSkO7IXkzu8zmZTJpXKv
QR/KuQbdL/b9qBektvxk9WCEa03wrKl/biiVtz+tlLc/r9QZ1b82FssX/66V
X4o7Cv59UNRqre9+a5I1nxTJ39f8Esyl3v9N9zOqXOpfn5TImk2lsk7N7/Ny
qQ1flcnH31TKt86/j8qiwmsS6xL1MpT+XazWOmuqJS01HRm/b6p/dJecv3BF
Hj16VOhfKQEAAAAAAJak5vcdPXZaYm3x0B5IdC5lZ1L2PKSomUjh69CLC7CX
Q1FR9fE31fKPD37Lm0vps6bWbNXZ1OsfFcmbH5fJO59XybtfVOls6s3122TL
TzHZVtVX8O+FolZbqV6p9z/dJq+9H3xuqv7Gv+lc6nc9Z/PNjSXOc7JUPvrK
neGncqlPvi6V9V+Wyhc/1OrbilqX7J5d1iXqpShrnp85a0pnUiqbak9LTWtK
Ovp2yMKde/L48eNC/2oJAAAAAACwqP2Hj0tz55g+O8rsf6h9uqj5fW7+FN0b
lbP3Z12HzrXo1ItU6myotZsqojOpwB64l03ps6aK9RlT7+psqlLe+qxcPvii
VL76ua7g3w9FraZSfYhrPvlDXvsg9Hw0uZTzvHxN5cXrtulc6p3PS+XDLaU6
j/rUK5VLffJdtfzs3FZUzy5nG1IvYxUHsqkRqWoa09lUXWdG6jrS0tCZltSO
vTJ363ahf7UEAAAAAACIpC6nnTp+Sjr6MhFnSgX7pMK9UnZvVLbyXIvO3h/1
gtVXPzfI2xuLlsyl3J4pp9RZU2v/dOf5fVYp722uknc3Vco7n5bJ2s1l8s2v
DQX/nihqNZQ69239llK3T2pNRK+Ufj56udRH2+TNDSXytvM8fH9TmXz8dYl8
8pVbG5xa/3WpbPp3rc6fcs41ZF2iXsayrxdyfu9SZ01Vt6R0LlXfnXHepqWx
Ky179k/J7I2bhf41EwAAAAAAIODhw4dy48ac9A6NS3nDYM7eR75zpUzPFJkU
9TLXh1+UyWv5ZvhFzfN7P3vWlJrnp/qlTDb13udlsuHLcvm5qFW2VfUW/Huj
qJe1tpZ1yqZ/18gbayOem2uyudTf9fNxq7yusuL1JfLWJ2XynnfG1MdeLqXe
rt9SIuu+rJBt1f1kUtTqKfNY1mdNDfnz/Oq6MtLQk5HajpT0DE3IsRNnZGHh
TqF/3QQAAAAAANDUmdhzN2/L+K5DUtU4ErnvYXIpu1cqqsLnSAVzqRdg/4ai
rFJnQW0t63J7pdYskUnlZFP2PL8KeW9zpbz/VaWs2VIua74ol8+/q5JfSzo4
b4qinqL+rOiRr3+JyZpPi/M+D83ZUn9Xz8UPtso/1v4pbzjPRz3L77NS+WBL
qWz8slg+9mrdlhL9vh//bJVtlb2sS9TqKWueX1n9iFSqeX7taYn1ZKSx16nu
tIxm9snpsxf1dUgAAAAAAACFpq6fPXrs9KJ7HnYmFcylcnOoqB4pzpGnXsT6
vaJHNv9QJ2989MfyMqnAnrg3z+/DP+WfG0vl7c8rdC714deVsmZzhbz9cbF8
+XODzr0K/X1S1MtWP/7RIh98Xrrkc1BnUl4u9dqH7iy/f25QWXGJvLfJ7ZEy
2dT6LcWy1vn/z7+v1s9L1iVqNVV2nt+QlMdGpbo1pXummvvdbCrWlZKx7Qfk
yrXZQv/aCQAAAAAAIGfPX5amjtGl9zoCuVREHhXOorgWnXrB67fSLlnzaZG8
9v4yZvjl2xc359p8XKZ7ptZ+WykfflMp73xWIW+u/0O+29pS8O+Tol62Wre5
VP7xwRK5cCiX0j1TH/4hb6wvkn99rHqmimXt5mLZsKVYNnqlsqkPN5XIz8Ud
Bf8eKWqly5+1XD/sz/Nr6stIy6A706+uPSWDY7sK/WsnAAAAAAB4xV26dEVG
U7uktG7xfY5wLuVWf0QORW8U9XKUmq/3Y1GbvLF2q54H9jS5lD3P7w11rs2n
FfL+l5Xy0Xcqm6qQtz8tl7Wby+S735oK/v1S1MtQf1T0yKbvK+XNdb/nf15G
5VK6fpPXPtwq//joT3lT9Ux9WixrNhXL+s3FsnFzkWxwar1T7znv/0HN8mPG
JrXayjtnqkSd/dkwIlXNSanrzEjzQEZaBlQ2lZbmnh2yc89huXv3XqF/BQUA
AAAAAK+gm7du6TOlapqjz5QyFc6lIrMoeqOol6zUHK8tP9U/XSZl74+/7/ZM
qbNt/rmhRN75vEL3S63/oVI++KpC3vuiXD77vlZ+KW4r+PdMUS9yqUzqu62N
8vaGP+Tv7y9jjqaXS6nnoCn1/6+t/cOb5Vcs735RLOu8TMrPpT4vcp77dfJb
aWfBv2eKWunK9kwNSXlDXKpbUjqPUj1TqtRMv/b+cTl/8bLcv3+/0L+KAgAA
AACAV8zUidPS3ptefH+j2sqlavLN6iOTol6++mFbq3z4Ranb9/S0uZSfTW11
sykzz29Lpaz7d6Wsd+r9rypk7ZYK+fKn+oJ/zxT1Itcvxe2yfnPJ4plUTi71
m/9n98w31TPlzvJ78+MieefzIvloUzaXUrXW+f9Pv6mQH53XgEJ/zxT1LMrN
pgbdeX6xUalpT0tTf0Zah72Zft0ZSU3sl+uzNwv9qygAAAAAAHhFPHr0SK7P
3pChxE6pjA0uvrdRnWdWX6iKyKWol6zUuU9vrvvjr2VSXpmeKbUf/vr6Yj3P
74OvK2XDj5Wy7vtKWbO5XNZ/VSE/FbUxO4yiIkr3L/5YJ298+OuSWfHfrFwq
qvSZb+u2yT83Fsnbn7k51IZQz5Q6v+r73zn7jVql5c/zG5Ky+hGpbE5KfZfb
M9UWz0hzf0Yau1Ny5PgZWVi4U+hfSwEAAAAAwCr3+PFjvQcRT05KVWxoyb2N
ZWVShd5/oainqG9/bda9FiuSS/k9U3/Ia2u36bOm3t3kZlIbf1JvK+SDL0tl
/ZYS+b28W7ZVk01RlCmV1X71c728tX7r8voTF8mk3FxqqzdXs0je+rRIPtjk
ZlF2NvXhpmL5bmtzwb93inpWZfdMldXHpbo15c7wi2ekY1RlU2npHRmXE9Nn
5eGjR4X+9RQAAAAAAKxi6pzrU6fPSlXjyLJm75FJUaux1Dk2m39sWJFMyu6Z
+pvpmfqoSN76pELe/7JCNv5YKR//VClrvymXDzeXyTe/1ulsqtD3AUW9KPXT
n826f2lZMzWXyKXM37tnTKnnYZG890WRfBSRS339a0z+rOwt+PdPUc+kwj1T
jWNS25GWloGMdCcz0jaSkVbnzxN7Dsv12dlC/3oKAAAAAABWsSvXbkhjx5g+
J2qpPY0lZ/gVes+Fop6y/v1Hi3y0uWxFc6n/1GfbeOdMrf1T3lhXLO9+USlr
v62Uj3+ulE9+rpB135bLWufz/lzcWfD7gKJelPr4m2r5x4fL6JVacoZfNrtS
z0OVS/3rkyLneVjkPO/CuVSRfP59NWdMUau63J6pASmtH5LyhrhUtSQl1uNm
Uiqb6og7b+MTsvfQiUL/egoAAAAAAFap67NzsmPnwSfaz8hfhd9voainrW9+
jcm7H29b4VzK3S//+/tbdc/UPz7aJm99Uu72TP1UKZ//pvqmKuS9L8pl0w+1
8mtJR8HvB4oqdH39S728vXF5z8UlM6k19sf+Jq87z8E3Py6Sdz4vkg9DuZSq
tV8UyeYf6wp+H1DUMyvvdzY1z6+sflgqGxN+z1RP0s2mWgczMpTcI+cvXtaz
ngEAAAAAAFbK3bt35dCRaYm1jT7RXga5FLUaa9MP9fLG2uX1ZzxVNqXn+f2p
z5l654sK+ei7Svns10r54rdK58/O/28pla9/aZDfy7sKfl9QVCFKnSn1a0m7
vP9Zkbz2wXLPcVt8fl9gDqCe5fen/HNjkbz9WfQZU+RS1KtQxd48v9K6bM9U
Q497xlRvMiOdztvO4R2yffKA3Lx5Sx4+fFjoX1kBAAAAAMAqcfHiFRke2/nk
exmcK0Wtwvrsu1r52/srnEnZ2ZQ3z0+dM/Xmx2Xy3pYK2fBDpWz+3c2m1n5V
Jh9/UyHf/95U8PuCogpR6oy1Td9XyutPkg+vMdlvbuWcTeXlw2+sL5K3Pi2S
NZuizpgqkk+/r5ZfS5mrSa3uMj1TpV7PVE1bWpr6M9I9lpG+VEa6Rp0/D0/I
4aMnZOHO3UL/ygoAAAAAAFaBR48eya69R6W2efjp9jP0nka2Cr2/QlF/pX4r
7ZL1X1Y+m0wqMM/vd92v8cb6Ynnrs3L58NtK+ey3Svny90qdUb2/qUS++L5G
/qzsLfh9QlHPu34uapd/ffRr9kyoJ6xAJrVIPvz6um3+GVPhWX7qzKmNX5fL
t782Fvz+oKhnWf45U17PVGXTmNR3paUt7uZSvd48v66BtFy7fkMeMc8PAAAA
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
9tC/VMswj+tYqDGI7DQ2rUrMTTSaSWm5FN5ryKWinHOpoIQyyCjy3H1GJh8N
ttfys7Jafu39Nhi0jis5U8NWrO23Ft7/8D/w/YEDRj8Kk0gkEolEIpFIJBKJ
RJpmvfPeR9C2YsTwMQwyeabbgUtxY9Uyl0ImJdslm5ricfO5QSbwxlp+0RYI
TLFAbK4FMjguhY5JL4ekvAYorXVdH+5wjflQ7nAp2TfcfMeEteom45ScGtX+
T509e8r27UkuhSzpnPMucOuaYT6avN083wjVsjPnnG34PTIVLqxcAUExxTA/
aAYwKT0uFVzEuJR/gj6XChGcXtBi+HUkkw11HV/LzwZtfTbos9pgjOszNWYd
h+5BG+z9Zp/Rj8IkEolEIpFIJBKJRCKRplmvrt8MlfUzYAyDTJ7hzip2waUC
HbmUMzbliR5T2lp+EVjLr1DNpZLyzZCYXws5HsqZ0nIprCuHeVG33HYPXHLp
lSyfR8tZgiIzp+z4iZlVqn3PmnXylO3bk1zqyWfmO1yXy664Fp54ei48/PgL
cMXvblSu3V33PqJsV1DRyZb/8fa/wkOPPQ+RCSbD75GpcH7FclgQ5Jn7ZKq4
lC9yKWf5UvHEpchkdGVDv1TLb5zV8ls5qq7lh1xq5YgNPvp4K+z/7jujH4dJ
JBKJRCKRSCQSiUQiTZN2ff4FrBpcZ/jYBZl8NDi1oMUll2IsKoizwqc8z6Vw
n/ODisRafvFmCE23QEK+BXI4LpVhskBijhlScus9cn20XOr2O+9XLcf+SNgz
iV/nn88umHC/JZZut/KqjpRLuTrGRFwKz/Fwr9sNt9yh2jf2l9Kuk5RlZkwK
e0pN9+f+SH63ybqwcjkkZtcJ98kM4FETcCms4xfmpI5fGnEpMhkq6qVafu1W
aOqyQecQ1vKzKVwKa/r1j9lgw8a3Yc+evUY/EpNIJBKJRCKRSCQSiUSaJm3c
9B4sXTZq+NgFmXw0ODXfkUs55EoF6bMpj3MpKWfKK6wMFsWaWY+pmFwLpJvs
XCoXc6ayqyA+s8Yj12ciLoXW8p2/3POIwzrIlx5+7Hm49PKr4JRTZiu5QrNn
nw5XXv17WBiYqFo/o7ABbvrDnWx9VR+rE06AG2/5s+L49HKHYwWEpbN8o/++
4BLW9+rnPz8JLrz4Mnj8qZchr7TN6XkjlwqOzmH7Pe30X7BjXXDRb+Du+x9V
beeOsf4ev++/CtfRne3S8urY8S/7n2vgt1ddD/981ktZhv2qbhSuCf/76zki
odBhv4WVy+Cxf70M11z/Bzj9jDPZ9Z9z1rlw3Y23wzMvLvQop8ouaYOgmJKZ
kyul4VLYy20ecqlI53X8kEthvUyj/16RyUYbe0xVNvZDTesoNK4Qe0z1jNlg
RFPLb2R8Hez8fLfRj8QkEolEIpFIJBKJRCKRpkmDY6+BuanP8LELMvlocFJO
o1MuNY/jUpi3pGVT08Gl0AtCSsAvuhoCk8RafkmaWn4pOVUQn1UDxeauKb8+
7nApZDf8Oo/+8yXV8ieeekW33p/WyFzkbRYGJLjVm+m5fy9Stims6GRMzNX6
2PNJXl/LpfBnZ+f5y3POh/R893PSkIOp+2KdBjEppRNutzg4WbUdsjV52Ytz
A9y6Jv/4579V+4xKKp6w19VvLv8dY2KeuMcyClvBO3gGsKiJuFRUGSxxwqWC
kUvleCYnkUw+2lxR3wfmlmGoX2aD1h4bq9s3yNXyQ/cO2+CTbTvhhx9+MPqx
mEQikUgkEolEIpFIJJIH9dNPP8GBAweho/tVw8csyOSjxfFZ9a65lMSkZBvB
peYFYS5HFfgn1kBYhgXiC9RcKr3ADEl5tZBX2u5WbbzJeCIupcdK4tLUOUxz
zj7XLZ6CXuAXxbZZHJLi1vovzgt0eq7OLOc+abnURL7n/n+4fd3wOmm3P+mk
WfDQP56D7CLn9eBccalXvEMnzaWyippZ7UN3trvidzdM+f2FeVjJec3GcyiX
XKrAPS7loVqZZPLR5nJWy28Q6jpsrMfUMk0tP3TP0Di89+HHsH8/9ZgikUgk
EolEIpFIJBLpWNbBg4fgvfc/hKaOEcPHLMjko8WuuZTJgUspbGoauRQewyei
ApYkWFiPqThNj6kskwVSC2ogw9Q05fXYtKwHa8BhLbgrr74JzpxzjgPbwFpx
2n2c+6sLlZyhex94Anz84yA0No9xltPPmKPa/uZb72bbIE+54eY74LIrrlUt
x9p6eHz0tTf8EZKyqsX3Mb3Coc8V1tJDDvT3J16E8//fpcrrpqrlbBtnXAq3
w9qC2twprAdYVL3CreuGv5+z3Cvcz933PcpqFWq3c8WlMF/rpj/exXpXyT7r
nF857J/vV3XXfX9XLbvgokshMsEEOcVLYf7CCJg1a5Zq+ZLQ1Cn9/GQVtUJo
QoXxHGoiLiXc0z6RzrlUCHEpMtluVstvAOo6xqG5ywYdQzbWU4rnUsipNr/7
Puzd+7XRj8ckEolEIpFIJBKJRCKRPKj9+7+HvqE1YG7qN37Mgkw+SqziUoxJ
iVxKlSsVzNkALoX79g4rh8VxZghJs0BMnjpfiuVM5VdDZGrVlNfyczcHCf3L
c8+H6ORih334BSXCv+cHsR5H2mVei6JV+7jw4stVy7EvFb8cc3/0zvOOux5U
rXfGmWcxtiUvxzwyzO268+6HlNf0uNSTz8xXcs5emOvvsDw1r9bta/fgo8+6
vF7Ip/g6hGhXXEprfK+RM2mvn8wmM01NKlaHvbbS8tW1+u4Qrsfh5oS54+Tc
BlgYVmg8h3KDS/lyXCpcw6VCqY4fmaxyRUMf1LZZoWmlDdoHHLmUVfDo+Fr4
8ONtRj8ek0gkEolEIpFIJBKJRPKgvvl2PzS2DUFFvfHjFWTy0eKoVIsjl9Lk
Si0IFm0YlxLsFVYGi2LNECycb1SOBdJNFsjVcKmw1EooMpBLyflML80PdHv/
mOfEb3/a6b9QLXeXS1162VUOfGmiY2u51EOPPa9aXmLpYrX3+HXC4vIndf2Q
hc06+RSX1+zRJ+39uCbDpbBvl/bax6SUKMsDIzJVy3971fUO+5jnG6Fa5+rr
bpnSz09cZr1wr8wADuWSS4n9pVi+VHwZhOhwqTDBcRk1hv+9IpNnirHHVE3r
GDStsEF7nw1WjdpgdFzdY6pvxAbvbPnY6MdjEolEIpFIJBKJRCKRSB7SgYMH
4ZNPP4Oqxj7DxyrI5KPJcZl1Gi4l1fDj6vctCC5mnjBnyoPj6AtCSsAvugoC
ky0QkW2BRJO6ll9GoRkis6oht7R9Smv5abkU1sP7+5P/Bw8//gLcec/DcNEl
l+uyKeRJ/H6wdp7PklhWv+66398Gl1x6Bes7pa3jd7hc6tTZs1XrYR29iX43
LZfy9Y9zWOess89TreMfljbpa5hb0goPP/Y8nHLKbIdrJV+vuLQytq67XCoh
sxJOPPHnaq72j+dU6+jle+GxeGuXn3vehVP22ckv74SwpGrjGZRb+VJFSh0/
PS6FOVSJ2XVTdm3I5KPd2GPK3DwCDcvHobXHBitHsMeUmkv1jtrgjc3vU48p
EolEIpFIJBKJRCKRjlF9tfdrWL1uI1RSrhSZPCk71vETa/jN52r4LQgpFs34
lJ1NzdewKU+Oo88NxP43FRCQZIHwTAvEFlogm+NS2SYLJOSbISm3Fgorl0/Z
9dFyqdvvvN9hnRfnBTrwjQceeUZZjgzljF/M0WUyWh8Ol8orbXPYj5aL6dkd
LvXfF1x8xFxKdkFFJzz+1Musfp/2fP/xz3+zddzhUlhn8DeX/061HtZQLKpS
97564JGnJ5Xrhsa6gFP12UnJrYclUSXGMyg3uRTW8fN3waWovxSZbHe53GOq
cxyWrrLBsmEb9FnVtfwGhJ/XbNgIO3bsNPoxmUQikUgkEolEIpFIJJIHtOuL
L6Grb5yNExg9VkEmH03W51IckwouBq+QEmZ9PmVnU57uMYW1/JYkWCAMuVSB
mksxNlVohpi0CpanMlXXxx0uhUZ+wq933Y23s9ezi1rg9DPOdOAfs2bNYrlI
Z53zqyPmUsh7tPuPTDRN+LtNN5eSHRabBz/72c9U+73ltnvYMne4FPak4tfB
fYVE5zish/UBVdfu5FPg4l9f4dSXXn4VLPCLmrLPTkyaGXxCZ2BvKQcuVaji
UqEaJoUOEV5PyWs0/O8VmTyTXFHfy3pMtXTboHPIkUthj6lXV6+D9z74yOjH
ZBKJRCKRSCQSiUQikUge0LYdn0P90n4orzN+nIJMPprsikstkHKlvEJLwFsw
/qvwKbm2n1TTz+NcSvB84diLYqshNMMC0fmOPaZyTGYIS66E3LLp51IXXnyZ
mkv9/jb2+vyF6v5Fp84+jfU9wpwfXJ6cY5kUl8JcI73jz559umq9V7xDJ/zd
jOJS4n7VHO/WO+5lr0/EpdLy6hjT49e5676/6x5jrk+Yar0rfnfDtN5bYYlV
MD8w33gG5Q6XEu5136gyCJB6SWm5VFBCGaQXtBj2d4pMnonGuVDmlhFo7hqH
jkEbrBqzwZimx9TgCOZMbTb6MZlEIpFIJBKJRCKRSCSSB/TJp7uohh+ZfBh2
4FJybykuV8o7tBS8w0rZv1o2Na1cSjieb1QlBKZYIDLXAskmdc4UMqr4XDOk
m5qgsHLZlFwfd7hUVGIRnHDiiar1cDu2/QNPqF5/8NFnVNvGpZW75FLJ2WaH
XKiUnBqHc7j0sqtU62D/Km2fraikYnZ8+XVPcanc0la45vo/wMteIQp/451V
1AyzZp2i2u+/nvNiyybiUrhffjn258ovb9c9D8zL4tfFflRp+dPXIyk4vtrj
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
wNXz8+F7TAV6nkt5hZVDQHK1Uy6VllcNsVTHjzxNTslrhgWB+fpcygmTMpZL
YS+5EvAV7t0lEn+O0PDniKQKiM+sZX+bjb6+ZPKMtFRzWq49XVzTDblVzRAv
fC/FZlRCdIr9nopMEvMPc8o67X2jlo1Dy8pxpRY4Pm/LMYZeHfCp5E/a2gru
5DhpWZNefKGdy6aNI3jrxR/83DYlztD8rI0xsNYhzhts4ebAqWv8ifPf+D63
PJvCuhhKjKHbg6oPmtqHobtvNaxevxE++XQ77P/uO6NDWhKJRCKRSCQSiXQU
CGv27d//HWz56BMYX7MJlq16FWpbBriYo0fqMzyg4lF8j+HlHI/q08SKk2FR
PHvS9gXm85+U3k46+U3O4kFt/MczJDmm43/W8iUW5wlul35ntDYe1ONNsuVt
eA4lG3mUzKRkq+c28rlTw1LtDee1/ZBLzQssUI3jyXPSvYKL2Bh7RIoF0gqW
shpExKWcG3nNZDjTc/9e5HRdLceRXVDRCbNPO0NTo+8UmL8wAlLzalne0pVX
3+Swv/A4ez7TkXIpfP3pF3wcjvH3J/9P2c6TXEp7nZFRXXjxZXDTH++C2++8
H+667+/w8OMvsGuSUdgwrZ+Bgorl4B9Twe4jHCvH3Cdn+VLymLVcz89frucn
5Ux5rJafNJb+isKlhGMnVkNUjgsulU1cijw9dsqlOCaFuYjIfQ3nUtL3Jdbe
XCjcu/4JYg4kf4+zfnLJlZBe0Mx60Bl9fY10YeUy9j1xy233sDq1S0JTDT8n
8gyx8CyJz5iZRa0Qn1kHockWCEmphMCkcvYdifdSVHI5xKRWQly68H2VXgOF
1d3Cs69VeCZW8yilFjjXM2qy8930esvq1ViQ4wt5fpt2TpuzeW2y9eoj8DGG
3jI5RuCtZU2uYgw9TxhjYH2GDvX8N1bfz0X9cD5W4N9rxqcae6GhbRC6B9bA
xk3vwWc7P2fzHUkkEolEIpFIJBJJK9Y/6pt98Mmnn8HaDe/CciHusTT3q2IM
fR4lxjsYJ8nz+TBWmyyP4vmTHCOqamNYRfP8STsfUdu/iedNevGczJb4mK2t
S82I9LyUi+t4s+11cp608R+/rrKOJj6UORS6WbJezY26CfoWVzAuVapwKda/
g+NSbLwvyMRyN4LiqyApR+w/VVLTreJSxKbsPuvs83Q501nn/Mph3bi0cqdc
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
5SXl8LLvpBDHXN7p4lKMOQvH94kQuRTet2FOuFRoTO6EvzvOE0GurlcTju+z
99i/XnbYFnmOO38Lr/jdjQ5/CxeHpKjWueveRxzO4fY7/8bWRZYkv4b/f+gf
zzk91ulnzGHMy9Wxzjv/ItXyI90/1nz95bnnu/3d8OCjz7r1uXSHS73wir/D
/rE+75G8R74B8W5t89TzPlPyOfKE88s72Xyl0IRq4T7Od7iv8VkT51/4RlTA
ouhq8I+zQFCiBcLSaiFe2C69XKzZV1LbCOX1jVDZ2Cg874pcqq69U4gVetS9
obR9Z/ud1/xWc6hxVc1sdQ2+QaWOtzq+6FH+NTp+cDvG0Knj4E4twQlrPUxg
/hgyK3OHTfE/m5v7oLPbChvfeh/2fv2N0SE0iUQikUgkEolEOgIdPHgIvtyz
F97f8gl0dI0KsYJ9fpocA2hzpLCOupwjhTEexnty3T6ZSfH9g1eNOrIoZzUz
eA6ljRPtcxU1dTI08+4Ojz2pY2hnvXgna9yv3b2anyXz69bazb8HCqfS5Fbp
51vp1wp0ZqzL5RteqqnfZ8+RYkwqrJT1x8FxAyVvSncMsFAZ70Y+FRxfBZmm
NiisXAGlNcaPd5KPLQdH5zjt6yF7ztnnsnnzOH9+us8vMacRfEKLlPngeP8g
awqdgEvJbCpAW8svaApr+elwKazjF+aCS6UUEpcie96ZpmaWU6HlP3x9Wft8
Cfn7yNl3koe5VKDEpSKFe1W4t4Ok/nGHy6X+9+Gn3OYpi4KTVduedfZ5bm/7
0vxA1bZaVqTnv9zzCFuX50bu+NY77nV5LFdc6nD2f+0Nf5zU9si93PlcTsSl
kCNd8bsbVOucOnv2Eb9HS0JT3Vr/OSmf7Ug/R1NlvB5FwvduTmknRKeZYWFY
ker7R5yvIeZI+WC+YWQlLI4xQ0B8DQQnWSAs1QJRmbWQbGqCrOpGMNU0Qll9
I1Q0iLlSyKeKaxvBvLRTiBd6HOryOZ/nJtZcQLO+UBoOZdHU4lMxqMPlQbVT
F1fIVsUMdT2qeIaPL1Tr1DqJMbhYQvy3V8mv0lqJL9yMMfSscC6dOYTuXtO2
lWOwYeO7sOerb+CHH36An376yeiQmkQikUgkEolEIrkpfHz/4ccfYdv2z6Bv
eI1OvCPxKCE2wzgN4zVWt0+I4TCuk5nUcg2T0nKobqzNN6iu3y7Hiqo4UdM7
uB7rtmtqZujFiIc3X1DNg442685/nKAmoCtnmJrBN6yE1UjCeausvr/EpXDM
j/GocMnC/71lNhUi9/KQeswHFKrHzHHMQXjdL6IEolPNYKqafi5APj6cll8H
CwMS4PmXF8NTz3nDv+cHsfpFOI/eyF5nWcVtEJpYpYzByT2mQhIm5lKsnp+U
M6XU8guewlp+uvlSFRCaYWZcKlvDpbKF11IZl2o0/P0mH9tG9hmRXOXAfxiX
CpbmTUjzJVR5vMJ3liFcSjgHX+EeXRwn1uCMOEwulZJbAyeceKIqnwVzYHJL
WyFduCY3/fEu1f6wHhv/9+288y9mr592+i/ggUeeZrwBa7t5L45R6vHJvvb3
t6mO7YpLYU4Ssn/Mv8F1nXEjrK2HtebwvPnX8ef8snanx3KXS7mz/4zCBtUy
7PcUmWgSXm+Ex596WbUM6/o9+fR8SM6xuPW51HKpSy69AsLjC9j8iJe9QuDS
y65yOOdHHn9RtY/DeY8w/+uWW++GK6++SbUc35MbbrmD+cZb/gyJmVVT8jma
KmMufkpePeshpZf7KOZI4byLCvCLQiZVDYEJHJPKsEBsTi2kFTdBrkXsJVWK
rhVr+RULrxWaG6GiaRnUd/QofWidsSiML5QYQ1N3AfOh1DHGkeU+Gf039Ejt
LMbQ8ip3YowJ7YpN8eekPa96sZZHZ/c47N69h82zJDZFIpFIJBKJRCIdHdr/
7X544833oKNrjD3X87EIxgSsPoOUI4VMCuM4zF3SZVLDdmv7Qy3TsChtrNi8
3M6i+P5Q2t7BcsxyuBzK6BjPo3bFqOr15jvycyL7IDW/AXxCi7k6fCbVfHQc
N/ANL2cWc6YkNiWPAXJcSjVeLo3FI+/yCimC6DQL5FcY06+cTDbCmCcYl1lv
r/fFekyVQnD8xFwKjfXAsB/V4hgxZwrvSbzXPMaloiogNN0MCYWOXArzp9KJ
S5Gnwcm5dcJnv9I5l2LfTaWM1arY1HRzKZYHaQIvHFuPKoMlcWKe4+Fyqbvv
f1S1/l33/V21HPmENjeU712EeTVzfcJYDTftvv2CElXbnXveharlelxq1qyT
ld5LeOyCik72fz1u9K/nvJR9zfONcFgel1bu9FjucCl39499qPjXX5jrr9o3
n6+EvGYyebRaLjWRMZdXvmZT8R4lZZlVy7GOrSc+R1Ph3NJ2iEiqFO5Jk+oe
FL8HpRwpiUktjq4C/1gzBCZYICRZZFKRyKSyLZCQXwvpJU2QVdUI+eZGMFWL
PaZMws+FlY2QWyF8H9UtA0tLD7T3aPtE2ez1vzs0HIqLMQ5/rpvxfyunw+pc
LOfz4LQxhitX8VZq+vXpvhfqc9G8Byxe7Wdsau2GTbBnz1dGh9ckEolEIpFI
JBLJhbCXFDKp1evfgqXLR4WYQF23D2MCnknp9ZJCxiQzKXcYlLZGX/Nye6zo
0EuY6xHlTk/coz33yTMxpGPs6MqJWRbwDi0Sx/0CTXYuxdXvY1wqQjSfM6WM
ATrhUvy4t09YMavrl1rQAsXmLsOvE5nsaRebuyE5r5nVtGRzxKUeU0Fx7nEp
NNb8C4wX6/nhOPyU1fLT3J94bthfKiTdosulcgVnmmogLY/q+JE96/hMM4TE
l6tr+AUWKn0PvaR+h/w8CWO4FN43ReAdXibcO2XgH39kXApzgfj1kQlhHgtv
Od+GX8eda4o5Qfx2J59yqmq5HpfCHFS9fWm50UOPPa9ajueJ++fXCQhLd3qs
ibjUZPa/wC9K9TrmQ/Hb8nX2kEvp8SFnngyXwuMWVbm/b3feI3e5lCc/RxMZ
f+fUvEYIjisH75BCDcMtZPcmz6QWIZOKM0NQohlCky0Qnoa1+ywQk22BuJwa
iM8T6/hhf6nsikbIE/7NKxOdW9oEWSVNUGReJsQuPbBUiTF0aoC32Oe7Ta7u
AsUXvF0xqonsDq+qVMV+9vrn6nNQc6kKKW+qqWMEeobXwftbtsL33x8wOtwm
kUgkEolEIpFIGuFz+rbtO8G27m1obBtiz/zyc748741nUnIvKeRIWiaFXtHv
2Ceq3aFPlMih5DhRnLc4rtNTeIDNeVNiRVf1MRT3iJ4BsdqMs+Z6uYojMf9B
zpdSuFSIfewAmRSOH6CdcqkgjkspY96afAyp51RAbCUkZDewGmeGXycy2cPO
LGqDRZElbHxc7DFVItwD7nMprOeHdf/8sddUVBm776YkZ8oJlwrNsOjW8ctl
+VJmiM+oNvyako9tp+U3QESSvY6f+Pks1ORK2evLGsWl2HeacDzviDLwiymD
gAR777jD4VKzTztjUvk4aKwfx++jsHIZYzN33P0QXH3dLXDhxZexWnazZ5+u
zoU6+RTVdlpWdM55Fzg9Ty03whp02nW03MM3IN7psSbiUpPZf0xKqep17C8Y
FpvHWAxyNj5PSHvciTwZLvW3h/7ldD+H+x65y6Wm4nM0ea+C/PIOlh+8JKoU
5geq7xNWty9YvHfxmZL1koqutjOpFJFJYZ5UdJbomOwawbWQkN8EKSVNkCE4
G13cJHyvik434WttLBcf4wt5vps6N8qeFzVR7YUybYwxA/4ezjiz2Mv5NXTN
pSZgU5ptnNVG5LlUObc+8qmVvWvgzbe3wGef7WJzMUkkEolEIpFIJJLx2vft
ftjy0VboH1nn8GwvPsuLvaR4JoUcCbkSMqa2VSJ7QgYl50R19jjmRbVyLAp7
UTV2qGu5K7lRDnX6tPPjaM7iVMeR2nmOsrHfAONSUi0vpb8U41I4hoDzWsth
YWQFM8ubkmr68WOBuJ0jlypQcSmRTZlgYXgJhCVWsTH7Yku38deHTPaQc0o7
WE0y+fOP95V/jMibJsOmsG/Nktgy4f4rY/mMDvmJU1HHj/WXcs6lMkw1rF+I
0deUfGxb219K5qZifVkpVyq8TMnhVb6PlN6Hco1ZMQ/YkzX8FgjH8oksg0Vx
Yj+48MPkUoUVnZNmCWjkG/I+4tMrWN8id7abiEu5YjbucKOLfv1bj3IpZ/sv
sXTBBRf9xuH35fstyX5Yk4c1kbVc6tLLr4JMUxPLNdI7pteiaId9HMl75A6X
morP0WRdLFzz7OJWiEm3sLx4Lbtl967Ek/F+xV5SS2LMEBBvEb7XLGKeFNbu
SxdzpZBNMaejayE2t0n4TmqCNMEZEotKK2hic6qS8xogq6QdCqtWsviitnWE
qwU+mTrgxv/dO9o9WU7lnnvcYlP8NjjHsblzBIatG2DX51/CoUM/GB2Ck0gk
EolEIpFIx61Y3b7vvoe3Nm+BthUjDs/0WiaFcR1jUp0ik+L7SXXocCi+lruY
F2VT9RVmceLSUYd67jinDWNFl3FiLbGo6YgfcW46q+MX4DivVRz7KwO/yApY
FFXJxhMYn8LcKYVNib2mcI667hggz6YC7caxCr+IEpFNUV0/8jHqouqVkJrf
rNxfeG8tji5V8iomXc+P5UyJ+Y1TyqUCClm+VJjEpXK0/aWE19JYfymq40f2
rJ1yKa6vFJsvIXwXYd6FkssbLta6lL+T2HwJzC30YA2/BTjWLtyTi+PEvMaI
w+RSyFOwrhy//n9fcAljH858y613Q25JK9seewbp8Q5kG5j7dNY5vzouuBT6
ZuG6TMRhLr3sqkk/d2i51NXX3awsw+uvzXfCXK0Sbt7Nkb5H7nCpI/0cTdZY
qxaf4YJjMY9XL59QYslh9jypJTHVEBBXA0Eck4rAXKk0MWcKjT2mMIcqLLUW
orObIL6gCVIKRB6Vmt8IKbkNgushIbsOMkytLF+KxTGqGGPiOuBG/607Fs1i
N10+JcWdvOt7dOycS6nZFFcPgq3bBxUNdpubB2DYuh527twNB4lNkUgkEolE
IpFI066ffvoJvvlmH9jWvAkNrYOqGEyu26diUlI/Kbl2n8yk2rU5UVKNPlan
j8uP4nmUtr+wnBclx4oUJ84cp0pc6hUNl8LxPR8pVwp5FPamxl4AMpuSxwH5
mn5KfTF32ZRgPHZiTiMbvzf6WpDJU22sH4U5U75hRUqPHL/IEqUPzWHlTIWX
ihz4SHKmHPKlTOCHXCrTAkkmMT+K51JZwmspBTWQVdRi+DUlH9t2xqW8Qvjv
JZwrUcVsny9hZ1PsOylEk8c7lTX8sOYt5hULx1oYJfaW4lmzf8Tk6/iddfZ5
qvWDIt3v+TN/YYRq21NnnyZsn6Usx7zo44FLLQ5OVr1+xi/msNp9J574c8Zx
kNE8/8qSw5oL44pLoZ96ztvhPefP/UjfIy2Xwhww/H6Zys/R5O/VZlgYWqi+
x/heUlomFf3/2XsP6MjS6lp4GcwYwwIvWGCwHzyHH8N7GGPANo6YhzEO2GAb
G2Ns4wcP2zMd1K2cSqkklXKWKlepkkJVKadutVpqZVVPHibBDAzD5BkYpif1
zHRPT+//nu/eW3UrSCrFK3WfvdZerVYFVV3dq++rs8/ehzSpAApMPSiqC8BQ
L2tQ9C9pVKRF0fcLa8lLJd2nthdlLWFUdoZRS3pUp6xH1bb1oqa1BxXNlC87
BLNnMuaN2qTfTe+/b9cT1f7Cjb1qW6fQpHrj5yMLbSqo1aak80E6J0ZPLeOR
R5/S+yM5g8FgMBgMBoNxXeHy5dfx5FNPY+rsLegZPLfOLClZkwooPinSkkhX
ovw+0pyGFQ0q9byoiDIvStaigqOpMt1lPUrNdd8wp+8AfH66XtlkCeN4kS2u
nkB5SRnRWoI8m5pyV7KNPjETgGqBQptSPFNaXSpuztR6+lRUm7IqviknqluD
rE0xr0laPFPIM7pEhiWd9ydK7CgwbU2X0nqmMskzVWRP1qW2Un9PnC9FupTR
g5J1dKkW6Xu15l50ukZ1P57Ma5vN1jDK6n0pdClHNL9PnU8jr0mKPiV9L9ov
UeyM6lLiOtmjDL/jJfJsqQJTfDbnduZLfewTvx93/8994e/SPmaJmskXv/yv
cbfXtHivC13qL/7mq3Hfb+zqk/YVU+hyj6bUcLbCzXQp+hlvueGGuPt8+KOf
2LXfUX17T9I5RY/ZzfMoXVo9kzC19CK7zB43wy0pc1PdR1Jvk3St5lYGpDWs
R+hOpD+RFlVUK+tQ5J8i5pt6kCfdhzxV+dW9KGkMoaI9iOr2vqgeZZLWqepm
P0oavGi0DMLqndrAG6X/3zTm+lwvY3yr2hR9LfuyZhXvlKxLUZ7j6PQa7r7v
B3jllVf1/njOYDAYDAaDwWBc87h48RV8/4eP4PTsLfAGz8bt/RN9UoHBBZGz
1zeyGtWk1Pw+VYeKzotSdKjQ2GrUF5U0N0qT16fNdY//vDjDGX0HiB2OETFf
Sq23Cb+U6Et3RWcBiHpCVQA5lTFtSvSol25Rl0rSpqxRbSq73I2Kxl40mQd3
XD9i7pylJgv+6ktfw+f+/Mv42r8fEbPat/tcNu+U6CWn+thf/s1XN63PXmu0
+k6JOvuxItnjdNxgR17V1nUp4ZkyuaRrkHyKDuG/unG3dCnpGsyq9KCkNYA6
W7Iu1WQJoLqrF51O1qWYe0s6x4xNvfF5YAU2eeahkt9HOhStR9o1SfRLlHbv
iy6lZvhllLqk6ybeK0XXaW5ZZ5KG8Mnf+wz+7At/n8Rv/GeWeN9f/49jcfcn
n89XvvZtmN1j0WNDWXA0t+iPPvMX+Id//lb0+zQrSfvYD/zPDwk9hm6ra/Pj
F9//getCl/rTP/vbuO//3Ft/Hp/4nT8Sx+uz0lpG68+/f+uk8BBtdZ+xmS5F
pPUy8fdurHfsyu/I6p1Meu6Pf/IPxHv/p6//F6oaXTs+jzYjHbMO54i0ngVw
ssQel90X06Ts0TlwcZpUFWlSMf1J0NQjdCj6fl6VX9lnBqT7+xUdy4/C+j6U
tvSiqrUH1S1+VDf7UNnohbHBg8JaD+q6wjB3T8Z/xmAt6lBR9lRtTZ9y9SXq
UjOIaVOyd8qjaFM+oU1FcNc9P8Crr74q8kQYDAaDwWAwGAzG7uPixYt48AeP
4NTZ8/F7/ugsqcTsvnhNivSneC0qls+nzehTdag4LWpgPo05w5pchwPwWYiZ
Wpei+TVy/c8t5kqRV4rqBVFtaie61DraFNUdTxgcKDJ5xbyAwzBziuplf/An
X8Cn/+jzcaR5DZ//y7/Hv3zjGCrq7Lq/zu2QaoXa2tZNJ0p3dJy0z0U5Q3q/
v/0kzRhpsQ3hRIlD6EhUL6c5UYYt6lKqZ4o0rZNlct19256pJF3KhuwqD0rb
U+tSzRbFL8W6FHOPuZ4uJercpbKHl9aguDXJuH+6lJxRJmf4nSiTZ0tpr+Vi
E+UMmpM0hPVIM4fofZNGkZjBppJmF91ww1vjvTj/67ejxywjtyrpMTfc8HP4
Hx/8NaFLJN12jepSmQU1aR/3D/7qh1DV6E77vExHlyqrsSb9HNLDduN3RKRc
wvXezze+nbnj82gj0jpGmhRlbB4rssatJdoM6JhPyiX7GqM+KVmHEloU+aGq
5euXbotew2JvKWdzEsmrX1AbgKHJjwqNHlVR343yOjcKTW7UdYZg7p5gf9Qh
51a1KVdfoialeS6tNhU6J0ife0dOreGe+x/CE089g9cuXdL7IzuDwWAwGAwG
g3FN4cWXLuJ7Dz68riYlsvuUvbl2nhTpTepMKcGJzfUorS8qfnZUKj2KNaiD
zNS6lCPJK5Wn1hGohiBqgKoupc6XssX7N9Ksi8fy/Gyi9kivpbDac+C1Kbvv
FG5IyOxZj9QXbax36v6a0yXlESW+h8TMoa3wi1/+elL/Nv0Mvd/nfpL6zElz
PVoo+wMzShzbyvIjL0ZBtQvZFfJsN3H9bHfOVJwuZUd2lRelbbIu1Z7CL2Xq
6ocjcHCvSea1wVS6lJotq/VK5SnrktCmjH5Rw6bb91SXinqK5Qw/mi2Vl5Dh
Z6hxI8/oSFsfIa1Bfe/5pS1461vfltbjfvPjn44+jtbKD334Y2n/zGtVlyJv
7vt+6YNpH4f3vO+X0/YCp6NLEX/l1z4cdz/K9qOfsdPfEfHfvnli3fv/h+K7
28l5tB5Jk2qX9orl9T6xz4vPtFR8UgXJ86TomqQ9Y16VnN8nfFHVMT1Z5EMr
Xkd5Tlwsi/OE4o3MqfahsF5amxo80s+X9aiyWpmUa9tgHhSvT++/W8zdoep3
25jra1Kx51FnTs0JXcobmhefWYMji5hfvhWPPfE0Ll26rPdHdwaDwWAwGAwG
49CD8ghontQtt9+D0MhC0r48MbtPaFLD8ZpUWKNFbVWP8gQT9Sj9P9cw02ei
LkUzcKimd1KdK0X1P6XPleoKuSJjRfZLUf2AahBUizii6FLbyRKL5fnZBOnr
wioPmi3DcAQOZqZfh2M47foSkWauF5a36f6602Viv/V/HSva9nOR10r7XO96
93t1f396sKYtKGapUZ2cMv1yjPH17HRZRDlhlVS3c8Z7FLfsmYrpUuT/2FCX
MgdQ3dmv+zFkXvtM0qVo5mGR7OGNywRTMsDyoj5er/BS7bkupc3wM8rXo/b6
LKvzSNd6Pz75u3+S1trwGwl+FcpYozw6WjPWW0t++1N/iJJqc9zjWqxh/PFn
/yrJe0P6xr99MwP//G83rvs3mJ7rTW96U/T2//2xT637+/mE5n3RY0gDSbrP
7/xR3H0KK9rT/lk7ef7PJuTofeQ3P4lv/neuyO778j/+R5JmREx3XaY8W+3j
6HeU6n603ml/B/T66He6098RkbStL//T/407fuo5kXg+bPc8SiT1VKiaVJJ3
UMnuo54i8kpFs/s0c0lFX1NVT9QblZtSj+oW+0kxs1S5fgUNLpEvm1/bDUOt
qkdp5rhVybqU3n+zmAeTUW0qFNOmfNLn1/6RRZxbuhWPPv4Urly5ovfHeAaD
wWAwGAwG41Dj1dcuIXLr3QiOLMT1kK2nSZG+1De8LDQnVZeK6VAxLSour29Q
q0mxHnUtkfJPMgyOWF6S6EuX81eodkA1P9KkaC411QCptpAd55dyxfmltqRL
JWhTqi4lvFPS8+Ua3ajvDOt+jFIxlS71oY98TPRQUy93Yt1I7Qs/LH6TvJIm
UeP7zOe+iG/dlA9L9/gOzrFx/N1XvylmWVBNrcxk1f396cE2xwjyKj1R/fdk
mQtF2/BMUWYY9YlnSo8XtfdU2lRa119Mlzpa5BR96aoulTRfyuxHTRfrUsy9
p9UzieqWYPQ8pXWFeh+obq36L6hHolCZUSP7eJV8Wapvl8j9EnRtHNl1XSoh
w68yXlumDL+yBh9a7cM7npNIj2/s6hO6DHmG6G8y5c5t5iMmPaK4shMncqtQ
0+KNex1drlG024dSrkOU/0aP7XAOb/ra6D50X/InbXofX/J9NvtZ23n+Zksw
Tu9529vfKdaexJ9LGpB2Xf72kfy0fyfke6Kfmfi8692PjjV5q3frd6SSZkVR
RjB5zwzS82z0erZ7Hqlstg6iqLo7tU8qP6ZJCZ+9wSWyNIV+XOGLZvTlGGNz
4Eg/Jj1KaFKKP0roUQbZA3xMaMoOQbrOsozdyKtxo7g2eS3Mr3KhkXUp5gbU
+qZkXWpBaFP0eXZm4VY88sgTen+MZzAYDAaDwWAwDi1eePEl3HLHfegfnkd3
f/w+XNWkRH5fWM7vI22JtCbVKxXzRMVrUb3K7Kh4PSrRI3U2rSwF5sEm1SxO
lsR0KZGXVOISNYNcRZMqqg2guC4ga1PVSmZSeWJmkk3UKLasS6XUpuzi32Ni
Do8bxqY+3Y9TIlPpUjRbQr2damTv/+VfSe7N1vSNb/Q7STeXZif5NTutm8a/
jt3X2+j17cZrPCgZPzbfKRhq/XLepcTjxQ6RybdVzxTdv9DkQrbRJV1/zqgn
JE6bSleXylV0qWIXckw+lK2jSzVb/Kg1sy7F3B/WdgzImbCqLiVdK7TeUG1b
aFLKmlRUR2sU5YKpupSSA6b0S1B/w27qUmIWoprhV+GSfm7C/DeTGxVNveJa
1/sYXm8sKGuN9yDd8HNiHdbep76jJ2m+kqGqS/fXflDZbB1AYXW3yJ9N0qQK
4jWpDKFJxbxSQocSM6O8MpWZUXQdC5Z2J+hRshZFz0fXLfEoXfcVbuSa5NmK
iWshZeE2WoZ0P07Mg83YZ2KtNrWAvuElnF28HT965HG9P84zGAwGg8FgMBiH
Dj959nncfPt9CI8uxHmV1tOkol4pRX+KknQo1RelZPUFBhQtKmmG1FycR0rv
zxrMnZPq/tllDtyY16XoUnZR1yPtiTQo0qQM9QGUNMj/Un861QBTzfLYUW/6
OtoU1SbIF9LQNQC7/2DoC8TNdCkiaVCJ9yHvkXo7ZfZQztCHP/oJfP0/jglP
0ue+8Hd4y1tuEH3fH/zV30jqaaY+7H/6+n+J/J13vPNd4n7vfs/78cnf+4zI
KtpMg8kzNAnf0v/44K/jTW9+s8jyoWyjr/7rf6HTORK9H2UKffS3fkdkTH3q
9/4Ude2BuOehn0PZfvTa3/6OXxDv7c1v/lkxw/1v/u5fo7lFxMbOPvzeH/wf
MV+dMpv+5RvHUr42ek7KXPrjz/5l9PXRbI5f+bWPiO+dzK9J+bi6Nr/IdaLX
SseFfh7Nr/qHf/6W+B49D/XO023aOSd60NQWFDqw8CZK1wvl8Rm2keVHNbo8
1TNFtXdlztTWtKmYLkW19pxqL8ra1/FLdflQ3dGj+3XHvD5Y3zmAo/ldUV2K
1hiqadPaQ2sQaVKGBpmkTan9Emq+rFaX2na/RBoZfgUJenFpnQe1HSHdj9/1
yKau/qT19h3vfDc+/Uefx5e+8u/4zOf+Wqwn2ttpXUjl57reSfuORnMYhVVu
HNtMk1JnSpXK86DoGlT9UKonKqpDCW+US+wbtXoU9SDROkbPSdfrTUq2M3kT
Sf/NW0eXKqx2o4l1KWYajH42Fp9lF6LaVP/IMmYXb8djjz+Fy6+/rvdHewaD
wWAwGAwG41Dg2eeex/nb7kXv4FzqfXdUk4rl9wmv1JCsQfVqtSjSoQbjdShV
i1pPj2JN6toh6VL5RgeO5JujupSYNV3pF33oVP8rbQygrFn6t0n+f1SbKvfu
ni6VQps6Ivpm7aJmkVvhFnktNt/ByMFLR5cinSnxPqQ/qbdrZ7fT16ShJN6f
5lGo9y+vtW860/03PvJbQpdJfL30Wv7sC3+/4WPpuVO9NiLlDam3UR1vs/nt
n/38l6L3zy6si7uNNKfE11fb6k9rJvwf/PGfi4wj7WMTn/8b/5m14XEiPVC3
88Y1hpI6v1LjtiKzXM7+2qouFfVMVcg1PqrnqbrUjWnn+Un3VXSpY8Uu5NX4
UdEeQD3rUkyd2dg1gIyimF8qg/K8KrwiV5a8UqRHlTXJpJ6JIo2XV/RL7LYu
lWeO1skpW4x0Kcrw09bK6XosbfChmevkupF6KDZbQ7TzlRLXbOYMrN4pNHSF
pT0XZcQmXgMpNCnSaUtkr5TQpco8shZVGtOiVB2KrmO6v9CihD/KLp5H5EAX
yFqU2ltBX5N/KnMjXcrEuhQzfaqZfjRrijQpv+jBXBQzl88u3IrHnngGr126
pPdHfAaDwWAwGAwG40DjpZdfwerNd2+qSckzpc5FNSnSoGK+KFmLCgyqWtRC
Ci1qNsUMKdajrjWSLlVgdApdimoBVCOgmgLNBSis8cv1v+YAKloCKJf+LWlU
+tNN8twAui/VGqg+odbGd5yVlKRNOcS/qjaV7lyEvWQ6ulSTOZh0n2NZFdHb
E7WfVFQ1mFbbgMglSqfeRj6nxNf7l3/z1bQeq3qmNtKlvvjlf930ecgfpd5/
M12K3uPPvfXn064nUv+79vGJz78ZafYX/W70OG8s3ilUt/Qjo1i+VkSWX9XW
s/zUOVM09520Larvbd0zFdOlMkq6kV/nQ2VnAI0JmhSxsdOHqha/7tcd8/pg
o3kAJ4pi6wHVtCmnT3h4lV6J8haZpE2Rl7dQmTVF96NauOiXKLTvri6lZPhl
Gl3SGhh/PdK1WN0Rgv2A5IZej6Seib/9+3/D2972jg3//pNn2Fjv0P31HjRS
/iTN9MwqsaY4/9V5UlahI1G/kKpJnVA0qSQtSvVFRbUouc+Icp9lf5RV6FGy
JhU/v4p+Fs2aUq+1VL5iQ003mq2bz0NjMqMUn5VnY9rU4JKgb2ARc0u34fEn
nsHly+ybYjAYDAaDwWAwUuHKlSs4J+2bAwOzcftsVZNSdSnSlXxaTWpwKT6n
LzozKlmPUrUomh8V1aP0/hzB3DOSLlUifbY/VijXBEhbovqC0KVqZR2KNKnK
NplCm0rsTy/tlufMK3liu5OZpPTlUi9tkVPUAynbL6fChQbzgO7HLR1d6u/+
6f8m3ae6qTt6+3q6FPVxq1l+FmWe+ef/6h/i7vPBX/0QykxWoekcOVmKGxLy
iXKKG6I/h34m1eK0t7/r3e/Fl//xP0TW3Qf+54ei37d6J1O+Nq0ulehFujHD
IPIFKUfpP48UCN/TF7/89ej9N9OlvvDFf0o6BuSL+uaNufiHr/0/vPMX3p10
e0mVed3n19YfSaP7hXe9N+m2r/zLt3U5bxyBM2gyDyLP6BLXCV1vOUZnyl7w
dD1TOcqcKXWWTvraVCzH70SZFwUNflR2pdalGjq8MDb5dL/umNcHyXOUU2aL
1qhpfVF1KfLsUq+EsVVekypaFS+vok3RXETy8tLsGqqF37QLPt4bxXoUy/Aj
r1RRQq5mca1H9E3ofeyYcg5dcWWnyJqlfNt/++YJHM82ijWzw8k6xnqs6wgi
cwNNinhUmf0pz5RyiutM1aPi/VGyN0rVpI4qWX30eDWvT+2lSFqnFD/xcYML
WdK1ll+zni7lYV2KuWW6FW2KZk35B6TPxUMrEpeFNjW7eBsee+IpXL16Ve+P
/AwGg8FgMBgMxoEC+aRIk+oZPBfnWxL7674UmlR4HgFFl4pxYZ28vrk4TUrV
uNgfde2TdKnKRi8yiq2KLmUVeSx5mr50qv9VdwRg6pS+btP0p9cGRK6S2p+u
1gB3a5aHqFlQLUTRpmQ6UFDtFbV9PY9bKl2K9BHK3aM56n/1pa8JXUl7O+kr
jkDM65VKl/r0H34OZveY6PtWZzrRc2p1JZqX1NgVn9X32T//ctzzfOGv/zF2
2+e/FP863vUe4b/SngPfujEPn5OeY73XpupSdF/ta6H3qJ0llYob6VLkW0rU
zP7+q9+KezzlEib2v//J//nrdZ+f+Ivv+0D0GNGsqV98/wfibv/M576o27nT
6Z5ARWNPNKPsZJkDhdVb16VUz1R+teyZol70mzSeqc3z/CxKbqb0Gsp9KJKu
6ypzAE2p/FId5JcK6HbMmNcXW23DKKx0RNcCWluyK7woMPWItYf6Iyrb5XWp
ql3unaAeCpEzK91HeHnLPcKrseN+CW2GX7ELJ6RrLbc6PleMZr1VtvSKnE69
jx2TuR02dAaRV+GU140ETTbmlbIJfYmuR9KK6foiXUplUl5fkUNQ5Dwr86OE
RyqqSa1/zZEOfJw04Cp5jlsqXaqs3osW+4jux455+BivTS2iZ2QVPcOr6Btd
wdzyHXjk0Sf0/tjPYDAYDAaDwWAcGFx4/kXccsf9wicVr0lp8vskajUp1SsV
GNBoUQPzUT3Kn2J+FGf2XX8knaGqyYcTxVbFvyHrUtG+9Ca5J500qVpzAFUd
cg2wVFMDJG+Vmud3tHB3svzi+nSVPD9Vm6KfU2jyCW3K2aPPcUulS21E0m8K
ylriniNR+6H/p8oozC9tibvf//7Yp5Luc9OJ0rj7fPyTfxC9LXFu09f+/cim
728jv9S73/v+uNve/Z7347+PF8PmTT0/fiNdKvE2yiokXS7xORKzA+k9rfcc
P/+2t6PZEp/TRzOltPf5zY//rm7XnCMwjUbzkHStyfU+6j3PMzq3pUsRybeR
U0n1QcUzlZ+mLpUX06UyjT4YpOu6xhJAcwpdqrnLj7qO5LllTOZesM0+hKIq
p0aXsiPb6BV+KPLr0hpU3S6dr13y2lSp9ks0KP0SlOdnVPP8HDvK8ot6pRIy
/NQ6OfkWc6Xr76BkzDKZWyHtAVusgyiocos1Kf7cN8drUiK/zyGuKdqHxXQo
RYtSGdWk7HGa1E0aTWr9dSmmS5E3MUe61gprUmfdVrf0sBbM3DbF5+fgnNCm
yC/VO7ImtKnQ+Crmlu8U2tQbb7yhdwmAwWAwGAwGg8HQFRcvvoL7vvsQwmOL
8Xvqvg3y+xRdKtEbFe+RYk2KKdckatt7kVliV/wbVtH3mlvlR3G9P9qXTvW/
OmsA1Z2xPL9oDVDkJnlEjYLmecTNCdixNqWZNUV9tzQzpFjRpqq9aLYMw+7f
/3keW9GlyN/0L984lvQcidoP5Qyl+lmUZ5cqo07LxNvf/0u/En38z7/tbXG3
Ub7RZu9vI12KvGCp3ifNiCL9iPxd2ufaSJeijCXtbR/+6CdSvp6Teaa4+5F/
Kp3nV5mo22l1LT3Y7hxDboVT+Jvomssqd2wry0/rmcoqd4l6Yco5U6lqgKou
JTGrMqZLtSZoUi3SdV/XyboUc//Y4RxBaa0neq5SfZvWmIIaf5yHt9ai9Eu0
a/L8RL8EZcz65IxZab3Yto9X8UoJz66S4ZdTHcvwU7M0S+q84prW+7gxmVsh
9Uh0OEdRZPJIe7eNZkrJmtRRMVNK0aQUqlqUPD/KEeeREjOkChNy+zbzLirr
FT3uRFnsekvUpYqk666KdSnmTkifd+nzs/jsvIDA8IrQpnpHVhGeWMXi6h14
7ImncenyZb1LAQwGg8FgMBgMhi64dOkyvv/DR3Hq7Pmk/fR6+X1RXSqFDiWo
aFEyZ1mTuu55Bk2WMLLLnBpdyiVmdFBekuhLV+p/DbYATF2yTqXOmZJ1qR5k
VXjlLL8ipTd9t3QpjTZ1pED2TFGW0lFlZoHQpqzD+96nno4uRToNzVev7+hJ
+RwbaT9a0hz3rXiziDR/ih7b6RxJuq2mxbvp+9votZGf6UMf+di6P5v8Slrt
ayPd6C/+5qtxt/3+H/95yteTZ2hK0vpIU93s+VVmSK//IOlS8nz5kPAnUp0u
w2BHXuXOPFPk2ThR6ozOkE+aNbWOLkX3z63xobRd1p7bEmdLmaXvm/uFVqD/
3yvm9UCzexyVTf4UupSsPWl7JWhtojVKzZiNy/JTfLxHtunjVb1SRwqp5u4U
dXLK7FO9UsUmF06Wu3RZg5jMnVDVpMobfEk+qehMtXx1zqeS3ye8UqRDyZ6p
qBZVbI96o6g36YiiRwl/VFxuXxp5mnny2nSkyIaTFdK6ZkrWpUqU7MxG84BY
S/U+lszDy2jmiPSZmPL8SJPqG10THJxaxcLKbXj66Z/g8uuv610SYDAYDAaD
wWAw9hVXrlzB4088jTPnbku9j95El9JqUV6tFhWMaVEeJf+PZ0ld3+xwjCC3
wp2sSzXIfekmpf5Hc2eEZ6ojNs+jSGQm9YjMpLje9F3VpTTalNK3fszgEqRs
pSKTFy22kahOsT/HLFmXotnqpJGU19jE7Zs9R7q61Fe+9u34rLufeyt+7f/7
6LokzehoZrl4rLl7POl1ltVYd/zaqAZL7/cd73x3Sm2Kvk8/m+67kW70pa98
I+623/7UH6Z8PVkFtfF+qbe/M3rbYdSl6Fw1d08ip9wlaoKkT2WWOVLO0EjX
M1WgeKaENpykTaXwTNH/86n+Z0dujR9lHal1KfJK1ZvDXHdn7hut3inUtgcT
dCk5x6+sWc6TVXslGqyyZ6pSM/uQ9CvKl6XHCB9v0TZ8vKpXSvRDyBl+WZWK
P0q55gpr3NL/veJa1vuYMZnpktafTtcYKhp8qc97Zd1IrUspmlScL0qlLSmz
T2hSG/VHpLzuLNI+zy7rUjWpdSnqw2h17O++j3ltUs7zkz4Th6TPz4NL6CVd
aiwicQ0D4yu4+bZ78ONnn+NMPwaDwWAwGAzGdQPa+z799DOYOHNeaE+J++dE
r1SiLpWkRSVk9WnJHimmzTcltJ2b8mVdimYFkC5FuhP1pVPNj+p/NHeGtClR
A2yP9abnU2+6Ue5NP670pm97xvwmtQo1z480KaoTHjPIc3Uqm/vQ6R7ft2OW
SpdKR+/RMl1d6sYMQ9z9Pvpbv7Oln0OZd9rH0yyo3Xpt1HOdWVCTNMOKSB4n
us9GutG3bsqPu+1d735vyp9DOYhxeX//67ejtx1GXUo+dmdQ1xnGyRKnqNkd
L7Yhr2p7ulSJkmukeqaoRqitB6acNaXU3Y+VuJFX60M56VK2ZF2qtsMndCm9
jxfz+iH9XaGM1qMF8nlK53NmuUfoUuUt8kwptVeiWdGm6HuU5UfrVjRfdic+
3jy1Jm8XXinK8Ms1xXulCmo8qGnvZ82WeahIum+VtGe6MUWvQkyTsop+iSMJ
ulRKLapApXX7epT2NUjPcczgiOpSxevoUu2c4cfcJaralDdMs6ZWhCbVPxER
uX6Dk6u48+4H8fzzL+hdHmAwGAwGg8FgMPYc5JO6cOEFTM7cLHL2EvfNcubA
TIq5Uql1qGQ9KvY8rEcxVZbX+3CsQNZ+KJeFdCma46H2pTfa5LkzrUoNkDKU
yEtFWX6UmZRb6Y+fMbWNzKTNPVPaGfTOqDZ13EA+ETeqWvr3LdNlP3UpQ2Vn
3P3e/OafRWNX+rN+EjWjX//QR0XdN+73X2vHl77y79Hvp/vaVNLjfvXXPxL3
mP86ViRu20g3yi9tSTqO+aXNcc9NNd/3vO+X4+7zuT//cvT2w6pLEel8Lajy
yp6pQisySx3bzvJTPVPZFfIM+iMJnqmUupR0n4wyL/JpllxnAPXS9d2RpEt5
UW8O6X6smNcXO5xjOFlsFrVzOpdPlnULvYm8ujVm+VxtVtYk+rdOyfOjjFnq
l8irDsg+3rJu4e/Y6owptQ9CeKWkNYZq5AVKTVzMlaK5N7Ve4TthzwbzMLGu
I4isUvu6mlScLkWaVKE9Tos6EqdF2aI61E3K/Kjo82xzr0fX3TFpDcs0upBX
40rpIy4wdaNjH3uRmNc4lc/EnqD0eVrJ8+sfjwhtijSq0enzuP+BR/QuETAY
DAaDwWAwGHuOF1+6iPO33ZNCk0rWpVRNaj1vlMxkbxRrUsxEUp7L8UJzdN50
bpVf9J3TPHnSpagvvV1hXA2wKSB62POk+8u96Upm0m7rUlFtKj7PT+hSgk7k
Gql3fX98HfupS9E8p0TP06/82odRUWeP1kNJFyJt6R++9v/wmx//NJotMR2B
vpf4Wikvj7Lxcoob8IW//ke86U1vEt9v6urf8LXZfafw9nf8Aj7zuS/CWO+M
/gyaY/W+X/pgvF+qZHO/VKr39ta3vg3Hs43itZSaLMIfpr39Z37mZ8R7V5/j
MOtSxKqWPpwscciacJFN+J4SZ7yny2Jl7kamyPOzx831SNKmFL9URqmsS1V0
yb7IzkRdqs2D+s5+3Y8T8/oi6VJZJbIuRecw+Z4Ka/1Cl6JsWeqPaFXWJPL4
NdpieX6UQZtvCiCn0hebMbUVXUq5NtR1JqPMhZyqmG+DrlGqixube3U/Tkzm
VljfGUZuhUv44+M1qRT5faTLJuhSR9b1R2k1KfP2PfNp6VJulNR50Ome0P14
Mq8dxmZNnUNgcEnMmCJdSnB8FXPLd+GxJ57Ru0zAYDAYDAaDwWDsGV548WXc
fd8PEBw+l6QbxetS8fl9rEkxd8ratl5klcr5e1RvoAwk8kJRXh9pUC2aOnW0
BmiRa4Dkq6IaYLZRm5m0V7qUUjtRaobUx075SsdLZW0qr3J/Zk3tpy5FTMy7
U/mWt9wgdCJVV1JpqOqKPrbLPYqff9vbUz4+kS3W8Iavrc02GPd9miNFPqkb
brghydNFWhU9ZjPd6Jv/nZvWa1P5p3/2t3GPP+y6FGUqldT5o76QzDKnyAjb
bp5foZJxdFLRiOO1qdh1JNf/rDhZ7kNBgx/GLvm6TtSlTM3dqGnj+jtzf2nu
noDB5MSRfFlPlXUp2Q9FulSjZhYaefxojSIPFeX5UdZfsXRNRX28Sr5suv0S
qi/3iOKVyqxwIV9zjeVJ15eh3o82x4jux4nJTIfUu9JkHkROuSNek8pVNSl1
b6V6pVRNyhabG6WdHaXRpDb05W5Tl1LnueWv45cqrmFdirnLjH7Gps/WlOe3
jL7xNYRORRCcWsPQ6QiW1u7GT559Dleu8KwpBoPBYDAYDMa1hVdfew33fveH
CI7Mp9wvq7qUrElpdanZpMw+wRQzpGQegL0/88CxxTaIgip3tFZN3idDgz+l
LtWhZCfVqzM9WtTcJL+YAaJmJm0rwyUNXUo7a4ry/Kh+Qf3spE+RX6uw2ot2
51hSVt1ucr91KdLZPvV7f5q2dqP1ExGPZVXgZ3/2LRs+hm63dI9v+NrIL5Wo
gaUizcRSf/ZmupEjcBqf/sPPpfW+yOfVbh+Ke/xh16WcPTOobg0io9gmz3sv
skvX4vY9UyLPz+RCtpEyLh2xPL/8hLphvnKtGwMoag6gyiz7IhN1qYZ2Hxp5
vhRzn0l6bW1bD44Wyj4nml2YL60xWl2qXXOetmvmH5LPt1R4ef3IqfQLTUvW
aNPQpdT1RfVKlcrXUpFG982rlnNjOb+PeRhI52mXexxZJVbclEIziupSiial
eqVEhl9BvD/qiGZ+VKJHakc+Kc0ej3qOxHVXFcvO1K5xZbXS9dfcA4tnUvdj
y7yGSD2bqjYlfY72hRfEfCnSpMKnIwhOytrU+VvvxksvXxSzoBkMBoPBYDAY
jGsBV69exQ9++AimZtbW3S+n8kqt543qXk+T0nvPzzyw7HKNoaTWJ+tS+fIs
D0O9T9T36i2yDtWZUANsVjxTNINK1ABr/SI36USJS66F76Q+sak2JXumtLXD
k+WKd8rgREmdFx2uvZs9YPFMiLw5Vc8h31Jtq39Lz0Eai/p40noKy9s2fQzp
K+957y+tq9v84vs+gK987dsp66XVTd340Ec+lqQrUS4eZf9pdbWNXtt/Hi3E
u9/z/pQ/n7xTJ/Nr4n5uSZVZPIeqi/3mx3835Xuj7L53vzf5een10fe/dWNe
ysel8/z0+ul51Of8nd//rO7XnJako5bWBWK6cLkTxdXb90yJPL8qFzLL1s/z
o/8fKbIhpzoAQ2sANQn6M7HZGkCTpR8dzlHdjxHz+iLNlWuxDopsSzpf5bmH
XuGFqjHHsmW152tbwvxDNc+PPFP0eLoONqybJ/hxKUuM5kpRNqZB0XyzK6Vr
rN4vrX/Duh8jJjMdkn5DnleaY5jaH6jRpRTt6UhBwgypOD0qxSyp3drvkS4l
rVknpP1cTrWsA5ckrG+G2m5pXRoUfyP0PrbMa4yqNkWfoYNz8ItZU7JnamA6
gkGJY9Pn8f2HHsErr7yqd/mAwWAwGAwGg8HYFTz70+cwu3S70JbW2yurmlSi
LpVKi+ru49w+5tZo851CeWOvoktZkFHiQjHpUh2pdaloDdAm1wgrWuXcP6oB
kmeKauE3KvlLe61NyVlLTpwok7Up+pfq8bXtoT3tpyXtp8M5LHLytuvNUh9v
801t6XHm7nHhiSIfE82JMlR2ioy9tH7X3inx2JN5JhRWtIvXsJ3XVtceQK6h
UcyRKpZ+fpM5uMH5NSWeS8322+y9ldfYhAZHWpnq4dr4/N38+el90zFK5zXs
N+n8aegaxAmDfN0cN5BnyrktXSqa52dyIaeSPIROMRfkxsQ6onTtUN09ryaA
UpojZ02+zuuka7vFMQS7/5Tux4h5fVH2eEzgeLFd/L0nv1OOsXtDXaojYf5h
WVMARXUBkecn90vYNvZ0qP0OwovrkD0blTHPBvkQcyvdqOkIizVT72PEZG5G
Ok9pppTwHa6zp4p5pWJzpQTzE7WoPdSj1NdC61KxQ+jBuaaYT1HrBy6s9Uj7
hEn2KzL3hupn5/5ZedbU0Ar6JtYwcDqCoTMR8e/YzM145LGncfnyZb1LCAwG
g8FgMBgMxo5xx13fRXhscd09stYrtR4TdSjWophbZVVLUMwdoJoD1QUKa3wi
x289XUqtAVKeH+lXZc1yDVDkJpW4ZY/GTnNdNtSmLNE5IFRDpPlSpEtRPYPq
ibmVHtR3DXBPLfNQsMNFnilfdMZbToUThm3OmYrm+VW7kE3Xg8EZ80zlx66b
E2UeFNQHUN4ZQJ1mXo/K2k4/2tbRLZnMvSbptSdLHMrsNRuyyt3Cm7ueLhU3
/9Ase6ZKxPzDHumxXjH7cN1autYvQl6pYnk9ya2Wa+NEmndT0dQr/I16Hxsm
Mx02W4aQJ60lm3sELTHtSTM7Km7dSJUHu8t7O3m2lBOZRhfyTLL3N3FdK67z
SPu6vctpZjJjnik5z69neBUhmjE1ExEMTa5hZuF2PPrEj/UuITAYDAaDwWAw
GNvGpcuv43sP/gijp1fgXccrpdWZ0tWlXKxJMbfB2vYgMoqUHJVCK3KrfKKu
t54upa0BUm4SeaYM9QHkVflFDqDoTd8rz5RWm1Ly/KiOSHOmqJ6hZvoV1fjQ
ZBnS/dgymZuRavAt1hHR1061wAyDHXnG7XumSjV5fifLZM9UrMZoFVpuptGH
4uYAjOvMlqpq6kazla8fpj6ka6LASDPSZB8vzQ+kWYYb6VLUL9GS4JkqrA0g
WzrXj6v6bF6KPDONV+qI4pUiHSpf8WxQjTyzwo021qSYh4TtjhGU1nlxJH8D
f1IqXUrri0r0Ru1Vr1Guuvek2VJOZEnrVn6K2VKltd0ob/DDvofzQ5lMolvR
psgz5R9YQt+Y7JkamZXz/EKTq1i77X78+NkLepcTGAwGg8FgMBiMLePKlSvS
XvY5DI4vwhPcZF+cQpdK5Y/i+VHMnbDJPIC8CrtSq7Agu8InZsyTLpXoo0j0
TNGcKfJWUW96gZjn4Y3O89gvz9SRQvJMyX4pqifSfIKTpS6U1Emv1T2h+/Fl
MjejxTuFsnqfmKlDMz4yyxwij2+neX7ZRpfI5hRzQpR++GMG8oL0wCBd45Vm
+TpOvL5NzR602FiXYupD0qUq6ruRUSTPhToufLzSedklzz7r2KBfguZM0f0o
94+0rNwqP06UuqV1wpbsmUrwSh3VeKUKlPy+7Co3qlv7YPFsLXOVydSDVmkt
qWwK4IRh/fw+da8X06VSaVGW6PypPdGiErRh6pegLOZsRZdKXNPKartR1dy7
7exkJjNtqp6p/ll4Q/PoGVpGcGINw2cjGD0n5/mNnrkZt3/nQbx88RW9ywoM
BoPBYDAYDEbauHr1Kp5/4SXcefcDYhbURvvieF1qJrUeJXgA9vDMQ025t9Yj
1yryLWJOVEmDH7Vd6/ulOpXedMryi/Wm+5Fj9CPD4BJ1vj2taWjm1GtngpAu
lVkpz5rKruhGZXMvzyJgHnhSra3VPoysMqfQpY4W2ZBdtjPPFOUe5Wvy/Kgu
T/oU6VT5tT0oae2BKcVsqQZLAHUdPeh0jup+XJjXJ+lvdkNnPzJL5Sw/6nUg
P25lWwCNG+hS5KNqUrP8pPsaaPZhdQCZZZ64LL8bE323CWsIeaVIl8qpconZ
Vl0804Z5SNjQFRJrx2Z7KK0ulaxHJfik9liXop8lZkuVy9dcQYq1rLTeI3qo
+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
hVLKKbQN637Mmcx0SP3j7c5R5Fe6cazQKnyImaWO5FlTlOHXIGf41ZvDaHGF
4egJoVejS/n7Q+gJDmDq1LTQpYiLNLd7UdamaN6UrE3Nppw3xTV85n6RMszq
O/uRYZD7GzLL3ahoCsRl+aXUpNwh4ZMiTcrhkb7uDsIq/X/0zJJ0fi/DH55P
0qX4vGYeNDZbh1BY5dZfV9rxviwhw88oe9hLNF6p4tpu1LT1cb8Q80Azbs7U
0DKCk2sYOxfB7GoEq8pe6rS0l7rlrvvwzE9+qneZgsFgMBgMBoNxDePq1at4
6eVXMHlmlb1SzGuCNM+jvCEgtB2qAWaVe1DTvv48j/VIOlajJYDy5gByq3zC
e5XomdrTWVNaz1SxEycoM6ZKnjFFNRCatZ1X6UJVaz8cPWd0P+5MZjpUc83y
K7txtNCKY0U2ZJU54zP86tzRDL9GSxht3SG4e+NnS9m8QYyMn8bS0nJUlyIu
rMq+qYnZNQxOUabfIvummLpS6LGOYZwsccizD6W1pKjWK+YYptKlLM4+WF1B
2BWvlF3RpAJ9w5g5t4DphTWMTK+hd3g5el7Ha1P6v2cmk0jnfmVTD44VHgBd
aYekvZ+c4Sfvx7Ir4zP8qL+isMYrMmudvCdjHmjKawV5pnwDi+gdXcPQmQim
pb3TorKXoly/2ZVb8OBDj+LKlSt6lysYDAaDwWAwGNcoyJ//0MOPwBeeOwD7
ZCZz53SI3vQwMktkf9PxYifKm73byvJrtQZg6gygqNYf9UzFa1N7qUvFPFNq
bozqmdLO1y5p8KPNwXOmmIeHdv80Gs2DyK/0iJk7lJOZU+6EQTm3yynDrzkQ
zfDr8oXg08yW6g9Rrb4Pk6dn4jQpouj1XV3D7HIEk3MRDJ1aRd+I7C1ZT5vi
mVPMvSTVqMk/YTB5pHPdKtaRHKMbdeaYj1fVpcya/D5ZjwqJGVPenkFMTJ4W
5/e5lQgm5uS8Sl/4HDyc58c8oGyzD6Ggqlt3TWl39mOaDL8KF3Kr4zP8ik1u
4WHX+5gzmWlR8Uz5pL1Rz8gqwqciGCfPlLS+rKl5fkvnhWfq2WfZM8VgMBgM
BoPB2Bs8+9wFnJk7L7KNdN8jM5m7xA7nKMrqvEI3OlJgQ2GtB/Wd/i3rUuSx
arCqnikvMgxO3FRgjdOm9kyXUmohN6lzthXPVK5mzjZ5pvJNbhibe3U/5kzm
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
i+gbX8WQtNeZWoxgMWk/dB633fXd/SxlMBgMBoPBYDAOMR557Bn0Dc7pvtdl
MvWmw38aTZYwThjsOFpoQ16lG6bWnXmmmqwBVFOeX50fJ0vdOFZk33Ntip77
aLEjmuVH+TJaz1Qxzemu9bEuxTxQdCu1e+GVGlhAz8iKnBWzGBGeJPJLTYuv
7xJZZ2+88UbKNe3y5dfxyKNPYW7pDqFNkTbUP7qE8TMrOLe4hrU98E6trqmz
pyI4I73GyVnSp1YRnlgRvhS/9H420qf0PvbMPaL6O+6Xsym7g3NR9g3Pi/lR
jz7xDC5evBjnk9LixRdfwm13fi/qmRqbXsbCDrSpVUXfnZiLiPNTzZ5kbYq5
FyyQ9lE35Xfpry/tQJeKeaXsOG6Qveh51bJPirSpbGmfVdMegtXL+cjMa58i
y290VcyYGpPWkdmEnp95ylm+5Z69LF0wGAwGg8FgMK4RvHzxIu665/vo7td/
n8tk6k3SaayeSRSZPDhebMNxg0P6mnpg/dvWptol1lsCKG8JIK/KhxMlLmXW
lFXRppQ8v13UpqiGQnO5SZeiudx5KXSpwhoPWu3DcASmdT/uTCYx0SvVP7Eq
cmJOr8ia1JnlCM6u3Iq77//Bpmvb5cuXhTY1v3IHhqeWRT2f5veMnl7G2fm1
PfNOEWkG1qz0WklDo9lTlJk2OLUqvC6kT6kZf4kald7Hn7nbTNSkYrpUaHQR
Kzffg6eeeXbTc/n111/Hw488KZ27q1HP1Om5VTFjfrvn6KKi8Y5Mr6FvZFlo
t3Ken6pNzfA5ydwRaW/RahtCZqlDf21pJ5pUnFfKgRNl8lwp6vchLzr5popr
vdJ+alT3Y85k7gfJ89szvILQVET42acT9lO0v1q6+Q785NlnheeXwWAwGAwG
g8FYD0889TRmF2/VfY/LZB4kNlkGkGd0Cc9UVrkLxhYv2qzb16ZarAGYOijP
L4CcSo/ot5VnTdk0nqnd06boueQZUy7R15uTMGPKILL8ulHT1geb75Tux5vJ
FJqU8Eqdgy+8IGoe1Is7sRjB7NoaZlZlf0fk9vtx4cLzaa1v5Jv6ybPP4c7v
3I+BccrUmxPekNA45fpR7WRvdCk1y4Zq/+TzmlmK4NS5CMZm5Ow02T81H8v4
S/JP6f/7YO4Gz0bPa1WXIk0yPL6CyK1347k0z2PCyzQH9Ls/kM6ZWWXO1JK0
d9uZZ4rmgNB5OXx6DT1Di5pZU7Nxmqn+x5F5GEl7i4oGykW26q8v7dgrZRN7
KspHzlS8UgU18r8npT1iQ9cA76WY1w1pPdPOmDq1HBFrirq+UM/EUuQWfO+B
H+DS5cubL3AMBoPBYDAYjOsW33vwRxgcX9R9j8tkHjRWNgWQUUz6jg2ZZS40
mP3bnjVFj2u2ydpUSUMAWRXdimfKJvumdlubSjFjSqtLyXOm3Cit88Li4dwZ
pv6k+rdH8UrR7IL+iZVoH+65tTUxw+DU/Hnc/8CPtrTGUa/uhQsXcNfd90tr
3bL0M86K+jt5TkamV7C0h9pUtEZDuTYSz0rvheb6jJ8lLSCC4NianKGWoANE
eQB+L8ztMuaVUv1SdH4PSOf1Aw8+JOagbRUvvnQRU2dW5blpSp7f0g48U6Sd
zq3Inj7SS7V5fnSdsDbF3Akt3inklFHvzQHQl3bBK3VE9UpJ+6n8GtkvRb4p
ynvudE/qfryZzP0irWn+wUXhaR+eiWByKV6XknONz+P8bXfj1Vdf2/Jax2Aw
GAwGg8G4fnDnPT+AL8Q1ByYzkZ2uMZTW+YVeRHl+hTVeNHVt3zNFbLQGUNUe
QJH0vJnlHhwtinmmtLOmbtyFmopWl8qqlOcgxOtSLhRUu9HVzfUUpr5M9Er1
jshzCyYWIpihvLHVCIbPRnDLnd/Fsz99bktrHI3sIW2KdICfPHsBS2vfQWCA
9C/ZdxIaXcbpc2tY3IOZU6k8KvOrsj51al7O9wtPrAqvSup8P/1/N8wtUpnL
pNWkRA0vPIeZ+VvxyKNPCB/ferOkNgKdx8/8+FmEx5fF+ds/uohTZ1d3dE4u
KXrpxCydi2vKeTibNGuKNVLmVmn2TOF44e7Pz9xfr5Q16pU6bojlIufVyPpU
trEb9V1h2HyndT/eTOZ+kdYE2qv1ja9iaFr2tSf2SKysUt/DLXjllVe3vNYx
GAwGg8FgMK4P0Mz4W+54UPf9LZN5EEmzERq6wsguswvP1MkyNypbfGixbF+X
alNmTRlbAyis8UnPGfNNJWpTO9alpOc6VuxARpkLmUa5t9eQoEvlV7vR2T2h
+7FmXt9MnCsVnFgVXqlTKxGcWY1g9Bz5jG7GQz96HJdff33ba55c1/8p7rz7
AZw+e16prZxDcHQREzMrYlb3fmhTpIHNKtrUyHQEA5OrCI2vom9kBT1DS0Ib
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
oeS5/KKzYVZCoer3kjwczM9XCPPSedpuKKw0sfW0jEdxxripxvZlsHvvYbWb
RZ8L62NhztyNm7dBS6cVCss7nDgOztsLuf6QF2nrzFDeyDMlZEvImZA3IXdS
Mm7DOKnadkeslJ1J2WKm5Hn9Srh7LmZTmgqdLXbKET+VL+NT8hxtbtlUMc97
BjOj4q+xHTTcZ9LUZmGf0XAU5vM7efI06EwroKRKxz7rqiYjdBn6HzNlrzdl
5vkoPnfaWjMfNyV7VohNjSyHz82H8QFJXsYsqcilkEkFpMP44ExWexMtz+P3
2BNP9+q9Yx2h5194He657yG4+uprYNSoUXD/A4/A2JfehKj4bMVj0vIbYfzX
EYxf3HLrHew4fO2rrroKxtx1L8srNz9VOY79bx9+CQ898gQ8+PDj8Pd/TGAx
TPha1147isX93H3vz+z8RL4v/g5rHj37/Mtw0823stfD/V985W1YnOlcZxR5
ysO/+DX87L9/Cb968g8wd6HGvm3uggJ4/Ne/Y9t++avfQtziYlZX6S9/+5T9
Dms8jb7xZrZtkn+Uy/sXk5gPY198A+796c/huutvYB5z130svunJZ/5ot7e5
9jxxKTReJ7538T4vvfpOvz+jjz6dzK71Wu4ZEJ/7v+6+z/4+8P7Irzkltx7e
+fsX7F7ddPMt7HO89bY74Yknn2PnHFycqt1u5FJYN7SixQINXBvTaauRKW4z
9Fx7sW7TVrWbRhKJRCKRSCSSyjr83QnbHJnrvqYwb2OfZ1K970smD27j+tTk
nHqIml/M2NCE4Aw7m1rQTy4lsKnEVA3EJGlg5nwNBMYUwNfhOSxmSolNfclq
SknnYrCGAtaYmjKb51IhSjWmEjT9XqtLJmfZ8rthG5Kr7QJNhYFxKIyVQuO/
y2pNsPfAd0Oqdk9vhHWyfjh/Ho6fOAk7du2BJSvWQVWDAfJK+Tl6bFcFPoXc
h2dU3awekMCpBEYlWMyfxMbaUtL8fSLXiWpNiWKmJDn97FZmUxhXxPMphdgp
hZpTg7XPgNff3G5hn8WefYfgbM859hkNV+EzePz4CWjuXME+P2RTFQ1G6PZB
zJTFNu/YbbZCi47nqMg/3dWbEril2s8BeeAcEpMPX/m751Jf2mpeCn2VK53D
j8VK2WpKYawUMin8+fjT/9MnLoV9ptff/pgxBFd1i6655lr4WBaHk5BS6lS3
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
zalUe24/5FKTXHApdPjcXJizoHiQ1VYmDx0LNaU6GZPSVBqhqJpnUhjTY12x
EU6cOKl2Uzho9cMP5+HAwUOwfNV6qGuxgLbGAEUVGNPUyWKpkL/gfRbWh2Ab
zef963DwJHGMlYv8fAKPypWxJyFXn6v4qMHQH8D3jfcC70lheReU1Rq5e2WG
pSvWwd59B1nORJKykNFt2rKDcU9kU4UVOu7emcBgsvqMTRk4d3Dna+yyQmWz
mbEpfP74500pboryQw8XR8/XwOSQNBe5+5Ila2TE+YaduNSAMql0FivFuBT3
0y8kE+KSyyEtvwn+/L/v9ppLPSir6RQoytMnGPO7ifdRqhWl5KeffVFy3Kdf
zZBsl7Mi/L+r+qDyfd945xPJdsw/hzFW4n2CZy92ebw7LnXD6BtZXSbx+bGm
lHgfjNEStiHDEscrid+DPM8eMiJvn8fecCms24TxSb195j19Rt5wKYy9Eu+D
cVnyfb6aFCZ7Np9R/e+dt4NLobGvV9lqhWajFboV2oely1fAlq07iEuRSCQS
iUQijVAdOvQddOiWOfUr5fNMnuai1O8Hk8lDw/OStDB9ZgbjQ8iEps7KhWhk
Uz7K6Ye5ARM4z0nSQHiCBgLmFMCUiDw+dsqe10+In0phczGTI7JhWmQWBCpw
qbCYHJgVr4F04lLkXltgUl12JoWxUoWVJigoN0CHfgXjBiT3unz53yyO6uLF
SyzX4fadu2Hp8nXQ0mmFqga9V22woy1vs9esklvazrv2YKs3WVjeAe3dS2HJ
8rXwzaZtcOEif6/wnlEMnmf9cP48rFqzgY/J03ayfHtVzSanWiD9sZFzp8kK
zTorVLdgzSkLFFboId8pdmrw5YEk990z5+WCX3Cq+/x9M1Ic/RIFNjXQTArj
o5BHYcwUMqmZ8wogNa+JXX9fuNToG292YhwY+yK2fPuEKTMl54hOyGXcBnPU
Yd67MXfdx/LrXSvL3fbpl/6S4+SsCHPOubpOd1xJ8G23j5Hsg7nuvDlezqX+
6+77nc4t5yoPPPiofduvnvyDZNtf3/+cxVhhrNLDv3hSsu3rgDleP4+94VK3
3HoHzFtc5PJcff2MvOFSSrFqnp4hzAeo9t+7w2IuZYSKFgs0GZS5lHXJMlj7
zWbiUiQSiUQikUgjVHv3H4KGVrOkP+meSdlMXIpM7pNx3Wd8cjn4MzaVAhND
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
lNZa2HeByzxK+D2i9piYPCAW5hgwdx8yKd4dXJvQCdVNBjh85DhcvHgJ/v3v
f6vdvJFIpAES/n2fOHESVq7ZCFWNBtYWaMp1oK01QWuXBYwDkNdPsFGU26+h
k689Vd5ggaIqo71fSmxqcDguqRQmBqdJuNRXNi41PsAWK8X1Z3C9DVocN+U1
l7LFSDm4VKqNTaWw1w6fp4G0gubBVXuH7NZYm8rTWjex//Cn11S/ZrLMTlzK
YOdSJvl3utkCBuJSJBKJRCKRSCNSrrlUh0suJbCpwcClMKecnHvIc21jPjjx
Phj/It4u5laYp+6TL6ay3O+YBx5zt8nHP5ivTji2P1wK84LLz33D6BtZzdsf
33mXRy7V1+tOTCtn50GGJ96O+fIwfyAa8x7GJOZ7fI8YuyQfO2LuPcz7/s9/
TYenn33R6Toee+IZt/dIMMaKYZ1keawSvp43OfMFP/r402543f0wYcpMxfkK
zF8ojrPD68DckZgXEe+NPDck5vXD4zDODO8hsifx9jvH3GO/v2+//1mvnnO8
PmRT85K0EByVBROD+LoMk8MyITgmF2KTCrjnvj9cSgMpQryUjUtpbRbYVE5p
OZQ3tECzzgp17Vjnw8zq0BdWGkTfBW3KtT7UHh+TfWN7PSlbrFQJb22NHsxL
18Lh707AxUuX1G7WSCTSFRDm9Dt2/ASs37gNmrg2Ab8XsG+orcW8fibQDSCb
wnlNnZnnUxg/1dhlhRrGp7D+lNm+bgLXWDm3S220duIKWZlLpdpjpZA/TQzO
AD8blxLYlNdcyolJ2X5ynjYzC+YsKIXknAbV7wO59w6etUhxDCDvV+NYQ7xe
kDxILOdSVQaoalfmUibuu9y0jLgUiUQikUgk0kiUnEvheB3H8E5MqlzHe5Bx
KawnJR+nfD4uwL4d87BhvSbxdqwZKz5HUlYNvPvBF06/RyMPuPMn90iOx1qz
wvb+cCk5L8PcbuL6U/KavnIu1Z/rRs+ZnyfZPmrUdYr32N17xJx44m1YVwrz
C4qPx1pe8vchfp9KXAr5j8CK/vnldKftruqIKT4jCwvhpptvcbvW8oEHH4X4
ZOl1v/TKXyX74HsVb09I0TqdR8xEseaXeJtSjsneGO9Hal4jJKZVQcicXPAL
5uuG+4VmQCD3/5lxGDvlfV4/OZdKFXGpEhGXQuP/i8rKob65hc0Fdhgddeir
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
qXL9oOBS6AcefNSJfwi+c8w9isdgLjp5vjY/GxfB8c7b73/mdC5fcSmlPHzI
kr4OmMNia64dNcppu8Cl+nvd6JTceqd9Hv/N79nrv/vBF/Z6V+7eI16n/BzP
Pv9nlkMxdlEhy9eHcViS9/DM817fI8F95VKPPfEM2x/v1ZPP/BG+GB8I04Ln
sfeEnEnOMh/+xZOi9zZesg3PgXWxsPaUsA/Gp02YMpPFRr334TjJa7/2lpR5
XX/9aPjo08kwbnI4fPzZ1wP6t5CS2wBzEosgIDIXvg7D+uJpdj4VEJ0LYXF5
MGdhASSmeBcvVVLK/b7UM5eSzwXqbHwKa0/hPKBQf6qi0Wqv8cHiLjEfqJaf
C3RwKtGcIM0FXhkLdQAquqCB+5yWcW3Dke+OwcWLF9Vuqkgk0hAXsqnlqzdB
U/syKK81cN/1Hez7vqRGD1XNRmjqMEO30Tpg9adMwroJM5/fr9XIx/QKsVOY
b7a42mxbM6Gz8ylmW5tkb5eoTfLKiWmV4BecbudSuFYG8/Ihk+JjpXJh6sx8
mDa7AKbNKuD+LbApZy6FNaQCo/MhZlEZi5FS+70NZ4dEJkn6xw//4td9Og+u
l/vgHxNZPoc//++7EDxrkU+vU+jjo/F6A0V5DQb6tckeLOZS3PdmUS3PpdoU
4qUMyKWWEZcikUgkEolEGok6deo0rFy7zd6PtHOp8m42Nsd5Y2RRGN9QVm8F
ba3FHjc12LjUh/+c5JJL/eW9/3N53Ji77nPaH393w+gbFc/lKy6VmFbuxJY8
WZzHrz/XLfimm29x+VrC/u7eI477brn1dq+vH9+vkCfPm3skuK9c6pe/+q3X
14b8LCImXfLe5Ln8hLEv5i+U1+969PGnJa/92bgZLl8Ljx/ovwfkk8k5dRCz
oAhmzM7m2VSAY62yf1QeRM4vgPkpGliU5gWX0pZDt07X67XqQvxUm8kRN4Vz
gOUNVnt9D4FNCfXqmBUYlSS/nErfM8PZOSVtLEaq07ACvt29T+3miUQiDTNd
uHABjhw5CqvWboTKBu67v7yT8Sn8zi+q0nNtg5nl9jOaB45PCWsmOs18bj8W
N9XmqIWIfVyWa9aWD8DeLgmMStQuyXOeUrskNcZv43oYB5fi8wsjc5psy9+H
TGp6pIZ52qx8xqaQV+E+fiF8namvw7NYHamknHrV31NfvTizmuUTx1qkgv/w
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
zXj248Spi7h67Tbu3JvH4ydPpR7FYDAYjPcDaVS0bs7PP8LtOw9w4dJ17BXX
M/L3tC9wdkK7ZtD1JOZ1yZDPt/Tr0qKZfSvgutTSMYmBMR/2HDiOcxev48eb
9+TPlPIW3iySIUvnV2Z8ygxbvS5FupOWx0B6lFvtMaZ8il6lnzHl6vfrMhmm
VoxG9yFcSJfaVuFY0KvzP/3WPzE812K61N/4m79q+Py6LbmGz9e1jOAX/tov
fjRd6j/82dqo3/OH6FL/1S//N3Kmlv7rSyrbIrScFJ3GttQcP7OfLCWKbrcQ
P1SX0n8//+7f/38GzZFImX7x/v/5KUgZfrYuDzpGAxh0BzEVpceYnPNj35HT
n+mKwGAwGAwGg8FYqbh7fx5d/XPyHCT1yXQutEfVpWTPqPooPFrf6Ff6yfB5
xsAXkbPBZH5VbJ1ES6cbHSN+DKg9o9/UM7rF3/qBY6c+eE0hPw/Npf/x5m25
F3jk+Hl4g8cwNr0X3UMetPfMSg1Gey+W1khPlf4ce6yz5ovpUHouuvf3mfe6
6H3YO6cwOO7H+Ow+7Dn4A46fuoSz56/i5q07MjuR9lUZDAaDsXyQp2d+/iGu
Xr+J02evYN+h05jxHsSAWIM7RQ3s6Jw2rNGxrkkf67q0EjWpZnFdprzY0ak9
8mdz5MQFnDx9GZev/IgH8/MxfVELYZ+4ttHPlr4f6hHoLBv1D2OijyAdis69
edUegz6ms2+Uy6Bl+YVnTK3erPCFdCmiWWvS87sNGQs+1qxL/f1f/03D53/v
9/+v0OdqW4bxj377n0W8xofoUv/0X/yB4fP//Pf+VdTv+UN0KeLv/8EfGr7+
3/zffxrxmB2VraHPL1WX+vXf+MfG1/1Xfxj1/cfiUnUpjZQJqP/6/+KX/uu4
///8FNR0qc6xAAY9QUxH6TFmfXtw9Af2SzEYDAaDwWB87aCskxn3PtHvKX0w
ZWv1jAakLjWuZvh51HNOXrVv1PL8qG/sGjHnbKycHHwmkxmDrWrPqDvLaO4Z
fQHRM55cfs/46tVruad15eoNnDh1HoeOnsGc7wiGJ0mn8qKtZxb2zuj7TeZ9
Om1PUL+nZ/z8hOH+ptbIx5j1qE+tSdHz035fR79bzjzpH/VjYu4A9h78Aecu
XMG16z/KjD4Gg8FgfHqQ5k9nJ27duoOzYg0+duIc9hw4ifHZA+gfC8i12tk1
I+vi6Gt65HUp1jVJf10KXZNiXo8+33WJ3pOja1pek7oHvRia2AO3/yiOiWv+
5SvXcOv2nY9yNuKH0xfQM+yR3xfpSqQzUe8wqupSc2p/4Vd9U9PqLFvKZSDP
FOlY4azwL1OX+tP/tCGqJvVzP//zciaS/rGL6VK/+8/+peHz5Dn6g3/7xzJv
zzzLaim6lFkv+oVf+EX5/mmW0p/9xcb3ep5ouhTxN37zd/H//uUm/J//7j9G
fO7v/N1fN7yPpepS/+HP1hg+R7l+f/Qn3xh+zpSbuHZTtvSG/fGffPfer6sn
+cj+5q/8d/jL75IMz/3nP9tq+Pq/9/f/x7j///wUJF3K3u2TutSQR/FFBkz0
+vfgpFgfGAwGg8FgMBhfNyiL4+jxU7Cp/R71ft0jqi7lVXQpbVapXz3TGOob
p8N9ozFnY/X1jUzmV8NWpWd09PjRRfPH1bOM5p4xENwnZ0h8Cjx//gK3bt3G
D6fPY8/+Y5j1HUTPsB/tvW609szB2TUr8/9otrq17f336DTvVejfTuO/Gz/R
2kSvS++T9jHpbLijcwZt4vvoHPChdzSI0am9cv7WiR/O4uKlK/LcPoPBYDBW
BiiL9tGjx7h8+SoOibXaFzyCsel96BjwymsSkc5P0BpP5wyaPuBastB16VPW
y/QeyZtM11K6Jjm6ZuDq86B7yIfB8T2inj8sr0nEH2/ewouXLz/6z/Xa9ZvS
E0zvh86tUS6fXpdyG87CKGffJnV5fpTlR5kM2gzb1ZjJsJguVVrtijp/iLxJ
5udaTJf6fnNOTO9VLH6ILvUX3yXGfB6aB/U+zxNLl1qIZv1nqbpUbfNwRJaf
pt/R+//5v/oLhvv/4T/6X977dfX8l//634ceQ9l9/+2v/W38jV/+1YjX/bd/
+Gdx///50an2GM7eALrF3/qwV/FFRusxzpy99NHXHAaDwWAwGAzG6gJ5Ga5c
uyH61VlFl+p0iz4wIM8qarqUPhPar+sbtTw/0rG0vpHOQ67GvpHJ/GpIPWP7
FFr7AugRf78jMXrGPfsO4Oz5S59lHaJZd0+ePMXly9dw6vQ5HD76A6bm9mJg
1IOO3tjn1lcK6f119M1iaNwrfm5HsO/gUdFvn5c+MQaDwWCsPlB9fPfefXlN
Igb2HsbolLhuDpGfairu153F6OycQs+gW856pGvSwcPHRb1/HS8/gf4UC3QG
w7vnmHw/pEu1i16hdywg+4dp0Ud4THWHRzfLlnIZlLNv6owpmcmw8n/uZi6m
SxH/h3/4WxGaxZbU7RGPW0yXqrePSQ0klr5DHiyaWbVUXYq8P7/4n/31qM/9
n//1X3qv5/lQXep3/+nvR8yfWqouRUxIL8Ff/YW/9l6v/Vu/87+99+vq+f/8
0X9a9LnpfVWZ/HBfBMkTSj1Gv1grp4IY9cXoMfYfxMVLVz/bWsRgMBgMBoPB
WJmgM6J37z2As3tO6lLU93UM+gy6lDnfK1oOfOdQMDRjSsnyWwG1MZPJjErZ
Mw740TcdxJiapWOcLRXA3kNHcO3ajc+2FlFm0OvXr+Ws+ucvXspsu8dPnuHh
o6e4dfs+rl6neVXXcPDwSckZ734MjnnlbBDafyN+yBn29/o5tU2Enpvm8A2O
+zA5t1esgQclj/9wFjdu3sX8wyfyfdL7JS8Y8eWrV3J9ZTAYDMbqw7t37+Qa
TtckeV0S16QnT5/j0eNneDD/GNfENYmuSydPXZDXJPL+km7VO0xzFGfkdaOl
4+OfqWhxTcrnbuueQc+QB6OTAcz59str0r6Dx3Hu4hXx/pRr0qPHT+W1VLsu
0Ywo+r4+F+hntvfgKfV6Oin7hIV0KS3Pj2bZjrmDGJhUZtm29/vluTllxlT8
a6gP4R/9x5+FfDPky6EsN/NjyOdEmXKaZvHLv/JrqLePRjzud373fw89Fz0+
Pa8q4jG7G3rxm7/9zwweLPr47/zdf4C8HY3YmFQYup+eo3iXPfS19Hx0Hz0/
ff7Xf+O3I54/s6AGv/KrkdoXZQi+z/NE042+XZeOv/aLv2i4n7xLf/jHfxGh
SRE1bU37OSRnlX/Q90BZff/89/516DFm0v30M8wqrH3v19WTPHC/809+z/A7
DWmDP/fzMluxrLYz7v83PwlVXaptKIC+GaXHcJv+zmlvYd/ho7jx463PthYx
GAwGg8FgMFYmDLqUc0L2fO39XpnjN6GecTLrUgGtb/QpfSNpWKG+scsdmk38
uWc2M5nMxanMeZiFaziA/rkgxv2RutS0N4jDJ87g8eMn8V6iJGidov002ht8
JN4T8e69edy8eRfXbtzGlWsKL16+iQuCZ85fw4lTFw08fOwc9h/6AfsOnYQn
cETe0r81Hjh8Gsd1jz997iouXrkVem56nZu37uLO3Qe4/2Be8umzZ6w9MRgM
xlcG0nbevHkjr0vPnj2X16T5+Ue4dfsebty8I/Uqum5cvnpLXpOIJ09fNlyT
jv9wUVx3TsnrT2DfcUn9NYl45Pg5w9ecv3RDPic9N70GvRa95t37yjVp/uEj
vHjx+fxQi8GsS1Hed++YX/YO5Isy61L6PD/9LNvOIWXOFJ2dW439BfliKi19
qGkeivmY2pZhqZdU1PdE1WI0ku5UZelHXcvIgq9Jr5eSvQubU7ahoqEn4v3Q
a9FrRnsf9LX0OrGem97ftgqH9B4Ri8tt7/08sfxM9HjSedZtzUNBqXXBnwGR
vid6/qV+D9r3saOyFYkZO7FuS664LUV+iQV1tkhN8H1e18xq6yDS8iqxSXzP
SZllyNthkffF+//jpyT9fbZ0zqJjJIAB8Xc+4Y+uS504ew5Pnj6N9xLFYDAY
DAaDwYgzqLd+/uwFhsYDMouKMjJaezwyn29S9VFE06W8ur6RcuC1vpGyNsgz
pc1ujnd9zGQyjZTziLs86BxVekY6l+wz/X2Pzvhx5NT5Vau5vHr1Ss4K0fPO
nbu4fuNHXLl6XWYyXb12Xf5bI83XePjwUejxdLacwWAwGIyPgadPnxmuSaQh
3fjxprz+XLh4GecF9dck4p279wxfs9quyfR+T5y6JL1d5Gem/qBr2I/R2di6
lOaZmvYbz765BpSzb6Rv8Rzb1cvFcvaYq5uKL9JrmF9r7jFmxd/2+ctXV916
xmAwGAwGg8H4NKDznpOz+2DrmJL1pL1rTma6L6RLhbI21DlTlLXRPaLMJ6bz
jErfOCFn2cS7RmYymWFSvoaz149u6hm9QcxE+fuedgdx6tyVeC9NDAaDwWAw
VjEof5eyDcnjRDnfrgGf9EGRLuWNUn8YPFPanCnd2Tdtji2ffVudZF3qy6ZV
/H1q82uHY8yv9fj34vK1H+O9NDEYDAaDwWAwPhJktpXJG3D79p3Qectr12/g
9JnzuHzlWui+mzdvhR57//48puf2wdGl5O/ZOmelxkTzo+aizJcyzyce8yjn
GUnL0s4zku+KPVNM5soj9YxtA7F7Rvp737PvEK5wz8hgMBgMBmMZuHLtppyB
RfUHzWyk82vUM9B8qVi6FHFOd/aNMhy6hgOms2/cY6xGsi71BZNywjtm0DYY
QK/4Gx+JMr92amYG07M+nDl7Qe5BUE4B5RVo+xOXL1+VnzP4Ru/clY998uTJ
Z52Px2AwGAwGg/E1g7ztr169lpoTZdbfuXtfZsjfvEW59bdw6fINnLt4DafO
XsOxHy7i4NFzBu49SHn1JyT9e49j1ncQ3j3HQvcFD5wIPXb/odPoGZxFeX0v
iio6UVrTh+qWUdi6x9A9NI6hsQmMT0xhenoGc3Nz8Hi98Pv9ynlGfzgDnnSp
yCw/ztpgMlcKLWrP6BoOom9amUds7hnpb/rIiR/k3DkGg8FgMBiMpeLW7buY
Ez0I1SCkJ1GP0DcewKQ3eo6f/uzbtO7smzLHNiBnVIV1Ke4xVhu3pG436FK/
9rf+XtzfE3N5pHlcNDdrd2MfdlsG0NA2jqbOUdh7h+HqG0ZXzxDauhQ2OPvQ
0Tcl1oRDyj7EkbMI7j8e2p/wBo/Kzykz95T79h36QT720LFzOHn6Ck6euYrT
567h3IUwL16+IfdHbt+5hwfz85iffyjnV3FWIIPBYDAYDMbCePv2rZyd/OLl
Szx+8lTUUo9w++48rt64g/OXrkvtad+hk3D7D2LWux+Tc/swNO5D18AcnF3T
sLYtv56kua8l1R3YlFGPbxKqsD69Hol5zcgtd2BXnRMN1lbYHC64unrR0zuA
gaFRjI5PYmJqBiOC/ZOz6B6bReeQR/SMPji6Paa+Mf41M5PJDM8dd40E0TcT
xGgUXWrUE8SZS1fw4gXPV2IwGAwGg7F0vBT9zakzV2QNomQyzKF7xI+xuSA8
/ti6VEDN8qPshqFp5exbx2BA9hjhTAbuMVYb61pGsG5LLv78m634yzXJyNvR
GPf3xHw/1tvHUG0dQqVlALsb+1Fe34eyuj5sr+xEQVkrsra3IL3IitydduSU
NyOnrAkFOy3IL2lERqHCLXmN2FbViVrx/2A574VmYjs6p0Ls6p/DwJgXs94D
2HvgGPYdPIFjJ8/i6o3buH1nHnfuPcT9Bw8x//Axnj17jueCr9+8iffyyGAw
GAwGg/HZQLZz0qDo3A6RaqFXr97g8ZNnuHXrLs5fvIK9+49iZMIv6qvpj1ND
yvlOk5IW9TbWY+tsI0jIteJnCVX4LqkGGzIakbbNju1VdlTU2rHbxKo6B2ob
nagWrLS2YrfVheqWXtTZh6XORZ4MuiU2OsfjXkszmUwlw8/R60PnaBD9s8oM
OXOOzsCkDxev3ZTrFYPBYDAYDMZS8fbtO1y9fhv2TkVLojyFjgEfRqaDcC+i
S9EcW6pTRkS90kczpoYDaBU1THjGFHummMyPTerdSYMi1tnGpB+qtmUUu+p7
kVdiQ1pBA5Jz67A+tUruG/xsq8JvEmuwJrUe6zMbsTmvEUkFjUgvDGtSxM25
jdhZ26vuD6ivqe1R6PkRvx9bxyQ6+2YxOObFtHsfjhw7hWMnz+DHm3fkXsyr
12/w5o2yP8M5gQwGg8FgML5UvHr1Cnfu3sPZcxdFPfQDZjz70TPkQ2uPG86u
WdGvzYhebQrW9omoZ/9oXnD4bKBSr1FPRr0Z9Xhm2iRnw+ycE7dz8nPa19Ct
Rjp7mF7UgjXJ1VKX+j6tHslFDhRXOrArii5FrKwTt4LlgttrHcjb5UBmiRNp
xQ6kFtmRUtCCrO02bN/dIc9VxbvOZjK/dja7ZuDs86NrLIj+OWXuuHl+3JRn
L26IXo3BYDAYDAZjubh95770MtB8Keo32nq9GJwMYlbUIAvpUn41W3jcHcSA
eDzNvo2cMcWeKSbzY5H0oirLAArLHMje1oT0Qgu2ZNbh+5Q6rE2pxXdJ1fg2
sUryG50mRfw2sQZrUxuwIbsRW/ItSCu2IFMwS5Cei5haZEVl07Bpz8K0XyGo
39/Q71domrTx7z/872jfE60PTeJzlDHT3E7a+LR4rWk4umbR0e/F0HgAvj2H
cer0eTx6/CTeyyWDwWAwGAzGR8FPP73F06fPcOHSFew9cAITcwdFT7YH3YNe
dPS5Ye+clv1ZZO0Urq+o9lLqtBlZozm63DK/QiOdGWzv98M14Isg3U/sGKTP
h2/l/aKno76Ovt7Z45FZ707xfCVVXUjIbRJ1Zz3Wp1uQVOhE4W4ndtU6UVnn
QFWdchumqlGJ253itnC3HZkldiQX2rAlp1l6rtal1mFjRgMScixILWyWzClx
yNeiLIB4199M5tdCbbZUa38A3eNBDHqCcr/HvA+079AR3Ls/H+8llMFgMBgM
xheAh48eY8+BY7C2K/0N9TC9YwFMeRfWpYg0y5bO0IzOqll+AwHYRT9EPRLr
Ukzm8lgjevGdNd3YVtGGXNHDJ+Q2Y0u2BevTavF9Sg3WJis6lF5/Io/UNwl0
f7XUor5NqpF7BxsymrAlz47kYgfSS+3IL3eiiLjLKZ+/eHcbdlR1y+yG0F5F
n1/8TSt7FBppz0LbxwjvWXjFuuGWexa0ftAaoFHTsvQaFunfIe3KqTvfa/r+
ae2gTEBn9wy6BrwYntyHKc9hOZubcgCvXL2O23fu4vlzzjZnMBgMBoOxckGe
75cvX8nZvteu38TZ81ex79AZePecwNB4EK2i1tHmQFH9Yz7fo9VQ2pkhqrGo
7qJZTVS3dQz60DnkR9ewH90jAXSPBtAjSP1Zv3j+/olIUt4FfZ5u9exV76f5
wUTKeJfPORwQdeI48srasD69EZuyrEgqdKBgdzsq6ttR09imsKEN1Q2tqGpw
Sp1KI+lUpbUO5O+yI327qGvzbFgnnucbUbNqtSudsfpO3K5LrcXWHAvSimzI
LmlF3s52qVMtN2uayWTGppKfM4u2AbF+iHVg2BuZoUNnl0+fPY8nT57Ge1ll
MBgMBoPxBYBmTF28dE3qUtqMqa5hH8bnFteliJQ3POUTdcuM4pmiPWrqmTjL
j8n8MNbbRmWGyfZKl5wJlVFsQ1JuEzZn1mN9ak2E/hTSoJJq8F1yLdaQbyq1
Ht+nNcg+f2NmEzZlN2FLbovcN0gvaUfubhcKq9tRWudCueCu+g7sauhAaUMn
LG0j6BrxhPYr9HsV9HHvuHEfQyPte9A+SNewckv7IqRfKeduFY1LOW+r6lYy
J0bnt2qfkjToVTHWDTo3TDOrugc9GJ3aiynPQew5+IPojy7jx5u38OjRY5n5
x2AwGAwGgxFPUD3y9Nlz3Ln7QOamnzx1CW7fIUzM7kXPsMdY4+g0KKqH9J51
0qCov2rrC2tQVHPJOm1Cya0YnFJm/lI/RhnrxFHRy9HM4DG3oCeIcZVjGt1G
js6Fb+l56Pkkp5Tnp9fpHHKjpLoLm7Mt2JLThMQCOwpEbVnZ6EKD1YX6pnbU
ES1tqNV0Kp1WVSlYUutEfoVDzqaiWnVNcp08S0X61M9Mfn+ZRS3uW5tcI/1U
heUulFb3oKyul71UTOZHpkWsPzax3rQPibVF/M2P+Ywzx33i4wGxPty4dQev
X/MsYAaDwWAwGMsHzW65deuezCuX3m3pl/BidOb9dCk5a0rUKBM+pWehfom0
LeqpWJdiMmOTcvno3GdFQx9KqnpQuKsDWdts2JJF2XymLD5Vh5IaVFKt7OHJ
B/U9ZfNlWLApqwmbc6zYmteMhPwWJBa0ILXYjvQddmSUOJBT3obCqg6UNHag
rNmFGpsLdUS7C7WCu1o60D02g9E5f3i/Ys64V2HYr1D3PrR9i0HdnoVZuyK9
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
NKaPzbqWEeSW2LAhXdGJNmc3YZuoayvqHKg0sarOGaZOp9K4q64V26pbRe3r
lNnYlOEnNalkkyaVpGNyDCbVxvZN6bxTEdqUSaOix64Vr705qxEZog4vrqB5
rSNx71uYzCWT1j3S4TvdMsOPvFLDYq2a84f3cNxyVvh+3Lk/H+/lm8FgMBgM
xleI+YePMevZL/sd6n36xr1yXtSH6lIB1TM1IvqwriGfPNMXOc+FdSlmfFnV
NIDC8laZQ7I+TfSviboZUknVss+mHBE6u7kpuxlbc21ILFAz+1SPFGlJpC0V
q/l7O2rDlDpUtU6D0jL5tDw+zQ9VpjxXpqpDpaleKJpXlaxqUOTPol59s3gf
9F42ZlmlTkZ5gpJZdL/4fG4zkoqsyNzWhGzBrGIL0gVTi1tQ2TT0WfcsFjtr
q+lWmnYVkRWj05CMjJ0rY/ZpRVB+fnbBM8Yxvx9nWKNSstmn0D8WkLOnLl++
xrl+DAaDwWCsALx9+xa3bt/F0RPnMTi+B83t4dovlkeKtKGIOVJuRW8i/xP5
oMgrRZw2z4ZyG71QUoOaiszk65Ezocw6VNgfTvqY2c8e6YOa0J0NWtjvFDoH
uASavz7ac5dUdyAxp1HOXV2XVi/qWRvKRC1cWReNMbSqBid2i9uSWifyKpxI
KXKIutaiZPdJD1Qt1oS0phqjNrUIQ7qUqk19a9KmFtSnVNJjKNdvc1YDiipc
qLZyth9zdZK8UlYXrXtetA6I9U6sTWNiDfNo54r9AYyLfx89cQqPnzyN9zLO
YDAYDAbjKwSd+z995oLohZQeqGPQg/HZD9ekNM/UpFfpydr7fVHnTLE2xYwH
6YxnaXU3srbbsCmz3pjZl6DMkKL8kPXkkcpSPVL5NiQX2ZC2TdGPyNeUVxHW
pIpVHxSxWKdFGeZClat+qJ26PL4dSiYfPS/l8ZEPi7SvhDwbtua2SC1qU1Yz
NmQ2ydnScg405Zuk1KusE++1Ad+Lz63PtGJjThOSCpuQXmRBliDd0r93VHWh
zjYada9iuXsXC+1ZLKpb6alqVc2aTqVywSxByRmFsXSqGIyWVxhNP4+2x6N9
TOeU23pmMTa1F8d+uID5+cesTzEYDAaDEQfQ9ffR46e4eOUW5nwH4eyaCdV+
0TxSpAeRNkSZeRG5fe6g3KOdVHUpvSdKn8tHj9Vy+cw6FGlQXaoOJbUobS6U
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
UHWoYn0+nwOJWkZfnk3N6WtRvVHKvCgto49eW/NGRTuvqTGi5w71x9Uyw++7
FJot1YANWY3itcNeqSTxcWpxM7ZXdcb9d/G5uPgMqAmVH6ZhxTrjHPV1VV1K
077o7Lbbf0Sup/Pzj+K9rDMYDAaDsepBHqlLV27AHTgir+uhWqA1nO9r1qRI
R6KcvR5ddp+mS9Gt5o2KNitKy+ej55AZfb1KRp+zxxPFGxU+07Iac/mWQprf
WlbbK/PtqK7dlN2IvNLmJelSxB01ypyplKIWZc6ULsdPn9cXTZdarjYVu+6O
rkt9o86col6Deo5dDf1x/30wmSHSmijXwznplWoT61ivWOum1T0a8ktNuIPY
c/gkHjyYj/fSzmAwGAwGgxHC8+cvENx/UvZX1Gd1DXvh8QWX7pnyKecQXQM+
2ScqfRt7ppgfn7Utoyip6kRqgRVrU2qMuX0JyllO8imRRkTeJdKkSENKVDWp
VFWTonx7OSNK9URJX5R+VlSRqkVJHcouda3Nmg6VZZU5fXJmFOX0SW9UnSGn
LzKrL0YvHGUGs9TWyCuV0iBnS23Kocw+RZMibSohrxE5O1tR0zwS999HPGgx
+5gM2tTH0aUW0qZCX0PaVOc0+sf8chb77bsP4r20MxgMBoOxavHk6XOcPnsZ
wxMB47XflNsXTZPqVn1SpD1Fy+cze6M6Bo3zojRfFD2v4ouald4o8kgvrkXF
vzb6lKR6c0tGjZzhStl7qYVNS87yo6/bXmVHdhnlDtiUeatalp9Om4o9B0qr
+cO3sblILb6YNqXLBFyXVofMbTbsahxA/ReUn81cvZT54i7S6D1w9op1UKxv
I+5gKAdnRnDcswcnTl+K99LOYDAYDAaDEYFzF66if8wney1b5yymvcq5mqVo
Ux6/qHu8Sv/X2uOJkW8xocxsWQF1HHP1kTxS1dZh7KjqxCbRG+tnSdHHWr6I
okk1yDOYmk+K8vaS1XlSlMkX0qF0+Xz0uVSdHpWg6VE5NjmTSmb0aTOj0mhm
VIP0Rq1J0Z3zjOKLWlSHMlE/W2ptquKV2pqvZPfJuVKCKYVN2Fb59XilFmM0
fSr0scaQn0rP99emGp1mbWpKnlHU2No9K71T9+cf4c2bnzi/ncFgMBiM9wRd
MykTd/+hH9DWPRNxjY+pSfX70TmoaE2aJqXXocxaVNgfFTToUSFflKpHhWZR
tik1REw9agXUQJ+D5JkqrenCxowGWe9uzqI5Uy2oWKI2VSpYGMrza1Fyr5Nq
TTOmYp/f+uiM+hp6XapGydcmv1hmvdSmvqTZrszVR4vOK2Xv9qF9MIC+6SAm
/cGQV4ryS/cePok7d+/He4lnMBgMBoPBiMDjJ0+x//AZWddQ/9Uz6sWMZ2m6
FNU+NF9TyfMLyP7OqE1NfBXnCZmfhtT7VTUNIq/UgXUpsXScWnyfqtek1HlS
qiZFHijSoNJ1OpQ2J0rm9NG8KOmPckTXo9I1Papezq2Sc6Oi5vSZzmS+px6l
90pRht8a0aNLr1Ruo3hv4blSm8W/s0sc2NXAOffRuFje31JImlToNejfIf0r
rEspuULT6B3xyZkYr9+8ifcSz2AwGAzGisfbt2/xRPQk/r1H4eqdM5wJ0XL7
omlSpCuR34m0Jm2mFN0a50WFfVFyZlS/P8IfZdajKPNhoZlRX2svQ/NMk/Ka
RO1bLWrhOiQXWLGzeumeKZnnV6HU4+szGlXfVE1Ym9Jy9z6kjl6ObhX1uTTf
VI1Bm9qY2SDPh33pM16ZK5fKnD2xLna64ez1o2MkgKHZIGbVfRnK8huZ3YOz
F6/K2eIMBoPBYDAYKw10LvHSlR/RPeRR5kx1z2F02g/vEudM+dQ8P8pyl3l+
or+ztkfmsMe7jmOuPu6q60ZqQTPWJJl9UkruO+lEYU1Kye6j85ekL5H3KUWd
E5Wi06I0HYp0qwTxuK25xqw+eg69HrVWp0cZMvDNHqkP7Z/N/W+i4pVak9qA
9ZmN4nsgf5SS30f61JacRu6Fl8hY+X/vRafROxXyT7VNhnQpq9w3m5Gz+67d
uI3Xr1mbYjAYDAYjFl6+eiWul7cwMrVf+o6tunlSek3KPE9Kr0l1jahUdSht
XpRhZlSfH23i6zQtSsnrC+tRLTo9Su+55jN1RhbtasOmzAZlzlRWIwrKW1BR
szRtqlxwW7WS55eQ1ywzsaPm+S1Fm1qKPrXQmbEo2tSWbAuKKjpkvni8fy/M
r4va2bhmsS7au7xoE+tcz0QQY54gPIEA3P4ABmaD8B84xhnjDAaDwWAwVjTm
Hz7GvkMnZX3TskzPFJHyjMfddGaRziHGyvNjbYr5fqTckJKqDiTnNWFtco2h
T5S5faRJyby76JpUYoGiP0kdirxQ6rwoRYeySR1qi3isXovamGmVz6Pl9dFz
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
MV30lInGXu6baDOltPw+VZcKa1HK/Ki1qh61Vj9HSq9JJa48TUrvlaJsj3Wq
V0pqUuJ2c04Tckpbxc9qNO6/L+bHJvWYYq1zKbOmSJNq7VO0qZ6RAPYeZG2K
wWAwGKsTr169wpVrNzHtPRhx/Qvn902ENSnXjFGXiqpHTat6lD63jzWplUiq
8Yt2uUQtrpwt25TVhIKyFjkvajnaVKlgwW5l1tSmLKus/Y3a1Ao6g5ag06Yo
R1zN8yNtivqXTVmkTdmw2zLIeQjMBaitl1PSK2UTPUNrfyDklRqgfZSJICY8
R/DkyVPOAmcwGAwGg/FFgmqcp0+fYcqzH84uJfe9Z9gHzzI8U9qsqRl/eNaU
o9vN2tRXQJonVVrTjaTcxsgZT6b8Puo3SWfSdCmNYS1K1aH0/ijzLCmtP413
j2rWpNRzlNSrrk1vxIZsxSu1iZhjQXqxPe6/K+anor7PnJF5fs6+gOw1FW0q
iL0HTuLB/Dz3mAwGg8FYNaBr1o0fb4ueIbYmFTFXSq9LRfiipqP6ozhbYWWT
8vyytlllPU9nytK2NWP7Mj1TNGtqR40d+RV2pBTZlFlTK16bMuZ1ky61Vj1f
tymzEbmlDlRZh1ibYkalfq2kjAVnrx+uUdUjJUj61LT3KG7evI137+K9+jMY
DAaDwWB8OlCtc/HSFQyMBWRv2NbnwdCUH37/8nxTXsEpP82aErXVcADOHq/o
T9WzkG2sTX1ppDy6stpepBc1R+3fpCaVoHmlzLpU2BOl90UpGfNhLUrRo6pD
mR5x70tjfJ9Sk0qqk/l96zJVPSq3UX6cVNDC+R5fOEN7c1ouR7dX6lKt/UGp
UdF6uPfgMTx79hxv33KzyWAwGIyVDzqzP+U5FPOaF95njdSlIrUovTdqkvWo
VUTyTG2v7MCG1Grpm9qQ0YD07VbsqF6eZ0pqU+I5csrtSC22YVO2qk0lmTL9
VlIPYMhHaJC6lGQqzcttQHGFCzXNw3H/nTFXFo35fTOyT2gbVLxSfTNB9EwE
MTS1F8dOnpdzFxgMBoPBYDC+dLx89QonT13AwJhf9o6ufg8mPAH4PoY25VN8
U90j0bUp7kG/DO6q70FqYWxN6hu9JpVUa9Cl5Nyo5DodNT3KeE4ynDG/QvrR
qJpUOL/ve/JKZSnzpOg2Ic8q8094ptRXwFDPqcyaknl+AwG0DgbRJm5phjGd
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
OqZbsGvvYVy7ds3o4Z4QQsgM4/qNG3jx6ElYqroYD1N+ofi1xVgaJvWys7Ag
JBdLIwoRv3HyvSlRiqbEDAti1knfKQsCYs1YGJqncqfmjeJNTfYevSd95ExJ
f6lVLvX8QpPMnHP4sfJLRzwp2U8mcbuqd1DVh47erTh5irUNCCGEEEKM4szZ
l9E39KwWn3U5vKl+1G8aQs+gfVJ9qeHcKcklGLKjpUf6TkltP+tw7tSo3pQf
xLT+KKmtsSajVvUCNtwjmnZPKmN4rjjiS2WqeXJMahnSC9iHmJpqOftMSa++
AZTUO3KmBnVfSvKmWvvtGNiyCy+d4D5MQggh4+ftt9/GqdPn0NW31Q/udxSl
S+YeCWmlWBaerTwh6Tm1JDwPceuKVJ7TZHtT8pprMi1ISLcgKs2MkNVmrIzR
/al5jr5T3t7UJPbLVTlTmS59pnKxNFrPlwrWtDImD8uj8xGZXGz4taE8NbKH
THrCSk8pk+yH1b7K3thtO/bh1fMXVY8DQgghhBBiDBKLXbx0GXsPPK97U1rc
VlLbj7r2IXQP2Sa1pp97bT872gfsaOqS2n42lNYNqnqCJu39fedNMXfKVbnF
m5CaVYvl4ZmTX7fC3+Wo3efqSel7GbMQl6Z7UvL3MfoaUXNAzj5TlX0qZ6qs
yYb67pGcKRnj2vu34NldB/DWW28ZPdwTQgiZIbz++hvYsed51u+j/E4Zhc1I
Tq9CcLxJxeNPa/H3yugCRCSbkLTePOnelPSwWiu1/TIsiNtoQUSqBUEJRVge
ZVL+1FR7U/JaypeSnKkQR86Uw5cSf2pFrPa9dj6cf/iRSvW9Y05PSrwopyoa
hrB1+z5cuHiJnhQhhBBCiB8gMdlrr13FoReOo6HdBnNlN4pr+lDbNojOfhts
k1zTTyR+14DVUduvz46GDhuqW4ZQWjekvCln/hT9Kd/amN+A6BTL3Oop5dKD
2FMLQ3KG86Q4J6SmU85afuZqPWequt2O1iHdlxJ1Dm1G/+YdOHPmLOe/hBBC
xsVhLSZv1GJyo+9xFOVL2eZWtT8uLNGMBasyMT84G0sj8hGSaELiFHhTw7lT
mpLSLYhVtf3MCIgrwpLwfNV76pb+1G3OmVxrhut9pvKwNEav46e8qbg87TwK
EL2mBFlFbYZfmzkvV09K1e7TJb0DGjdtxvbdh3D+wgXuFyOEEEII8SOkXsj1
69fx3OFjaOnYjKLKbliqe1HTMoi2TisGhibfm3LNneoYsKNV1fazoaJxUNUT
LHLkTo3mTxke9xqo1RsrVQ0Nw72iafek3H0pqS+/LDIfsWsr6ElRhkiv5det
eigXO3KmGnrt6Byyo98xvm0a3IKhzbtw7dobRg/1hBBC/BzZKzZo363dV7oM
v8dR1GiSmHtjfiNCE0xYFJKtavotDs/DqoRCJKwrQlrG1PhT0ssqRWr7bbAg
MtWCkCQzVsSY1HtLzyvJ39LnC+7+1G3nTq30yJkKzsXiyDysjNN9KVFAXD4C
YwuwNrsOOZZ2w6/NnJWLJyX1DJy+lKW6Bx39z+Lg4WO4fOWK0UM8IYQQQggZ
hTfeeAMHnjuK9p5nUNkwoHpOldYNoLVjCH0DNlinIHdqSFO/1bF+O2BHc7cd
Na1WlNUPqrwtqe/H3lMj2pDXgLBEE+YF+IFfNO2e1IgvpdcNKUTihipkFbUa
fl2oOSpH7Xq9h/IASuqsqN5kR7vDl5K80E2DdjR22XH67Mt48803jR7mCSGE
+DHPv3hM1S8w/P5GUeNQekGTw5vKUt7UwpBcLI8qQPzaIqSmm7E+c/K9Kac/
tTrDgtj1FkSttSB0tQWBcRYsiShQ5zHPpz91u3MR95yphWF5WB6Th1XxeQiN
178uj5F9cqXscWuQ8p2eVFnXiC8lnlRVDzr6nsGZs68aPbQTQgghhJBx8MYb
13Hy1BnYt+5CcXWPyp2S/KX6tiH09E+NN+Ws7SfruKq2X6/ee6qu3Y7KJqvq
Tyr+lO/6fsbHwtOphHWlWBo2R3KlfHpSGdqcUK9lvyazzvDrQVEyDsmeTD1n
agjlzTY09dnRa9V9d/HcG3ts2L77AC5e5j5NQggh3kjtAtm70DP4LCxVzJWi
Zo7Em0pIK8HKyBxHz6lsVV8vJKkISRumxpdy9p5Kld5TmhLSLYhOk/p+FgTF
m7EsqkibL2RjXmAWnrrT/lOeOVMheVgaJXlSeQiJ1yV9plbFFaqcKdZvmG7p
awIFw7lSXcqfktp9Pf1bcfnKa0YP74QQQgghZAJITb8zZ87BvnWnqiMicZ74
QtXNes+poSnwpdzyp8SfstrR7sifEn+qqtmO4up+lcNlqhij/5ThsfHUKdvc
htCEQjwd6Aee0XR5Uq6+lPa91O6TfLGN2hzY6OtBUUql+v5MZ85Uab0NtR12
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
9n5vb0p6TomcHlW5I3/KLXfK6U256Ha9qVvVZsgqalFzrydXbjTcY5qIng7K
xNLwPATHm5G4vkL7HG2Gz3soykjpeaH9KNHGlKo2O5pVLT93D71d+91zLx7D
66+/YfTwTAghZIq5efMtLQ6+gsqGQcPvUTNBkYnZ+Oo3H8VXvvGdCWt58Opp
PdeHHv4w/uIv/mJYTy0Km1Gv78/KsbSr/lPhiYWqFsN8bc4xLyBD+VNPBWZi
/qpsLA4vwMqYIgQnFiFijRnRadp8ZKMFSRm6kjN17ynZodUucv6c5PSlpKaf
S95UhEvPqaAECwLiJEfKqRIExpciKLEMwckliFxTjFjtePGmRKGrTYhfV4H0
wmZVy97X3FHqbgxL5sSz1JuSz1Vc3YvmTXbsO/ACrl27ZvSQTAghhBBC5ijS
f+qFI8fQPfAsSmv7tFi9S4/Fy/Q8A/GCpAdUTasVzd02tPTYsGnArurz9Q7L
NiKHByXqFmmPi7occvabGs6bcvScEm9K6vpJ3ynlT3nkTrl6U64azZ9yre3n
Ku/cKe95hsy7ktMrsTg0x3CfaTySvsTzAjOwIDgbQbEmpKRXGT7noSh/keqp
V6HX8qtosaFe8kCH7G6+VIfU8tu1D2fPvWL0kEwIIWSKuXbtdezYdQDF1T2G
36Nmgp741Tw3L2Yikryi6TrPjfn1Xu//g8d+OWNef6ZIavxtzG9E/NpirIjI
dpmPSI2/TJVDtSA4B0vCC7A8ugiB8WYEJ5pVLb7ItXoeVNxG3XNKcMj5vfw+
boPj60bdk4pZp/tS8txwR96U9JxalWBBULyeP6UUX4ZVSeUISS5DZGoJYrXz
i0vVXkP8sTVS28+Ctdl12vxxlL2NLvlTo+ZS+cHf/04kc/zS6m7sO/A8Ll++
ovJGCSGEEEIIMQppZSo19q9dvYbjL53CoO1ZlNf26B6OI36VWF3idkt1n/KI
qpqtqG3Tc50k50l8JpHkQsn6boejZt+wBka+l1wpyU2QXlPiS0m/qSaHNyWv
J69b4/CnVO5UgxXlHn2nVF0/R20/X/6U9/43T/nwp1xi9qyiVgRG56g+v0Z7
TuPxpBasykRIfCHScurVXDHXD+Y9FOVPkv/3UsuvvMmmekzJeOVay2/QakOf
dSsOvXDc6CGZEELIFHPhwmVU1OmxrtH3p5mg//7ln27bl/rO9346ref6vvc/
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
s8/Vh+p2q9nna8+bpyfl7UfpnpScc2pmHeYFTGNfKUdNiycd/YHFj1oWnoso
bS6VllPntneUoqg7k7mqH2VNVtR22NHWb8eQiy8lGrDqtfwIIYTMPmSP1aEX
Thh+L5oNuhNfajTJa8qxD77/g+P2ZZ5eEjHm+4zlG91Kd911F1LSy6f19SUH
ayKvMVN8KWe9xqyiNuVRrc2qQ9RqE5aFZXrPuzz6Uqm6f4HiZWlalY35ouAc
/euqHCwIycXCED3fanF4IZZGFWFFbBGCEk0ISzZp71OIyKQCJcndikkrU/NB
mR+O5kf5nCsa/DeUOoKl1d3oG3oGz794DBcuXMbrb1xXc/I337ypxjdCCCGE
EELmAhL7vvXWWyoOlpj41fMXVYxs27IT1Y39PuNp19henw/o84Ciih5dDq/J
NQ/KV06Ub+/Jh8bRT8pzzpSSXjetNfrmB2WqnlHB8YVI2lilzdVakVnUqvyo
qa6jT1FzTVLvs6zRiup2O5r67Oi2uudM9Ws/b921V41thBBCZhevvHoeQ5t3
G34vmg2aLF/qne9813AtP6ntJ8d+8G/+Tj32V/e9G//xw59j4YoYBEdvwJ8X
BOP+Bx50e/5Xv/nomO8zHt9I/CGpzfee977f67HHf/F/0/b6azIq3B574D0P
IkT73FIf8LH/+q3Xa/70if9F0rpiw/8t3I7Eo0ovaEJaTr0296pB3NoyVUd9
eUQWFgdn4OlAd4/K6VMNKyDD4Vvp+/rmafMp8a7Er5JcqmXRJqyMN2FVou5J
RSTmK4UmaN+nWFSPKed8dOx9i52OfZbT+/cRD8xS1YXWTjt6Brbime37ceL0
Kzh95lVcuHAJr7/+BmNVQgghhBBCHEgfqtffeAMXL13RYuZXVK/V3fsOa/P/
nWjtsKGstsc75vYR+zvnBq7+0mg+lHft73H0p/XIj3LV+tw6tY9uKr2oedr8
aWl4rjYvMiEurVztF1yX24AN+U3IKmo1fJ5IUbNZBeXdKGnQfamGXjs6vHwp
G4ae3YGz515WYxohhJDZw9FjJ9U6r9H3otmgyfClvvL1R5Ce36DFvy1ufZqW
BMbjj/MCkVHY5PU685dGur3G333kE2O+z618o7/+wMNI3liqHpdeUH/9wYfd
Hv/WIz+Yttdf6vF86THlfEz2qj3w3ve5+XmzZf+afI7Mwmasy6lFSnoVkjZU
Ija1DKGJRVgZlYvFIZlYEJSu+lL5qjsxXHtCfKrATMwP0Z4TUYBlMQUIiM9H
eMKIwkRJBdocrEy9r685ohG9o0wVnais70ND2xDae7ZgaMse7Dt4BMdPnNHm
1edUr2dCCCGEEELIrZFcquvXr+O1167i5VfOazH1aRw4dAxbtx9U+1Ql3q5p
HlD7wEaLz315VaN7TKMrr9RZT/DWc4KUjCqsiMieFP9J9u9JLtTi0Gwsj8zD
iqh8RK8pQ/y6SiSnV6v9gRmmFsPnghQ1p+ToMVXRakN9jx2bPHwpq6ZB22Zs
fnYX3tDGMEIIIbMHWeeVtV/D70WzQHfqS8nPt1OrOjalwO113n3/e8Z8n7F8
I8nHWpPhXkdPej65HvOpz3xp2l5/3uJwt8d++dsFbs/9uEtPrrvuvlvlHBn9
72CqJP82NuY1aHOmSsStLVH1zUPiTWo+tTQsR1M2FqzS86qeCtiIJ1duHPap
5klvqtA8LInS5l9xeQiNz0OYpvAE7WuC/JyP0KQiZDv+fq71+aaqf5TMQ03l
uirq+rR58CDq26zanPgZ9Nv2wPbMPuzccxiHDh/BsZdO4sKFi8yHIoQQQggh
ZJKQ3IOrV69qcfYFFW/vO/AC7M/sRdfAdnT2b0fTJjuqGgdQWtOD4qpumMfw
rHzF+q7ziHznvMKlz9V4XidxfQUWrpqo/6TNfwIzsCA4C0vCcrEyugDB8WaE
JVkQmVyi9uOt3lilzauqZvX8kaJmioqkll+TFXVddrQN2THo0WNq0GpH1+AW
XHv9DaOHTUIIIZPI9t2HVV6C0feh2aA79aUWLIsa8/UzTc1YuDwaj37vcXz+
S/+Mj37sk6rvlGcdvzvxpf72Qx/1et+nFoW5HfOxj3962l4/MjHbPdfqgw8j
Ij5LPbY4IF7VOhzJE/u44f8GpluSV5eWVYvEdaVI0BSRVIjg2HwEROWp3ryL
QnOwOFS+5mJpVAFWxhUiMCEfoYm6JxWRoH8Nic9DUHwhNhQ0TUrOWUGp3pOq
sFzPe5I5bHF1j1JZXR+qm4ZQ325He/dWpa3b92Lv/kM49PwRvPLqq+wLRQgh
hBBCiAG8+eabKqfqypXXcOz4CezccxDWzbvQP7Qd3QPbUNdqQ03zEKoaB1Fe
34+SGukz1aViflFh2eTua5O6ek8FjOy3k5oQet3yDDwdlKk0f1UWFgRnY1FI
DpaE5WFFZD6CYgsRsdqsfK20nDptjmP83I2iKB/SxgtTZQ9K6odQs8mOlgE7
eh15UiO+lA2dQ1vUXlXW8iOEkNmBxJz2bQeMvw/NEt2pL+Xq53gqLrVQ9Vby
1avJU5PtS0kvq6n0pcZ6/RxLm3qO52eU/luev/PsezXXJflVG3LrlZI2lCE5
vQLJWeWI22hCzLp8xKbkIU5TZFKu8qUC4wuwemOlqqHu2UfKuZ/R9Wd3udfm
KKnuRnltD6ob+9DaYUXf0FZs2bYbW5/dhecOvaD2ZBJCCCGEEEJmHuJbnTl7
Di8eOYadu/eju38LmtoHlST+l1qAY9fyG2teMTK/kFwmqbPnrFP+dGAGFoVk
YXlELlbFFiA8qQgRq4sQs6ZYm+9UYG12reFzMIqiJq6Csi4U1wyiqs2Opn47
NtlsGPLwpTZZN+Pwi0dx7do1o4dAQgghk8DxE6fQ3r3F8HvQbNFU+VJpWdW4
/4H3er32Pffcg/e9/yG87wN/M2t9KdHXvvnoLb24f/jEPykPy+h/A/6mXG0u
l1vcjmztbyP9RIvrB1DR1o/a7l5s6upFl6ZOTR2dvWjp6EFzex8OPncEL508
q3T02CkcPPSi0s7dB7Fn/6Hhn52SHnXO40+elr5PV3Dx0mtKly5fxZXXruHq
1Wta/Pi6ktSE5h4nQgghhBBCZiZSW1vi+es3buD119/Aa1qsf/nKVSWJ/2Ue
IHMCp06dfnl4vnDs+Gm3ucTufYewa89zbr87cvSEOnbbjr2oqOvG+rwmrM9v
wob8ZmwsaEZ6YTMyCluQaWpVkn11siePNfkoagbK4UMXVfWjvMWO+m69x5RX
LT+bHVu37dLGlMtGD4GEEEImgT0HDqueLobfh2aJpsqXmrfYvc6d9GgKCEsd
rreWuM4ya32pZauSvD6b8/u7734nHnr4I/jdn5ffVl+uOSPJdVK58XrN5vou
O9q1mG7AI86zSm5832acv3DJ6KGJEEIIIYQQMsd57tAR1LcNGT+foihq6jS8
XtGL0kYrajvsaB2yo99jvULUPbAZL7/K2iuEEDIbsG3do+ptGX4fmiWaKl/q
P374c7fjfvT4r90ej0nOn7W+1L//53+7PbYmo0L12UrNrJyUPkhzRlqcV1jR
i5IGLc7r1OM8z5rN4ku19djwyoWLRg9NhBBCCCGEkDnOth0HUVrTY/xciqKo
qZVar3DpMTVoR6/Vfb1C1N5rx9lX6EsRQshsoHtgu+pLavg9aJZoqnypx372
O7fjPvzRTyC7qFU9lrDWjL/+wMOz1pf6l3/7oUeu2H34/Je/hW9++3v4t+/+
BN/70RP47R+XIjhqveHX36/liPOKHXFes484T3yp9j47XmW+FCGEEEIIIcRg
BjfvhancD+ZSFEVNrdR6RTeK6wZR3a6vV/RY7W49pkSb+jfjHPOlCCFkRvP2
22/j2tVraOl8xvj7zyzSVPlSC5dHe73uPX95Lx7+/z6Gd7zjHV6PzSZfanFA
vNfnG01yHglriwz/d+CX8ojzmgbs6PYR57Vrvz9z7hX2fyKEEEIIIYQYhvSl
7RrYYfw8iqKoqVdpp+qHbakZQFWbHY39dnT56DHVMWjHyTNnuV5BCCEzGBnD
Dx1+ETVN7C01mZoqX0p6J330Y58ctz8zm3ypLFML/vqDD4/7sz/08IeHc8ko
F2lxXn5ZJ8zVfah0xHkdVvceU5I71T5ow8HDL+DKa68ZPUwRQgghhBBC5igv
HDmK+jar8fMoiqKmXo71iiLHekVDnx2dPnwpWa/Yf+h5XL58xeghihBCyG0i
vtSuPQdQWd9v/P1nFimjoBH33nuf8kfe+c53KY2Vv/PZL3x9+Ni77roLQRFp
ox4rfZW++e3/8MqP+st7/wq/+b8l+OkT/zv8Wh946EPjfp/QmHT1O3lMjvnU
Z77k9d5yvOv7fvGr35621//2o4+5fd5//PQX8Ps/r8Cvfr9I9dn60Ic/5uVN
hcdlGv5vwb/Uqcd5moqqeofjPE9fStSn/W73voO4wB5ThBBCCCGEEIPYe+AQ
99FS1FxRqb5mUVTpWK/otWPTkPd6Rb/Vjl179+PV86zlRwghM5U337yJzc/s
QmlNr/H3n1mm3OJNWJ9bi/T8BuRY2m55vBy7Mb8eWUUt43r9tKxq1UtJcpLE
85L3c32t9IJGn+871vvI7+SxDbl1o76v5C3Je492zFS8/pqMcje/SvLAxPtz
fV6mqRnvuuceN1/qqUVhhv878C91Dsd5popelDfbUd9jR7uPOE/2Iz27Yzde
fuW80cMUIYQQQgghZI6ybcdeVNT3+cFciqKoqVUnnGsWpsoelDfZRl2vsKn1
il04e+4Vo4coQgght8mNG2+id/AZWKq6/eAeRFG+FRi+1r2n1j33qrwx12MS
1pq9fKnIxGzDz92/NBLnFVb0oLRxJM7r8xHnWbdsw6kz54wepgghhBBCCCFz
kLffBobsO1FS3eMHcymKoqZWHusV9TbUd9vRNtp6hf0ZvHTyjNHDFCGEkNvk
+o030dZph6mi0w/uQRTlWykby7xq9N3/wIP4ytcfwQ9/8mtV19BZH9Cp97z3
/cixtBt+7v6lkTivoKIbJXVW1HXZ0arFeb2OvlKucV7v0GYcP8U4jxBCCCGE
EDL9vP322+jqfwbmyi4/mEtRFDW1clmvKO9Gce0QajvsaBkcfb3iyPGTRg9T
hBBCbpM3rt9AbcsgCstGvzfklzql96XJN/xeRc1FSa8pT29qNN1zz18ienWu
4efsf3KN87pgqRlAdfvocV6PFucdO3EKb731ltFDFSGEEEIIIWSOIflSLR2b
UVg+9jxnZL2iQ61XcM2ComaiPNYrqgdQ1WZH86AdPb58KasdLxw9jps3bxo9
VBFCCLkNXn/jBkpr+0e9L6iYzulH+ZTR9y1qrii7qBU/evzXuO/dD4zqR911
99341iM/QGxKvuHn659yifPKumCu6huO87ocPaXc4jxNh44cxbVrrxs9VBFC
CCGEEELmGJIvVdtiG3V+4/SguF5BUbNBrusVnSiq7EVFqx3NA3Z02mxePaZk
vWL3gQM4f/6C0UMVIYSQCXLjxg28dOI0iqt6fd4T3HKk6E1RfqIcSxtCY9Lx
1MJQ/PaPS/EbTYtWxqpeUhvz6w0/P//WSJyXX+boJdpsR0OfHR0+eon2We3Y
d+AQLl68ZPRwRQghhBBCCJlDvPnmmzhz5iwqGwZ8zm24XkFRs00u6xWqx1S3
vl7Rq69X9HusV/Rbbdi9/yB9KUIImYFIDsSBg8/DXNntdT8Yf4zHOI+iZo7c
4zyTFueVNdpR3+vblxrU4rydu/fi3LlXjB6uCCGEEEIIIXOIN65fx+Hnj6Cs
ts9rXuO5XlHA9QqKmgXy9qVKG22o77Fjkw9fakjWK3btwZkz54wergghhEyQ
1167imd37EWRjx6injGe5NAWlHUoMc6jqJkslzivXIvzGrQ4r1uP8zx9Kanf
vG37Tpw4edro4YoQQgghhBAyh7j2+uvYtXs/Smq867t4+VJcr6CoWSLX9You
lNbbUN9lR7sPX8q5XnH8pZNGD1eEEEImyKXLVzBoexamik6ve4F3jDcS63nF
eYbftyiKGr9G4jzpJSq+VN0ocZ5o89ZnceToS0YPV4QQQgghhJA5xNWr12Df
sgOWKl/1XUZfr/DKnTJ8/kVR1PjlsV5Rb0Ndp75e0edzvWIbnj9y1OjhihBC
yAS5cOESOno2w1Tu7ku57j1yj/Ec8ojzjL9vURQ1fnnsP2rQ47y2UeK8IdsW
HHqBcR4hhBBCCCFk+rjy2lV09W3xqu8yuifF9QqKmvly9aW6lS9VK+sVg3b0
jrJeceDQi0YPV4QQQibIK+cvoqF1AIVl7veBMWO8Mu96zcbftyiKGrdKXeK8
si4U11r1OG/Id5zXZ92MA4ePGD1cEUIIIYQQQuYQly6/hsa2Aa/6LlyvoKhZ
LLf1ik4U1w6hZpMNraP4Uv3Wzdhz4HmjhytCCCET5NwrF1FR2+MVq7n3lGKc
R1GzSh5xnqVmELUdtlF9qe5+uxbnvWD0cEUIIYQQQgiZQ1y4eAWVdT2qNp/r
fIbrFRQ1i+VYr8hzrldUD6CmY3RfqnfAjp17Dxs9XBFCCJkgZ1++gNLqbq8+
oJ57j6TW11hxHus1zz5lFbVgXXYN0gsaDT8XahIl/9c9fCmzFudVt48R52m/
3/scfSlCCCGEEELI9CG+VFlNt5svJWsPE12vMHwORlHU+OSyXuH0pcxV/ahu
t6J1YPT1it37Dxk9XBFCCJkgZ89dgLmy082Xku9Vr1CXGM+pUWM9o+9d1KRq
8co43HXXXfiLv/gLpe9+/78MPydqkuQjzivS4ryqNhtaHHGe1TPOG7Jj3yH6
UoQQQgghhJDp4/yFK97rFSUdXp7UrdYrDJ+DUZRDWaYW/PK3C/DId3+M//jP
/0Zw1HrDz8mv5GO9wlTRi8pWK5r77ejxsV7RZ7Vj9wH6UoQQMtM4ffa82z1A
33s04ksVesR5SqPkyBt+//JTLQ1KxOe+9M/4x099Hp/5/Nfw1KKwMY9/amEo
PvuFr+MT2vGf++I3sDI0ZdrP+Q9PBQx7UqIvfvXbhv8dqUmUS5yXr+K8HhXn
iS/lK87rHbJhz3OHcfPmTaOHLEIIIYQQQsgc4dXzl73mMq65UoXl3usVo9X0
M3oOtjx4tcu6wFfxp/mrDD+nqZasK3z1m4/iK9/4zpj6t+/+xPBznS4tWBbl
ttbyvvc/ZPg5+Z1c1ys0FVb0oKLFiqZ+O7p9rVdYbdh54DmuVxBCyAzDy5cq
9YzzumCq6B7WSLznHesZfu/yUz36/cfd4o4vfPlfxjxePCDX4//zx7+c9nOe
Sl9qY349VkWuw8qQFITEbESOpc3wazTn5BnnlXej3CXOG/KI8wY07T5wEJcu
XTZ6yCKEEEIIIYTMEbx8qQmsV7iuWfjDeoXkxrjOscWbMvqcplKZpmbcdffd
bp95LKVmVhp+zneqmOR8ta84IGwNkjeW+jzmB4/9j9vnfsc73qHWSIw+d7+S
x3pFQVkXypuH0Njn25eS9Yqd+/ZzvYIQQmYYY/lSzpjONc5zj/VG9iP5Q5zn
r7pTX+qHP/nVtJ/zVPpS33rk+26v/ds/LjX8Gs05jeFL+cyXstq1OI++FCGE
EEIIIWT6GMuXmmnrFXPNl1qfUztuT0q0JqPc8HO+EyWtK3b7PH91330+j5P6
Oa7HvffB9xt+7n4nT19K+39c3jS6LyV1/J7dTV+KEEJmGkePn3Yb/z19KWds
V1TZg6KKHpd4z//iPH8VfSl3feNb/+722r/6/ULDr9Gck684r3nEl/LqI6rF
eTvEl7rMOI8QQgghhBAyPZw8/bLXPGbU9YpK/16voC8lXs27cf8D7/XS337o
IzO+jkp8qsnts95zz1/6PC69oBE//u/fq3WRx372O4THZRp+7n4nH+sVZS6+
lK/1imf37Od6BSGEzDCeP3LCbfz3tffIGeO5x3ndfhfn+aum25fKsbRP+Bxz
izcpOX++HV8q2zy+OPJOfSnPc6VuQ6P4UhLnjeZLbduzD+defsXoIYsQQggh
hBAyRzj+0hmveYxe78H3eoWvvbT+sl4xmb7UncyJJ+r/3K5f5MuXCo1JN/w6
6J9p4msmzr/7aI+N15cy4ppPxmefVnmsV0hP7LIx8qVkvWLrrj1cryCEkBnG
c4ePuY3/t/KlXL0p+lLj02T7Uj//1ZP4xKc+j49/8nP49R8Wq98tC0rEpz7z
JRX73HXXXfi7j3wc/67Fvas3lIz6PhmyT+dnv1Ov9a577sFf3vtX+OwXvo7F
AfG39KWyilrw9JII5TG998EP4O6736mOk/d+6OEP43s/esKrPrSc65e/9q/q
vVxfW/ZGye9FP/35H3yeq/Sj+vZ3fqR9rk+o97pHe42PfuxTeOS7P0ZsSr7h
13jGaQxfatQ4b+cenDh5yughixBCCCGEEDJHePHoxPbR+tpL6y/rFXfiS4mX
8Ps/r8A3v/0f2vz5o6pvk8yrZX4sv5M5/FjP/dP8VWr94N33v0e9t8ypZR4u
vazTsqrv6PjRdLu+VPTqXHzui9/AP/y/z+IfP/0F/O7Py72OiUjIVmsXcswn
/+nL+NPTQW6Pu66Z/M9v56vfSX/rb377e7j/gQfVusWHPvwPaq1mQ27dqOci
fZ9kzUTWWu579wOqF5R8/co3voOgiDR1jNQf/MrXH8HHPvFpt88q7+Fc5xA5
1y2SN5Sqnz/u+Hy/+M38Sb3mk/XZDdUovlRDrx1dVruPOn42bNmxi+sVhBAy
w9i975Db+O+WE69J4jpzZe+wXGM9+lLj02T7Uh/++38cfkziDfFmRqvRLHFH
3JpCr/eQ2Em8q9GeJzWOR/Ol5Lnve/9Dt6wP/a533YPQ2JG480Mf/tgtn+NZ
g1lysH70+G9U/Dfac975znfhN+xRNTH5iPOkj2hDnxbnjVKvedsu+lKEEEII
IYSQ6ePAcy+6zWPca/iNvV4xW3yphLVmfOzjn77lXPpr33wU67Jr3J4r+0lv
9VzZ/3m7x4+l2/WlnlwY4vacT33mK17H3GofreuaifhFP33if0ddU3jfB/4G
KRvLvN4jICwV73nv+8f8W8he3cUr4255bUTOvtqyp9h9n+5HJ/WaT8ZnN1y+
fKnm0X2pfqsNW+lLEULIjGNMX8qx98g1znPGevSlxq+p9KXGI/GQPPO9/+ET
/zSh13CN855aGDru57nWif7I33/ylsfLfizX8/zR478e93tJTpXR13rGyEec
V9po1eM8H76UxHnP0pcihBBCCCGETCNj+1Jjr1fMBl9KPAepazLeObHk8bg+
/weP/fKWz5Hcnds9fiz5iy81Hj36vcfdni9ejeyzvdXzpE7MslVJ43oPOWd5
7Vv5Und6ze/0s/uFPNcrNJU0WFHf49uXGrDa8Ax9KUIImXG4+lL5pXqcV6jF
bV65UlV9uuhLTVjT5UtJHrjkj0stP8/HVoQkDz8/JHqD1+PSf/Rr//xd/PUH
H/b52q5x3oJlUcO/V3n1f1qGgLA1aj+R7J3yfG5sSoF6nuwPklx7Zy0Apz74
0N+p34se/8X/Db+P5Lc76wOKZI/PE7+ep+oDJqwtUrn9rq8jdf2MvtYzRj7i
vGFfapQ4b7vypU4bPWQRQgghhBBC5ghuvtQE1ytmgy/13R/8zGt+LTkyv39y
hcqDeeA9D47p/XzgoQ+5PSaeT0Zhk/Jd/jgvUOXk/OCx/7nt48eSL19K6pzI
uoGnpCaL83lT6UtJXRipyeeZPyQ1WCRXzPl8z57YTv/niV/Nw7/82w/V8fI7
qe2yNqtKvb/UzXM9XurlOdc5ZO1C1jDktW/lS93pNb/Tz+4X8rVe4fClOq12
DHmsVwxabdimfCmuVxBCyExi2479w2O/+FIFZR3ee4+cMR59qdvSVPtSElc4
996IwuMz3fwc0T//6/eHH5e6wu6e1H1IXGcZfvxn//OnMX2pjXn1+O9f/gmR
idle5y55WR/8m79ze+7SwAS3YzxjvF/9fqHPv8N3v/9fbsd953s/dXt8TUaF
13mOt9b1nJdnfynJi3fxpTzjvCEV5+3E8y8cNXrIIoQQQgghhMwRdu55bngO
M7xeIb6Uz/WK2ZUvlZJerrwN1+f85L/d+zHLXs777rvf59xf5uauz5d1g7Hm
yxM9/lby5UuNJvFdnM+bKl9K9rg668iIx+P5eNL64uG/qedj0rPJ9fXlWPk7
O3tMieJTTW7Pkf3Cvv4uY/lSd3rN7/Sz+41KO7zWK2Qf7Wi+lKxXPLOd6xWE
EDLTeHanqy81khPvrMvsjPMs1f3DvpSnN+UvcZ6/aqp9Kc84RSR7eVyPkbrC
w8//6CfcHnvsZ7/zev6/e8TMnnHeWPqqFlO6PtfVMxON15eS/C/X44J81OmT
OoGux7j2s6LG0ER9KZvuS73wIuM8QgghhBBCyPSwa6+rL+V7vcIyjvUKkdFz
sIn6Up7+hfgc6fkNXsd51t6TnCbnYw++/4Nujz34vg/izwuCkWXynR8z0ePH
0kR8qU9/buRvMRW+lOeah/Qa8KzTFxy9QT0mtWZcf3/vvfch09R8y887Gb7U
ZFzzO/nsfqOJ+lI2qePH9QpCCJlpuNfxc4/znJ5Ucc2A0nCsV+U71jP83uWn
mmpfatGKGK/XkNp6rsdIv07nY1Kzz83vcdnj49St4jxR3JpCtW9I6v998p++
iIce/ojKDX/XPe4xzh+eXOn2vPH6Uve9+wGveFX2DrnK8/H5SyMNv94zQj7y
4suahtDQp/eX8ozzBjRt383+UoQQQgghhJDpw7WOn3O9wuSxXiHrFG7rFaN4
U3kG76WdqC/16z8sdjte6sT5Om7xyji34ySXxvmY9D/y5QNJ/yLxNqRGvutr
TfT4sTQRX0rWCJzPmwpfyteaifThdj3G2ftA+g+4v/+XxvV5J8OXmoxrfief
3W80Wt8Bhy816FnHT/bR7mR/KUIImWn48qWGc+IdMV6JFuOV1A7q/pT2s6Xa
d00/5kz5lqcv5SuucpVn36Tb8aVkT5PrMeJFye9ln5NnDCj+kufzbxXnSUzq
WZd4NN2OL5VR0DjuGNZVEp8Zfb1nhDzjPMmXah5CY58d3R4xnqjfasOzu/bg
5KkzRg9ZhBBCCCGEkDmCT1+qohtml/WKYpf1CvnZ4lLXz5/WKybqS3nWMPmq
S607V60MSXHfy3n33cM12yTXRmqnjDZ/lnUC11yZiR4/lnz5UlJDLjhqvZek
R5PzedPlS3nWXnF6M57enKtnNpYmw5eajGt+J5/db+RrH62zvouvfbTSd2Dn
bq5XEELIDGM0X0rlw1fruVKldYOahlBaO+QW7zm9KX+J8/xVjz/xf273fMmF
H+v4Dz7k3p/pN/+3xO3x8cQZnnGa7IeR30vOtqefJP2obvV81zjv57/8s1d8
KblL777/Paq31D1/ee8d+1Jynp75UA89/GF85O8/OaqkduHG/HrDr/eMkFcd
vy6UN1vR3G9Hrw9fqtdqx879B3Hh4iWjhyxCCCGEEELIHMG3L9Xlsl7Rj9Ja
x3pFne/1CvGm/GG9YqK+1I8e/43b8Z/9wtd9Hif9nF2Pk7ojro9nm9u0Ofci
3P/Agz69Jvl9ekHjbR8/mnz5UqExt66777nH9h8//QWvY6bSl/rPH7vXyJN9
w+O5vpPhS03GNZ+VvlSZXt9F9tH22GyweqxX9Mk+2j37uF5BCCEzjFF9KZe9
R2X1ViXXWK/EGetJnFfhH3Gev2rBsii3e774QolpZp/Hpmws8/JjAsLWuB3j
GWc8tSjM63UeefQxt2Okzp7zMfGP3Hwjj/5Pol/+buGocd77PvA3bo898t0f
u/VDlZ6bE/GlfvGb+T7/FuLfuR63ykd/Keo25elLleu+VJMjzvP0pXqsdmzf
dxCXLl02esgihBBCCCGEzBF8+VJFlSPrFSW1sl4xpK9Z1Fm9vakZ7Et5ei9S
M9/XcTKfdj1O+jT7Oi7H0o4lgfGqF5GnXyT5N3d6vKdu15d6ekmEx/7Uj3gd
M9Z6hehOvJnf/Xm5x9/9A8O5SGPJ05d65zvf5fO4sXypybjms9GXUvtom0av
7yL7aLft2c/1CkIImWEcPHR0eOwfifN6hj0pievKG2zDKnN6U/Slxq2Y5Hyv
eOwzn/+aV+/Q7KJWr95SojUZFW7HecYZkksv7+F8XI73zFn69nd+NPy45Ba5
PiZ5+hJzOh+PiM9Se3t8xXm+YkvPz/GVrz8ypi/1zW9/z+3xbz3yfZ9/N8nX
dz1O6iEafS1njTzivMLyblS0WNHU79uXkjhvB30pQgghhBBCyDTywpGXhucw
XusV1XptF/f1Coc3VTM4432pgLBUr7m3555VyW3y2jf66GNjvq7M/T/80U+4
PedP81dN2vFO3a4vFRi+1u05sm83eUPp8OMrQ1OU5zNVvpR89TzvpUGJXn/3
X/zmabfrIXuPPZ+XtK7Y633H8qUm45rPWl9qjL4DPUN2PLOLvhQhhMw0nj9y
Ynjs19ennTnxzr1HVlQ02lDZZFNfy+t9xHn0pcaU1KSTPT6e8cUHHvqQ6msp
PZGkVp/EI57HeMZXvuIMpzf10yf+V72eZ4whWh68evj5vurwiZcke6Fk3827
7rln1PPINDV75XMtdMQ5sofo8V/8n9dzPX2pH/7k126P33vvfeq85y0Od6tZ
KHGeZzz68189qXpPOY+RPK35SyNVDtYTv5pn+LWeOfL2pSpbrWge8J0XL77U
rgPP4dq1a0YPWYQQQgghhJA5wvGXzgzPYZzrFeIzFav1ikGf6xVljpwpf/el
HnjPg3j0e4976/uPY01Guer1dN9993vNnaUei9RZCYvLUHVRXB+X2iyRidnq
/WTfq9RK+dYjP0BUUu7weWzIrVNrEa7PE69nosff6vPeri8Vl1ro9TzpdSC9
qb7zHz/B3Xe/85brJnfizazPrfXa5ytrJLJmERS5Dn98Okj1GJDff9vFD8oo
bPI6r/+fvfeAkiSrzvwXECMYDujAgZW0i1aCnYXFSQKJlUGIvwwSYoWQkEEC
JKEVMAxjmnHtvffed5d3WZXlvUlvu6q72ndXd7Wp9r672vuZ+4/7XrzIiMjI
LNfTWeb7nfOdqsrMSFNVEXHjfu/e+9u/+0ciz/KP3/uxMdc7nS811L/5UD/7
8FFyf5fShohYR+t1yFewL7Vj3yHkKwAAYISRypdSc6V4zRHHeO76uPY1rsV6
sqefJc6DL9WneIaT3c/pSxwL2WulnOKMvmSOc1g8U3Sg78Uc5zl5bHwbe2NO
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
lc/5yWa5jtanz5My5yuafFHq7jmd6cMUAACAQfLg4SOqb4lRbmmbiNG47snw
pfTeXhzj8XzBoCb+mf0qvj95xpSaJToMzmOjSMs3lNGcJVtp7tJs2pjbkPH3
46TVmytp0apCWrrORVsKW8bk72BESe/VXFgVoQru2alfz8Vs8oS20ckzFzJ9
mAIAAAAAAACMQd5++21q8W+nPD1fwXOi3PUx4UuJHn56rVRIF9dO8e2O+Yoy
ma/YitkDEDS8pftSBdp+W2FaR2vPV3jD2+j4ybOZPkwBAAAYJI8ePabott1U
VO4Ts6HYW+L5UsqX4rguqK9LiOhrkHhNEq9N4jVI3MuPZ0xJXyqg+1JjM85b
n1NHm/Ian+hzTpq5iv7Lf/kvhj753Ocy/jn7eo9/+NW/GHO/gxEn0avZS0XV
UarktYYRuZ/b47xgtINOn7uY6cMUAAAAAAAAYIzS0bmPXFV+ma8o81t8Ka8t
XxGw5Su4x4uYiV0ZEfkKzMSGoBEg0zrayjTraIPRdjp5GnMHAABgpMJ18V2H
j1J5bVjUOdnjPPalQqbjfkj3plrCsj6e1yDxjCmeJTrW4jyu2/nBf4yj5z71
eXr22Q8avgl//zu/9zV6+fXZQ64dem3SIosn86sf/42Mf267nn95iuU9fv63
f++JPv9I+B2MOOkzRIu1a7Qqr7avp/ClovEddO78pUwfpgAAAAAAAABjlO6j
PVTVGBHXMDzT2shXBOPkjVjzFTx/xh+15ivcDTxjKqLPxPZSdskwuB6DICi1
VL6iJkZV+jragGO+YjudPov+LgAAMFJ566236MLFS1SjxWvSl/JRWV3U4kuZ
ZwtG9X5+nkiinx+vQXJVR/U4zzcmejbPXryFPvihD1v8Eif9w7/8eEivMxI8
GfhSI0zcZ1OL83LL/OTSrtGq/XFqsfnPSh07dtPFS1cyfZgCAAAAAAAAjFEu
Xb5CTZ4Ow5fidbFcC8X5CHu+IqbmD0Ss8wd4xhTPphor+QoIGrEy5yvq4lTt
k+tonfMVu+j8BayjBQCAkQr3a7558xbVt7aLOieudyqpDss4LxQXa43sswVV
Pz+eKdro184TLbJvc3GV6tncNqpnTK3eUkkf+div9OlJsb7ytW8M6bVGgicD
X2oEiq/p3H4qa4pTrXa91uZwPefXbtuz7yBd6+3N9GEKAAAAAAAAMEa5des2
tQY6Za5a5CsiaX0p8/wBzlfwY2W+ImLMmBrN+QoIGvESHrSfShu1/TeQOl+x
e+8BunL1WqYPUQAAAAYJ+1Ic59W3dghfimO04qqQiN249t3Jl1L9/NRM0Xqv
XINUWptYg8TPlZXpc9k7pH/6/vNJ/hN7MdzT77s/eEH08Hv3u98tbv/qn3xz
SK81EjwZ+FIjT3KGaJDKm+UMUY/e88K8j/NtPadO09279zJ9mAIAAAAAAACM
UW7fvkOtwU5xHZNT0kaFFUFjHa2TL5UqX8F9YYoqR3++AoJGurJLPFRQIfMV
9ZyvcNjP2Zc+2nOS7t65m+lDFAAAgCHw8OEjCkR2UX6ZR8R5BeUBEbe1pKiX
UmuQ1ExR8xokXrvEa5CyOc4bpXOm2Hcy+yS/+cVkH2bZehf9329/T8yY6s9z
bsitd7y9L0+GtxvsDKt12bWD2m5TXiNtLmgyfh6OvtTGvAbalN/0RN/HaBL3
ai7S9tXKtsQM0ahtH/dGttGlK9fo8eO3Mn2IAgAAAAAAAIxRHj16RLGO/VTg
9ogefPluP1U1x4z+Lk6+lMpX8PyBpoDMV1Q0xqikOiryFcKXQs0UBA1L5ZR6
qbA6TJXaftvglK/Q9vuatgidPn+RHj9+nOlDFAAAgCGyfedBKq2SfhLPmKpo
TN3Hz7wGyauvQVJ9m7lmiudMydr4Ntkbdhic156kPvyRj1l8kj/7y78d8HNw
L8Bv/s2/0P/69BfomWfeJ57nmWeeod/60h/QqxMWGI9z8mTYT2LP67//2ifo
Xe96l7bdL9KnPvvb9JOXJqd9zXVZNfQ3//Dv9JnPf4ne9/5nxfM9++wH6bNf
+LKYg8VeTrpt+f1+4n9+lt79nvfQL/zCe+lT//u36KevTOvTl/rm33xPbPfr
n/iUuG/p2pKk51fPzY9hn2/Z+tK0vwOn9/jm1KX0h1/9C/qV//brol6Nxb8j
vm36vA0Z/78ZNhI18QEqqYtStVe7TkuxxjAQ6aDe6zczfWgCAAAAAAAAjHF2
7j5ErkpZ55RX5qXyBlkv0Ve+wpciX8H+FrwpCBqeyi31U4m2r1Zp+22jtg8H
HfbvJl+cLl7BzAEAABgN7D3QTRV1IRGXcZznro/3GeeJvs1ROWeqwadq42NU
VBmmvFLfqI3zfuOTn7b4JL/4vvfTtHnr+73965MX0wc++Etp51L9x0/Hi8fa
PZn3vvcZ+q+//PGU233rOz9wfM2pc9f1ORPr4//jOZq3PCdp2yVrioW/k2o7
fk/pfCn7606cuSrpNT7yUetjpsxZa9zXly/Ffto3vvVd4dGleo/sUbH3lun/
neEg3i/ztWsx7tXMM0RbYsn7eDQWp/j23XTj5q1MH5oAAAAAAAAAY5y9+4+Q
uyZozB4orY2Jvi08YyZtviJmzVe462W+gudUGfmKUZizgKCRKpGvcAeotCEu
1tE2x5LX0XLtVLxjN/X23sj0oQkAAMAT4MixE1TbEhXnAI7RXDUx0YfZlybO
i6ra+GiiNt48TzRrlPby++M//etk3+M976G/+L//SEvXudJuyx4P1xql84dE
DdY3/k483u7J9CX2ZhasyLe85vINZfTeZ57p1/Zcs2TvC/jJ5z43oPfwtH0p
rh3r73t7deLCjP//ZFpZ3JO9MiR6Nddq13JtNl8qEuXrt23UdfgIejUDAAAA
AAAAMs7xnlPU2BY3fCnux8c1UN6Ic+8Hc76iLWLOV+i9/Nx+o2Zq6yjMWUDQ
SBXvkzxbyt2k7bP+5HW0cr+O08FD3XT7zp1MH5oAAAA8AW7evEWh2F5xHuA4
j9cQVbfEyBNO7UuxwqqXX1DWxldq5w72tHh9g/KlRlvNFNdGparN4bqcr/7J
X9HCVQWO2/7eV/48aZuvfO0v6fs/fIW+/ld/L3r58W1c/8OPT+VLsQ/23Kc+
71g7Za+Z+pOvf9tyP/fKm7VoM63PqaNx4+eLei/z/S+9NsvYdtLMVUnP/+wH
PiS8uV/7jecy7kstWl0ofhfm3//3/v1l0SeRPcL/84d/ZtmW674GO49rtCjb
5aXCqrD0pbT9ttUW5wW1/bkl0kEXL18RvdwBAAAAAAAAIJNcuXqVgrHd8nqG
19lVhMSMqbZQal/KyFfEYka+oqopefbAaMxZQNBIVba2Xxr5ikCyLxWKxqgp
3E7nL16ihw+RrwAAgNEAzwrcsfsw5ZW2yVmiZX6qbIxRqxa/haOp47yoXhvf
Eo6L+irZyy8q4sREz+bRN2fqO//8n2nrctgf+afvP2/Zhmul7I/77vdfsDyG
5yrxvKoJ05eLn518qf/6Kx836rLYW/rvv/ZJy/3sxajn41opfi/m97VkbbHl
NdkPM2/PnpO6j2czme97/7PP0qJVhcb9P/iPcRn1pf78r75juU/VmSmt3Fie
5CEuXlOU8f+fTIp7NRdr12IVrdo+G0qeIRqIxKk5vIPu3L1Hb7/9dqYPTQAA
AAAAAIAxDuefO/ccEdczKl9R0Ril1kD/8hWt4eRefvClIGj4KU/bt4trolTR
Eqf6YJx8SfmKGNV443Tj1h3kKwAAYBRx8HCP6NnMcR738mN/qckfp2CaOE+t
QeJ+f/zY6hZrz2aLNzUMznFPUs+/PEX4NOn8qW/+zb8Yj39jyhLLfVyntCG3
Pu1r2D0Zfj32rsyP4Vor82P+16e/YNw3ftpyy32f+uxvi3ohs7g+yvKY//1b
xvb2WVrf+s6/Jr1Hvi1TvhS/V/N9/Hntn+9XP/6JpMdk+n8nk8p3B6lE27cr
2+LUqF2fhez7s7YvB+K76AHWHgEAAAAAAACGCV3dJ6nQ7dVnD/CMqQg1+fqf
r2g29/KrilJemW9U5ysgaCTKyFdo+2pDSNu/HfIVbeHtdPfe/UwfkgAAADxB
Tp+9QK3+7SIm4/hM9Gz2ylmi6eI8Feu16TVT3MtP9GwuC1jivNG4Bmnt1mr6
+3/+ET377AcdfSmu1Zk+b4N47L/96FXLfZ/5/Jf6fP6+ZiuxXn59tuUxH/8f
zxn3/fD5N9L6Zk76pQ9/zNj+/c9+oE9Ph/25TPlS3FNwoJ/vxy9Oyvj/TaYk
ZoiWh8hVH6Mqj3ZtFolb1h4Jxdtp556D9OjR40wfkgAAAAAAAABAcPrsRWr2
tifyFVURqmuLkz8y8HxFaU2UCtwBa83UMLheg6CxLJGvcAfJVR+lKm3fbook
zxWJb2unzt0H6P6Dh5k+JAEAAHiC8Iyp7Tu7xPlA9WzmGVO+cN9xXkyfKdoS
kmuQyupiDj2bR+8aJK57+t6/vWTMh3KqMeKZUebbedZUX8/bH1/qtYkLU/pS
f/233x+wb8N9AnnbjbkNSffNWbI16fUz5Uutz64d8Gdj/eznMzL+/5IpZZXw
DNEwlTbEqdrLc6Ss+zb3ao5u76QTJ06L3p4AAAAAAAAAMBy4ffsO7d2f6OUn
Z0xFyRvqX74iaMpXlNfHxPbo5QdBw0e8HxaUh6hU2z+rPcn5Cvaotm3fQcd7
TmIdLQAAjDLu3btP+w4eM84HomdzU4Q8wf7FeaJ3c1TOFOUZpMVVkTFXGz9j
/kbLPCfWl778x+K+v/7bH1hu/80v/l6fzzdUX8o+B4t7Bz736c+nFPfF++kr
08S2mwuakz7L1Dnrkl5/oL6UU83VYHypzQVNSe+PZ22l+3y//5U/p9WbKzP+
f5IpiRmilRFyN2nXY/44tdriPK/2c7hzr/Co0asZAAAAAAAAMFy4f/8BHT56
SlzXqHxFeUOE2gIDz1fw/IGxmK+AoOEsla8o43yFLzlfwbWRoR17RL7irbfe
yvQhCQAAwBPkrbfephOnzpO7JiBiMl47VFanxXn+/sV5qj6ec9s8U7Syidcg
BcWcqbFQM6X0G//zMxav5Mu///+J2+099T70Sx8R84/SPddQfSn2mMz38Xyp
gXyWD37ow5bt//3HryU95l9t/QntvtQv/+qvpa1X2pTfRB/44C8N2JdiffRj
v2q5b8L0sT07Kp3EPl3qoyI1Q1S7fvPaenR6gjGKdO6nx48R4wEAAAAAAACG
D7xu7tz5y1ReGzBmYvOMqWZf//MVEX3WlMpXFFWGxly+AoKGp7R9usxHRdVR
Km92zld4QzEK7diL3i4AADBKuXjpCrX62sV5Qc6YClOTN5Y8gyZdfXw0Rq3h
ONV54lqcGBXrmKxzpkZurLd6S6XwXf7zhfGinsh+/8qN5fS+9z1r8Ur+4V9+
LO57c8rSpJ5yr7wxx7I9ezT/9L2f0EuvzRI/D9WXYn/HfN+73/MeWrSqsN+f
95PPfc6yPXtuXKek7p+5cBM988z70vpSn/ncFy33f/VPvpn4vHmN9MUvfzXp
99JfX4pfy3zfn3z92xn/Hxmu4v0urywgZohyr+bmcPIM0WBkG3XuPZzpwxAA
AAAAAAAAJHGt9zr5Qh2U65IzpoqrQtTocZiZm0bcu5zrMDhfUaZdG+W7OV/R
OiryFRA0UqXyFcW1Uark2VKhuJgVYs01xmn77q5MH4YAAAC8Q9y8dZt27z0s
zguqZ3NdWzQpf93/fn5xUTNlnzM1UmeKTp27zvBAPvyRj9G3//GH9PIbc2jS
zFX0o59NTKoNYrEfxduu2VIl+uiZ7/uFX3ivmEs1YfoK+tELE+hXP/4JcftX
vvaXYpuh+lLrsmvp2Wc/mHT/9HkbjFot9te4/+B3vvuf9NkvfJkWrU74Vt/9
/gtJn+d3fu9r9Mqbc+lf/u1Fx3ladl/qD7/6F0mP+fpf/T19799fpl/7jeeS
7huIL8XvwXzfu971LvE51mXVGI9hr/DFV2eK9/F3//QfGf8fyoh4NrC2D+Zz
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
igEAYxWe/7hz90EqdPvEMdVdF6K2IeQreP0Fn3/K6iJ6jxfkKyBoqFL9rvN4
5oDo4RejGq/s4ZeolUK+AgAAgBVep8BrkFyVftGzubAiQPVtkUHnVgIxNWcq
Kq7PrdfkrYjzIGgQSqw9kj38ypvj1KTtZ6q2Mcjz3QLtdLD7pJgRDAAAYxHO
39+6dZsOdx+jFv8OKqsJU0klzwbyJtY/F0sviuMS9g6UF8U+Q7l2DV3ZFLP0
5hM1UXodjyea6M2naqKetvdkn9MkZi459MdrtfWyU7LUC5n8ITWHqd5UQySk
/x7Mve/MPfDMqmlJfgxvZ++bl0r2bVjm92K+3S71GPPn6UsN6nuH7er034O9
hkp4VA1Wj4p9TFlLFRH1dcqjKihPrqNiGXlPW0zM/5c5oh7Aq/3fBqiuRfvb
x3fR/oPddPnK1UzvXgAAkBE4X8Fzsaubotqx1KMdW/3a+SY86HwFn0u5Freq
OSpigIHUuUIQ5Cy5xstHBe6Q6OHnbo5RoxZ3BmOJWqmWYDsd6D6BfAUAAAAL
d+/d184Tu6iwXF43c82Ud5DzRK01U1GxblTGem3wpiBoMOJaKdPao5K6GFV7
ZQ7SqJUKa9/v2EvnLlzO9OEEAACeKvfvP6ALFy7Rnv1HyBPeTS2+Tqqo57kR
HuM4aq6JUl4U9+8RXlRDVPTzYf+BPRj2akRvvrBeExXRZ0RFEzVRqk/ek/Sf
1Iwn5T9ZvCfVT888R8neq85UJ2TU/5j8JrM/pHwgVQ/kJPZglOzzl5TYnzHL
fJ+S2t6+barHCqV5X31J+Vt2P6wvOXlc5tsMf6ofHlWi119Ii62DaXv9JfpG
2TyqItnnr0iLzcvrwtTs3U4dOw/SsZ6TdPPmbfS/AQCMKXjdSUfnASqtDorj
Z2lNUDs/D6FmKiLPj5Z8he5LZaNmCoIGpCxzvqIiQsVaLFTtkfGqipf5+8j2
XXTm/MVMH04AAAAMMzjOu3nzFlU1xYR/xDVTPHthsDkWzt00h2TfZl43ivp4
CBq8RE28mB8q1x6VNmjXUQHZO0pdW9Vqcd/RE2dEfhYAAEY79x88oDPnLtDB
wydo+67D5A11krs2lHTszC6RXhTHIewJsBfFvdfc9VFRF8U+A/sPxpwo3YsS
PlQsMSNKeVFD8Z5SzXwy6p+iuv/UR81TqnqnVP6J8FCUj2J4KTEhd70Uz0+S
igpxns5RNVGjNkj5L2aZ7zOrLNXz2SRfX74X9d64hk34Xg4+WCpfzOylDcbX
qm51UEtqP8/qUcn3n2oWVYE76FhDZV675RQj833F5T5q0N5LtGM/7e86TqfO
XBDxOwAAjHa4lent23dELTQfL2XNVIRi0UHWTEVlzRQf0835ihzkKyBowJL5
Cp+Rr3DVa/G1P5GvYNVrP+8/dBRxCwAAAEfYm9q2Yy+VVgcoj2um6kKD7k8T
FfkVmTupaIxp5yfZY1/5UolYL/PnUAga1jLWHvmpoCIs1h5VeeLUEomLvCbv
ax7e3yLb6eLla5g/AQAYtXB9yK3bd+jipWvU1X2KWv3tVFzuFfl6dcxUXpTs
b+8Ta6CVF8WeR4U+L0r06DPVRbEPxJ6Q8qKG6kOZvSgnD0rVP6kaqKQ5T0Fr
zZO5fsep3knVGdk9J+XxJOYhxcTvQvabixieiZJ5TpKUrPVJKbdeB6Qp1WO4
Xkg9X+rXCYnaIr6vmFUVFu+tpCq936VUWqM+o83TSlPH5aimoXlazjVU8v2b
f9cFKWqouD9Vf9dxFVf4qNm7TcyIPXv+Ml2+0ku379xFHRUAYNTC+Yr2zgNU
UuETx8uSqgCFB+lLmfMVvE6F+65a1wnAl4Kg/kjG3h5tn+R+BGExc6CyVca1
IX1f4xlTzf5tIl7h/RgAAABw4sKFy6JPCMdhRRV+avBEBx3rcR7GY+7np113
m+M89PODoL6VqJUKUmFlVNRK1QXlWn51PcXzRPd1dYt8LQAAjCb42vXBw4ei
3/DFS1dpz/7Dop7b6VipaqM4119cGdK9qJjhRbGfwx4P56DY+xE9+qJyLafy
oobak0/VQpn78Bk9+KKpa6DsHhT7T/a6HLvnoXwns+dUUm2t0RF95Ezej/RC
/CImyxc1ZD7hiQiV+sS6pDzhjyTkdJvK3eXabneS3N6XUFlqyfely8HvsvpY
2uerMKlS97KM+i3ds2KvSvhV0idSfpFd8neqSdVf2XsLDlDmPoeqx5/82yTX
UCX+JuxRJfwpXref00duNMfVSq5K9qi0WOBgt1ijcvfuPXr48FGmd18AAHji
cCzgC++SMyLdPqpvi1IoOrj5A3y+btPzFbx2hc85TjWsmb4ehKDhLJGvcHFv
gkS+ojaQyFcEtP2zVotx9xzoppu3bmf6EAIAAGAYw/MHt+/souJKeV1cVhvW
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
5VH1peTegInaKbM/Jfo9Osway7H1euwrrs4va6NWfwcd7zlFjx49Fvsn1jQD
AEYCHFPcuHGL2gLbtWOiX6imJUyB6OB9KV6v0hbm8708p+fr53B4UxBkVZYt
X+Gqj1ryFRxP+2I76WjPmUwfKgAAAIxQ7t69R12HjpG7JihistKaEDV5h9bP
j9cg8Uycyia5hpivofm8trmgRVMzbcxrog15jbQ+p4HWZTfQmux6WrGxipZt
qExofSUtXF1qaN7KEpqzrMhy25J1bss2q7fWiedaq4mf15D2OutzG7TXbaRN
+U3iPWwpbMn4eR4au5L18LJWKk/v08xzpbhWitfwt3Dvc9822n3wCN24eSvT
hwkAAOg3PSdOUzC6kyrqwmImRLae10nu1RcW+SCuOypvlD6QUR/ll76R8qMC
KfyoVL351Hwo4UOFrfVQZh+qNs1sKHM9lOFDOfoDQ5//lOlzEpRcW2X3qqRf
ZesDqPcC5Fo/5VEZ9VRGT8D0fQHNNVdmqfvs9VNO/pTTDDL7Z+NaxZLKADVo
//M7dx8QtYwAADASePjoER3rOUmVDRFxHHbVBKlxiPmKgJ6vUPMHEmtpMWsK
Gpw4v8R5Js43bchtMLQ+h3NTUpynWptVTys3V9PSdeUWLVrtovkri6RWFNHM
xbk0d3mBcduCVcXGY1dtrhHPszbbKvE62uup3JfKfw0q92Xq7ZJXFtDnSsWo
Iaj3HNBU44mJfMVN5CsAAAAMEl4zef3GTYp37CNXVVDMWq6oDw2pZiqie1M1
LXwtHtDOhc3CQ5qzvJDmLCukaYtyacKcbHpt+hZ6efJGen78enr+zVRal0a2
x46X+tnEDeJ5lV6bvpkmzM6iGYvztfN9KS3bUEFrsmpF3JDp+AUae1J5L47x
jFqphhjV+OLUoudSecaUL7qTzpy/lOlDBAAA9Mnde/eo+0gPxTr2U412zVpY
7jNqpDinw8c8ziVxXp3z7MqPqtD9KJ7bxF6RvT6K10OHdP/JLOVFBW1elOrN
Z54Pxc9p+FBtCR+KpXwofi9iNlSNnA9lqYfSvQDDB0iaj97/PnuZPv9A/T9P
m5XkVel+VXJdlamOKkX/Pyel9qus3lSq+VMD9adKqwPUFtxBu/YepgsXEGcA
AIY3XDN1584dirbv1Y5fQXHsc9eGKTiEfEU0Jvv6NgXkuhQ+3tprn7F+BBqI
2ANatamSFq8toRkLs2j6giyaPHcLvTljI706db3QCxPWm3Jf6fJcfUk+zwua
Xpq4ztC4yevo9ekbaJL2unOX5QstWl1Ma7ZWD+zz8P+9uVaqPESlDYlaKc5X
cC+/ltB2MT8WAAAAGArcy+P27dvU6OkQ/fzYS6pr7f8apFAoTF6fj5qaW6iq
qpaKSytpa34Zrc4upUXrSmnGMhe9OSuXxk3dQq9M2UwvTd5EL07aqJ2XN9BP
tXPpT95Y92RlO2/za3AM8OIk9qs20StTN9O4aVvojVnZNH52Nk2cm0NTF+TS
zCUFtGhNmai94nUtmY5toNGpLNvao+KamFEr1aLtT41arMdrkQ5299Bt7RoM
AACGK729N8Tch+07D1Ftc5QK3Mn1UcqP4roR7u8r6qMaEn4U1y9xXqglZK2P
CuneU8Qk1Z/P4kVFrF6UU2++5L58yoeKGf3Tikw+VH/y/em01aJWqWFw/oEG
qb58qlJ7HVUgUd/koAJ3UKrcqsJyu18VSvT00/v6id5+5QHbHDPn/9d0vahy
Xa2iV4Iv3EkHDvXQmbMX6OHDR5k+pAAAQEquXL1KnlCnnD9QEdBiiChFhtDP
j70pryaOGSoaY+I4i35+UF9i/2nFxgrD95kyL5vemJlFP5++lcZN3UwvT9lE
L05cL/SzCewdcT5K6onnvd7gfNdak+Tr8Ou+NGmDEK/T5tzXazOyaPysrTRp
ThZNW5AjarEWri6mpevdSZ/Rnq8oquLeLjEjX9Gkxd2V2s+HjpwQM+sBAACA
ocLe1P6uI1TVKOvjy2pDItcTNfdiDofJ4/VSc0sr1TU0UWVVHbncNVTkqqKC
4nLKLSilLdnFtGFrEa3dVEArNxbQgvUFNH1ZAb0+K4demryFfjZxE70wYSP9
VHhSZq236Hnx1XT/hA3GNqouyqI31ws/yi7jdsdzuMmz0musXtXiCfarJs/P
o5lLirTzdQktXuumlZuraGN+U8bjIGhkK8uy9ojrBsJUpl0H1XCNQFSuP6rW
ro08oQ66fLUX8x8AAMMOnk3Z23udTp25RB2dB6mmSYsbStssxzmjX5/uR8n6
qKjI+7A/xF5RgzfZj1Lzo5QnZe/Px2ubvboX1WrzolRdVK3uRZn785U3xHQv
SvbmYx/KXg9l9qIG15cvMbso0+ca6Cmdz00+VfoZVT5d/mSZZlYlfKuAza9S
9VehtLVTqfxU9f/s9DlySlqppNJHbf4OOnLsNF28dI3uIscEABiGcN3UgUPH
qKpR1jaVVHO+IvXMyf6IYw6OQXgdS1mdw2zs4sS8yEyfd6Cnq015jbRyUyUt
Wl0iNHsp9/0poEnz8+jNWVk0bsoGoRcnyryS01rpn5hqm8T35pzXhA30wsSN
IjfGXzlP9rNJCb04SebN1P1GDs2cF3vTmgez/Ozwfn765lr62YR1wjMbN5Vz
X5vp9ZlbacrCApq+KF/0Nlq8ppRWb62R+YqygNHbpdovcxUs7vPS0BanS1eu
I18BAADgiXH1Wi8Fo7u1eMwrrpPZm2r1Bam51UN19c1UWVVPJWVVVFDkppw8
F23aWkRrNhYkiT0p1ppNhbRiYyEtXFdI05cW0Buz8+iVqVnCn3pp8mbtXLtZ
fFV60ZA8DwtNdniMuG+zPGfz+Vs/jxvn7Ql6LZbdy3rTwb9Kte6E15lo52v2
qt7gc/X8XJqzvIQWrnHTorVyrtW67DoxMyvTMRM0UtRmXXvkDopaqUrOz4bj
Yt0Rx3iVze10/MQZunf/QaYPCQAAYPDo8WOxJvLi5V6KbtslevWZj3EyP9+q
z4+y9utT9VHsF9Xb/Civgx+Vqj8fe1GqP59RF+VL1EVZvSjVn89UE1XpXBM1
aB8q4+cVaDjI8KdMHpV1JpV1NpVZqf2q9F5VQoFkf0p/bZ6TkjwrJXVutcDt
pWbPNjrUfYJua/v6w4cPkW8CAAwreF1MR+cBcbzi42d5Q5j8ocH7Usqbag1x
HMFrV8LJfXtT9EaFRo94vsP6nDpatbmSlm+ooAWr3TR7WQlNnp9Lr0/fRK9N
30gvTXLwn1SPHtO6auUxGXmsKVvo5albRQ6Mc2HjpmXRK9Pk15/PyKafT5d6
dUYOvTozR37V9NrMXMv946Zli+1enrJV1xY9r7ZFvJbysvi1nfJgRu4rRQ7s
p+PX0suT1tPrMzbTtIV5tHBtJS1dX02rs+opp7yF3M1eqvYFRL6ionkb7es6
gnUsAAAAnhiqb/PeA91U1RCiNdr5Z01WgxaT1VFOQRlt2FoovSab/5TwoQoN
rdtUROu2FNH6LcW0fmsJrdriosUbXDRrRQlNmF8gzrfiHDuDz7+sLKGfz5D1
z0qvTNtK4/TvzV/HTZP3CU2V5+SX1Vc+PyvxOXqS9L+Eb2VeZ2Lzqix+VQqv
6qdidpX0qt6ctVWLVYpo6bpKWrGpWvuMNWK+ZKZjKmg4K1ErxfXwhZVhKm2M
US2v84/IHs31/u20Y88RkQ/ifRIAAIYLZ89fIG9ou8hzJ8+tkbl4zotzXUdx
VcKPYo9I+VHm+VFe3XdSflRQ1USxF6XJ8KJss6JUjz4xK8rRi4rrdVHKiwpL
L6rM6kVhNhT0Tsmpjsou5VuZ5exbJddWFZhlrp1ymD3F/a7M3hR7x+nyq3w7
r09r1PavI8d6xBxaAAAYLvAx6eTp89Tsaxe+EcccTd4ohYbQzy+m12NznFHV
HBOzptjzyjV5U5g1Nfq0Ob9JrDNevaWGlq2voLnLi2nq/GyaMHuz6IPn3G/H
1NdHr3diL4j9J85DcX7q5+wpzcqlN+bk0ZusuXk0fl6+0MQF+TRpYYHUggKa
vFBq4nztdu2+yfrtE/X7+HH8/cT5BSKPNn5egXheodl59DprlhT7WOxnjZue
LXNjuhcm6q4mqhzYeqNXkZpxZcl/iZ/12VUTNtIrUzfRpPk5tHB9Ea3JL6NN
JTVUUCVjhPPadcH9Bw8zfUgAAAAwguE1kBzbPXz0iG7dvkuntBjPH26n4vJG
en2GPIdNnJdDi1bl0+oN1loosw/F/tOGLSW0caumLKnNOaW0NVdTXql2zi+l
ddr3SzeX0ZzVLpqyiM+puTR+bo7UvGztfJ2V0Jyt2rl2q3aeNWmW1Bv696/N
tOpV1gyOAxK+luFh6edltaZErCeZuCnhVdn9KqdzdBrxvMnXpm+hOcuKRK+/
TfnNYs3NlkLUUkEJqVqp3FIf5ZeHqLg2SlVtslaqPhSnag/3sdoj1gHCkwIA
DAc4Trh69Rq1dx6gqsaoyFdbjmmqXx/7UVwfVRURc5u4Zx77ROwZcV895Ue1
muqjAiYfiuU110XZvCg1K0p4USYfqqLRXBcVdfCiEvl5p5k7qH+C3mnZZ1LZ
lc6vyrN5VUm1VQ49APvb28/+v29/z+xnldWEqNnbQUd7Tom1awAAMBzg2u2D
h45ToVseIysaQtQWiFF0CN5URHhTcWryc3wRo+JK2SswB97UqBHnZjhHsym/
idbnNNCKDZU0fWEWvT59A704IX0fPjVbgmuSpP8ka53YC2K9OSdf+EfKc5qy
uED0C5qxTGrmck0rCmjWygKas0rTaqv49lkrpPhx/Hh1m3gOfq7lcj7GNO37
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
3LOPr0HZLzLXU5trpNh/4hkMHD+I2qhgYmZUX16U7NMXFXOqhB9VGRY13Opa
N90sB/TngyBnz6jf/lQKjyrZm0rvSxn+lPa48toghWJ76FD3CbrWez3ThzsA
wBiC67/Zm8rX+5cWV4WoxRulWHTo86Y4LyK9qXgKb6pV96ZQN/VOa1N+Iy1b
X0ETZm8VM7x5lrfKsTxvro3iPn3TssW8JK6NmjA/X8xVmmbq0Se8qPWyLmrJ
xkRt1JPyo+y999R8KLv3tNzkOQmvaYODx7Te6jfNN/lN80x+k/CezNI9KK4F
E738VsrPP0uoUGolfy2mOatLac6aMm27MvF15soy7bkrKdvVJnt410TFOrXi
KtnPILGGLGDpE5zOn+L4PUfbX/LdHqppimoxwy463H2ceq8jZgAAgJEE17ve
u3ePTp89Tx07D1JDW7uYQ2w+5ptzS0WVIX0+eTSp9w7HWK3hOHkj0osKarFX
SFNEj8NUTNbapsVc+WWitx57U0vWFms/u1LOknLZPCjlQxXrc6lYhXo/v60l
pbQ2v5SWbiqlWcsLaeriXJqyMIcmLcihifOzhcbPy6Lxc7PozTlZwlNSnlOf
PpP+veU+J+9Jl/1n89ypn0+X3pThT03rw59S9VO22qlUPf6e1/0pjrEmzcsT
szqXrisX/ZIzHQNC/ZMlL6R7UoWVEXLVSz/K3RQnVx33K99FZ7T9l+e6AADA
Ow3739dv3KJDR05Ri69dzJUxH7eMmKHML64xuaZa1UipuME+R0p5UmpmlKqN
MmZGtSZ69LEfJeuirH361LpLp159qWdHtWJdMgTpypQ3tdXBm+LbufayuilC
7Z0H6Oz5K2ItNPr0AADeafgww+v9OnbuF8csjifKG8LUFhh6Pz/DmwopbyqU
tqcfarifvDbkNtCSdWU0fVEevT5jK70w3rrG96cT1tOLYm4U52xy6PVZ0o+a
uCBfzFGavizRp499HfZ+luqekJoVpXykwXhPdv9p5Ubr7Cejzkl5TuulFqiv
KXymOaq2abW11mm26sen+0xc+6XEnpPZgxL9+kxzpdib468zlnGdVKH2mCLt
sS7Dk2LNXlVG89eU0/rc/5+96/BqG3u6/+23u+mVGnpvSegdN4pN7x3c7YT0
3utueiENQpLd33ya9yT5SZYNBBMZMveceyDBMS1+Gs2de2eczbNHavgwy1zi
dXwgok/hTFmf4p/iOyzX28Nmdc6yvXCDkwGY816Acxdvsf4mztARCAQCITmB
faUvX1bgn+cv4fzluzDrOaebdZ6VaiOltxTRo/rGI3qU2lPycW8U5iZ7BC0q
Vj0WCARgbHyaXX9xB1SRdG2rbekBW5czSn/Sa1Cdigbl1LHHBXaJlm4XNHe6
oNrikq7LLnaNzCi1QWqxBVKKLFJN0QHHCjrgaH67VGO0wxFGriFpNKZcA01J
0ZtyDT6eI2hOMo3+DvUoUZNSc/2i8v2i908Z7p7S758y8FDhXs4DmU2QKn3f
had64FTLEDTZaP9UcnNO45VCTYrtlJJqt94prkn1jIXZ6zF07jp8+041F4FA
2H6gr/rN22V2v2e0c1Kb2edj95noY8JsPdSTlFkW9D+JmpSRNwofF7UzSr6X
jdzHynOW/UoOyCK7h11Pi6I+D5EYm+w1EqVPzW5In9Jn/Gn/Ps7OqRjaFN9N
Nwcj0yF49vwV23NO3nACgbDdwHPm7ftl8ATOQ9eAm+2aGpkJsCy+rWpTAUWb
8mB9wzP94mpT5J3aMls7p6HBMsb0qLxK3B/VBnvTGjQzvdhj2cP0qFY4lNPB
9KiUIgeklzggs5xrMajRFNVubWeUXn9SNCgle0/RoJj+hHmAgu6k+psEzalA
pqIvKTqSuPeJ6Ugyc3TMFjQm3I+F2huj9H5WBf+Y+piKyGPQM8ZYjrPgndK/
74KcU07Iq+6F/BpO9EnlSzzdNsr2qrGcAznrgOlTY/oZM1mf6o9kHoivDfX1
Eed1gR/r6l+AWfc5uHz9Prx4+Qa+rq2ZfaQQCAQCQQbWWCsrq/D8xRu4euO+
dF6fZf7XyL2oMus8L/uj/LIeFVJzd0ZEf5Sc1afk9AU3WI+5vT4YGB6Hihor
5FfyXVO17T1g7dZ6oBgN9Ceb9DhbF6dVpqWTs9XhggabC6pa0S/sZNfI9BI7
HC+wwtF8CxzJQx92h1RvtMOh7Hb5rVZPitKPBB4yoKgzaRjjY6IOpafeN7VP
s3uqSeedatB4p+Ltn8LHHjzRDJnFViir7YPq1hFotlO+XzJSnFO2urDH64Nu
qV5zYV4V06R4fmbo3E149ea92ccKgUD4TXD7zgMYngxE3wPiPLF0VmHdwDxS
0n2lE7N+DTxSSv0Qc2/UXHRWnzhX2TMcku9bfep960a9UaRHEYmbYHe0RsX1
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
7wR7M9gPQr0FtR30FaH/CPUg9CehXwm9S6gnVcha02nBAxUriw99UGWCBoUs
EnY/qfl7JzmzZQ+UJiOvBH1J3J+EPiWuPdlkjYlrRKilHcxuh4NZ2swfPnOt
6z1ltsadeWaPjzEzrcxXK9lCONsdrW2hZiV9nYVdkFLcJX3tmFGEPTfs502p
PUbGQU6mNykciCb+3zciPpeRdyr2fYG+duG+6+5BD0wtLMHla3fh9dt3Zh8t
BAKBsKvx5u17uHrjHswsnofOvgXdmcx3EvPMvohHStkDIe6A0HukvHr9Seai
9Bj0oqs6VEC7z9yoL8V7UiFodkxAbmUnm9HAa3BWeTecbnZCk5H+JGtODa3S
9a61C+qRzZx1zZ1RrJFY1dQJpQ2dUq3RyWoPrEVQ24noOo3yvqZGrfdIR81j
ZGp0rNTYGlY8fSmawr9fh+v5ptRMPz01/qkG6WtrghOldiir7YV6y7jpdeXv
yEjPF1+bPugaCkL3aIhpU51SHTcg3afcf/iE+R//R+HIBAIhwUDfwYePn+Dh
42cw7z1nUDvM8doBPVLsXtOv8VgrmhRe4xVNiuX0zWu1KENvlC5bPpYeRXuj
iMTkYTyNaj2tStlJpf379Z9PmyM4Bw7pnAotXYO/n71kvWMCgUBINPC+C8+Y
mcWz7NzBHkrfWADm3InTprzBEOuhjC2E2Zww9u2x/omXe2r2NSBZ2GSbhFNN
g5BfiZl9rfDn8TphDreB9XpQh0H9BnUV9Ppgtl1aiZ15k9CnZJTZVyXrT1H7
oGQNStkFJXqhVB3qNH/eKA+UusuJa2Ipct4e6k/M95TLfUtMf2I5P21Czo/S
S2rS7HZQ+ll/aXpU2p5VLP4Vk5Fe1F65l8U0LzUTqF36GtFXJX3N+Q6ZdjYH
XtM+JtXvvM/I9sHqtKX1qOyrjfUx9E2pe6c2smNW8/8F72XmoH/MD57AJbhz
/ymsrqxSth+BQCAkCFgzffv2DZ7+8woCZ65C74hXuHfk9YzaU5Jzd9Aj1TcR
mW/GHhLqSOhtwtpoUdadPIIWxTSoIP+4okExLxTqUB6tH0rRocR+1MAUr7eU
2Wicua5tH4WsUjubxziaa4Ms6dpd2dDNPE+oQUX0p2jtqa7ZEZc1zXyuBWsG
nFNJK7ZJNYmsTQl6jsKIrhOt52j3OGn1Kv5+g6pd/aXTrVQdKU2nZcWjRucS
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
lrRdO6dQo6qU8/2K67Ta1PFCBxzJlbWpzNaouaC/BK+6xq+erPWYPKejaFPo
l9qb0ca0Kaw5uTbVn/x1kpxp1dm/CJPzZ+HClbvw9t17+PGD6goCgZA44Lmy
dOEGOIe9kXqhK75PSszuUzSpSGZftCal7qJ0zdMuKSKRSIxDfvbqtCk2C+CB
oakgXL91F1ZXv5p96SAQCLsEONP89t0y3LzzEOZ9F6F/zM8y45k+NSidO9MB
GJ8Nwrw3vG0Zf0HZP+VGD1WQe6hQmxqTtSn0TfUM85oT60ultsR6srzWCUdy
WqNmaaM0qTSuNSm61D5Vi5KYruT1RfogsTUp8knpdam9aY1wPL+DeaR2RJ9l
11DeQy5rU5jn1zUUhG6mTQVZrnrwzGWmTdFMC4FA+BVATerly1cwKl270V+h
v8fR5/dF6VIGOpTYRxLnUkiT2hwxO+5kUz/klFnh4IlW2JPawPONpboH92um
l9igtMYGJ+u3L98P9akqZfdUnQPyTjsgqxIz/bg2dTTPBodyLMzPruz45P71
ZvZ1/iXUZaKPKin3fMp1KGpTSp7f3sw2RvSrnZB+3lWNg6b/v4hHfA07h33g
CVyCJ0+fmX28EAiEXYjnL15B8Ow16B3xGdYLsTQp1KDieqR0mpRR7q/ZZyyR
SCQmK420Kat8Bg9PhVim3+fPK2ZfQggEwi4C9pI+fvwEl6/ehvHZM9DV72Z9
IKzlsMYbmAzArDsEvkB42/L9ArJ/alEiZvux3VNzEW1KyfTjO6fmoaZ1EI7m
tvMeRUok74XP0zaq88D4cVGXiuyN0mtR0uNSeX4MZ6P8PLIeZXaPI5ko91v2
ZzZDRpEVqhoGTL92/q5k927M6+hmeX6oS3WPhPnbIe6bQu2ZQCAQthNYR7x7
/wHGZs6wa3TUOaXRpLS9JmMtKrqPRHrU1tnimIba1mFIyWth+cd/MM8z16dw
z1NGmQ1Kah1wapu8U4pvqhS1qVq+c+pEuQPSS3im39F8OxzO4TunNDnL8iyR
UrexrD+51vvzuKhRCUySWknJ82O61AnUplrhUHYbZJc5oKZtxPT/E0bE11nP
oJvtkfr6dc3s44VAIOwyoO/y2YtX4GU7BdyR82eDmhTTpQYMPFK9Hk3+L+X+
EolE4s8xok0tCJl+Hvb+2EyY7RH+/IW0KQKBkHiglz545gp09S+o9RvWdN1D
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
zs13Qdv2PssGP/Js0Pv39x3btmsvcg/qY6f4u0+dnevd/l8D7tcs5zx9HEP2
xjtfUIeOnTXLet06gJ57+V3T/w5CiRkiz67VW/8x18YxU3pfSqLV6zdSTU2N
2U0SBEFNoOrqgyTNXV6vtgSeFAAAgOaE8KYSSsX8aa45EZflpDT5WTjPLlG+
/OybXS7/1zKPVq7ZQEePHTO7a4YgqJHF87J27dpDyVkO09snAEDDw3HSsak2
SsqXKL1EogKDOdlF8mdbtu9Avw9BISKeG7Z0xRpKybKZ3oaEAw3hS914cz+a
PD1TeDPqOk2vvzOOnhv2Dk2Zme2zn1fe+Fizj0u6dAt4nLp8qT9f1JG+mRQn
lnOtqT9f3FGzvE+/u4Lev9F3HPL4MPoltlAsf/rFt32Wf/VjbO32l3bzfs7+
mzoWiq+HZr+PDTP9byDU4HfyWUllFJ/tojTOs2uVqEyXy49z+81btJR27d5j
dpMEQVAji/v9JcvWUmJ6cHn1p8+BHwUAAKD5URszVUqzkywUm2anxDx3bh8e
q8qzSZRa4KKUHAdVHzgk5mtCEBS++v33ozR/0XKak4raUgCEI+766hZKyHGJ
eSi5doms+hoWTonmL15Ge/dVm90kQRBE7vEpm2shzUkpM70NCQfO1Jfi/58W
nV/v434+foZmP+e3viDgcQL5UhyP9e0UbZ4+rimlXofjnILdv37ZoAef0mz7
c0y+iA1Tr8NxYMpy9siUz1u1itJcn3fGTNBs99DQ503/GwhFeN7InHR3zecs
i0SlOl/KKWNzVdHaDZvNbpIgCGpkbduxiwrK5tKMIGpKAQAAAM0Zd8xUiZij
xTFTczJclFrozh9QyLWmrJKoPcX5/KqR1weCwlqHj9RQUVkFzU4qMb1tAgA0
Dpy/N87T1+cY5AoSufwsLtq8bafZTRIEQcSxzKcou9BFsxLMbz/CgTP1pV59
85OA6/80K4eGv/WpqMHU44Zb6dKu3UXdKX0evzPxpf7a6VKf47702mjNOl0v
vzLo/QdapnBh+w6add7+4Bvvsut63qZZ9p9HnhMxXJP+l0Hdr+qpWcYxZWb/
DYQiPFc0JtVOyfkuyiiXROyyPs9uuaOClq1ej7miEBTmsklLKSYZc1EAAABE
BtNVMVP8PJyY5/LGTHHdVa5BkV9eRZu27KTjx4+b3U1DENRIOvjbEUpIK5Pf
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
y8U1WZV66UU2SX5Wnker1202+3EAgqAAKtL7UnF6Xyq4sa/m5Eu9+/EPPutc
2rW7z3p1+VIjRo0LOOZ19tnnGPpS+hpNPHbGdZmU/T71/Js++3ryuTfqdR0a
y5dif4yvVTD+TLj5UhwLFez3Zl56bbTp94NfdGNfsek2Si9xz8nW+1Lcr5e7
JNqLXEEQ1GQK5Esp/bDSN/v2zyUR7UtxXxtsO/3tlATNtn36aetC1rfvbU5w
H6X+rm3btTf9nCIeTd9cLHyplEKJ8v3ES5U6JNq8bbvZzRUEQQY6efIkbdqy
U9RxRqwUAAAA0MB4Y6asNCfDSckFEuXaamOmOAd2gVUi1/zldPToMfrD7AcD
CIIM5etL+ebvC2bsK1R8qSkzs0W+HvV8aP06HK90SZdumjnCLw7/wGe9j76Y
JjwjxV/q0bOPzzrsMbVpe6HPnON/XHkdjZ0wU2yrbM++Bm/Tp99dmvW5ZpN6
nzx/u0PHzpp1uFZVva7DjCxq1SrK648xnNPI3/offjZZ812vuPoGv+t+OyWR
eve9wyc+iq/7E8++Tg8M+a/3uBd16BT0cYI5h3c/+l5z3Otv6qtZfs11N3uP
zfvi9Rti//xbchyU8nmLFmfTw0NfoCeee4MeeeIV6nXrADqnZUvN9eBzMft+
8Itu7MubK8ggj5/T6Z6TvXvPXrObKwiKCB07dpxcc1do7lllzohRv2zUP0eq
L8XxTfq2uGXLc0U/O+TxYXT7HfeL5wJl2YSfkjTb39Ln35ptH3t6uOnfqbGY
LD8n3PfQ0+I7c47eMWN/Mv2cIh5d3xzNvlSBf1+qyA5fCoJCVXv37SdX5RLz
2xUAAAAgTJmh1JlKtVN8trvOVKFDFTNlleTn5Xm0dv1GMV8EgqDQEo99FZbP
19zXyrtwfce+QsWXYn6OKRDxQhw7FajO+cRf0un7qSkid56/ddgj4rw2k/7n
P7cNxxB9Pn46vf7OOHpnzHc0eXqmdxnXFeftefxH+YzPic+Nj63+XI1Y5xf3
Onyep3MdlH3w+QSTi2jqbPe5Bns8Pjeuk84xSex5qa+1OK783YyOG+g4wZwD
X9NA14WPzfvgfTXU/nkss66xygcffV6zTkjX6qiHL8X1pUocFbT7V/hSENQU
OnjwN7JJSzX3rFHfPDupzE1imaqPjmxf6pOvfvGJifrg04madbhfev7ld0V9
QH5eUC87U1+K+8FAzx3Boj8vs/Zhxr4jGlXfPJ19qeRy4UsV+POl5PfujVu2
mt1kQRBkoA2btlNGns38dgUAAAAIVzx1KaJTbBSX6RIxU3ny87FNiZlyuqjY
LlG5cyGdOAFfCoJCTTz2lVcyV3NfBxr70vpToetLAdDQdLuih2as8p77H/NZ
R+9dXdfzNtPP2y/6XEFpVkoL4EsVOypo567dZjdZEBQROnDgYP18KV0fHcm+
1Auvvu/jS/E8kLq2e/yZEdSz1z99Yq3+2qmL+Jx54OFnfLZjf+bpF94WMcSc
G/asFi3EPjgmmz/jfL9Gx+PcvRxTe9nfr6Frb7hVxCHzeXLf0rbdRSJul2tV
cj/CHprRPh5+7EXRN13e/Vpx/vwZ56vlWGCOEeP4YK6L+O+7H6KvJ87x2f6b
iXHie10unwPHeHPsr/f8vo+ma6+/RZwfnyevy3M6+BrwZ/w9Oe6Ml7028nO/
15WvD+dVvLpHL2p34cUi7pjz+3a/qqf3uioEyjUcMRj4Usr7tZEvVSx/vmrt
erObLAiCdDp8+AjNXbCSZidGVh8MAAAANDUz5Hff2UkWik1zUEKuRBllEpU4
Je+4VpldolzLXJH/B94UBIWWeOzLyJeqHfcyGPtKNB77gi8Fwpm+/Qf55Grk
sbz+dw4W+aE6db7MZyz02WGjTD9vv+jGvmJSrSLmucCgvpTiS23YiHqRENQU
2rFzF5XaF2juWa4txXUd1Z5UdFK5QO9NRbIvxXHL+rb49oEP1BnD1Klz1zpr
UZ0XFaXZ5ovvokUNwrq247gsjuFWb6uvd/jok68Iv8bfPu6+b6jPOavrKbI/
1W/AfX63b92mHY39dmbAcwhU75Fz1nJeXn/7Z49Mf37ss7GvV9f1UfjPI8+Z
/vdjOrq+ebYnXirXIZHFT30p+FIQFHrasHEr5RVXmN+mAAAAAGEOPzPPTCyj
mBQ7xWV5YqbsElmdSsyURAW2CqpasJx+O3zE7EcECIJU4rGv7EJJc0+7x760
nlQwY1/wpUA4w7WplLpUwXDbv+4x/ZwDovelPPFSBQ5jX6oUvhQENZm2bd9B
JTZtjl1v32zgS6n750j3pb76IdawTb60a3d6+4Nv/G7X5W/d62zX2TdS1mef
SV3Lsi5uvOV2zfH0vk8wvDT8Q80+1L5UMHBuWbU/Vx9fqi44Nmv85ATN+XGs
V332AV+qSNs3y8yW7+3kfP++VLn8nr0avhQEhZSOHjtGrqplFJtcan6bAgAA
AIQ7nFeEY6aSLTQn3emNmeIa6UqdKYv87/RCJ23f9SvqTEFQCInHvrIK9L5U
sV9fKtDYF3wpEO5wLS3Oj8SxUv7G1S7ucInI6RRMPS9T0Y19cbxUapGxL+X0
jH1t2ARfCoKaQnpfanqcum9W98sWD7X9c6T7UsyV197kt41m7+WVNz72iZ96
8rk3RE46fcwSt+n8OTP4kWe96w+460GffXNc1NMvvk0PDPkvtbmgnc9ynt+g
bO/P92Gvq0+/Ow3jtzg2S33O/nwpjuW98eZ+IpeffpnamzsdX4r9p+5XXU8X
tG3vs0x9fTgvoXoZXw+u88X5AQf950mfffI1Y0/R7L8d0/HxpcooiX0pO3wp
CGoO+oO4D9/pM+8TAAAAAI0Hz7WeJT83x6ZyzJQk5nUV2GrrTPFc64xSiZau
XEcHfztk9uMCBEEe6X2pYMa+4EuBSIfnhL/xzheiZgbX9OB6Ju+M+U6MqTVE
vfsmQe9LpVgptdDtS9kMfCmeX7IRvhQENYk2bdpCRZbaHLvqvnm2um9OtriB
L6WB2+LWbdoGjM1hj0cf38Pc0uffmvUee3q4YR/AXop6vfsf0tae4npMUVGt
Nevc+s87vcuNfB+uSfXd1GSxnPsS9pb063BdKmUfel+K50w881Jt/tgx436i
Fi3ODvoc6vKl/nxRR/pmUpxYzrWm/nxxR83yPv3u8m7/hm577i+VZfzd2rS9
0LuMY5GbTd/Z2NTTl+L8JCtXrTG7yYIgyKM//vhDvi8X0JwUxEoBAAAATcmM
+BL53dhKczJclJgnUbZFonJn7ZhWkUOiYlsVbdmOuukQFCrisa/MApf3Plbq
qs8KMPYFXwqAMMAoXqpQonwDX0rJybt2/UazmywIigitXrOeCkorvfert2/W
xzB7+2aLoS/l7Z/Nbm9MgON1OL41kDfFsVETfkrSbBeML6X3bDguafL0TJ/1
7ho01G+8k34fXLvq+6kpmu0/Hz/d55xHfjDeu1zvS+m9MYbzB2rOoZv/cwjk
S50Xdb58TbU+HteUUq/D11tZNmzEGM2yoU++qtmWY7q88VItWtDPMQWm/82E
BAb1pRRfqtzzTq3tm120ZNlKs5ssCIJknTp1ig4dPkLpeU6Re9f09gQAAACI
IPjdd7b8Xhyb7qT4bEnUqSiSn6EdSsyUTIm9glasXk+HDh02+7EBgiByj32l
5Tm897G/sa8YMfZV7ndOdiSPfQHQLIkr8o598f3LvlRKIF/KJdGKVavNbrIg
KCLkm8evtm9We1KxqTYR6xjIm4r0vpnz1v3jyuv8elO9bh2gWT8YX4rjZDV5
87pfa3jsESPHatbj+CllWSBPSA37Qer1nn/lPe8yvS/12tuf+Wz/1PNvatbh
/HvBnEMw5/fSa6P9+m4ffzlNG2t1cUf6aNxU93UZNU6TD/eSLpeb/ncSMviL
l3IY+1IcQ7V63TqzmywIgmTV/H6Ulq5YQ3NSy81vSwAAAIAIg5+dZ8rvwTEp
NorLdLlrtFq0OQfK5Gdqad5i2rJtp9mPDRAEkVEeP/k+Zo9ZNfYVk2zVjX35
zxdkdjsEAAgSP3n82JeyGuUKkpDHD4KaSka+lJLDT/Gk+J6dk2YX/XOs/O+Y
FG3sFPpnLVzb6bJuV/n4Uu5Yndp6gMH4Uv+++yHNOjf17m94TI5t0h9LyVcX
rC/Vtp22jhP7TMqyYHwpzjOrj3tSlp2pLzVcPp4/X4qvKW+jv97nnNPS5zN1
XaqIR+9LJZdTsvycnuenb+bcJKgvBUGhoQMHD1NGnp1mJaDPBQAAAMxAiZma
k+6khBwXZZZKVOqUaud0yc/OpfZKWrF6o9mPDRAEkR9fise+VPn71GNf/G9t
7JTWmzK7DQIABIlBHr+0IokKnH7qS7ngS0FQU8nYl3LHTnD/y30x98lx6Q7R
P2v7aPccEmXuCHypWqZF51OPG2718UXGTpjpXScYX+rewU9o1rnmupsNj8d1
CDXxUue38S4L1pfiXIPq9ThGSVkWjC/F9abU61zYvkNQ53CmvhTTq3d/v3Fq
CuwVqn3BiEfXN/P9nlJg3DczpQ6JNmzeYnaTBUERr5MnT9L2nb+a34YAAAAA
EQw/P8+S34NjUu0Ul+Vyj3HZJW/OAVFnyiLRwmVr6cSJE2Y/PkBQxMvYl1LG
viy+Y1+pdm3sVHK5ZuzL7DYIABAkfnypQrmfthv4UmVOSX7f3mV2kwVBEaHA
vpRFxEdxnxyf4RQofbQSO6XENsOX8uU1nZfCfPFdtHe53pd65IlXfPah93o4
psnoWLytJt/f36/xLtP7Phde9BdvLJXC+Enxmnx3zHsf/+Bdrvel1J6VQr/+
gzTrdL/qer/n0JC+1JvvfaVZpvbXWrQ4mzp07EJPvfCW8ArN/psIKXT1pfg5
OzWAL8X1mzdv2252kwVBEa/qAwepasEy89sQAAAAIJLh/Pcca5Esvy9nuCgx
T6KsMnc+bO+8LrtEFQuW0O7dv5r9+ABBES9/vlRt7QorxSljX+nasS/Fm4Iv
BUAzRDf2FZNmpfRity/l0I17OZwuKnZU0O5f95rdZEFQRGjXrt1U5ljovV+V
WGaRW1c1XyQh0yXQe1OR7Es98dwb1Lf/IPrqh1jD5fcOflzjl7Rsea7GD+rd
d6BmeZ9+d/rsY9ToCT7e1qjR32rWYb+FvSb1OuwRKcv1vg/Tf+BgzT7uuf9x
n3W+mRTnXa73pThH32ffTPcu/3ZKIrU8t5Vmnb633+v3HBrSl9LnOuRz+WlW
Dk34KcnHfwMqVH0z37vRKZaAOXYL5ffqzVvhS0GQ2dq2Y7f8Tm03vw0BAAAA
Ih2OmUosp9g0JyXmSpRRKlGRbnzL6qyk+UtWmf34AEERLx77yi6s8N6/M+KL
5Pu3RJW/z0bxGYHHvpArCDQkU2fn0g/TUmnyjCzTzyWs0Y19xcr3uvClnJKP
L2WX++0CewXt3gNfCoKaQgcP/kY2aan3fhX5CLi2lJgvYvPGSiVmuQTe/jnN
EfG+1NU9egkf5KyzzqKevf5Jz7/8Lr31/tfCZ+l/52Cf+KPuV/XUbK/3glq1
iqLHnxlBw0aMoSeefV2sM3l6JkVFtfZZ79U3PxExTqPHThFxSerlfNyPv5zm
PY6RL8Xw+T/53Bt0931DfZZd2vUKzbnqfSnFm3pgyH/FOf+1Uxef5Xwt/J1D
Q/pSt/3rHt15RVGPnn2E7/evAffTwHuHiO/5/ic/mv43E1Lo+mauG8exzPlO
Y1+qmOOltu8wu8mCoIjWkSNHaMnytfI7cYn5bQgAAAAAaKb8Hqzk8uOc2Hm2
2lx+okar/AxtqVxI+/dXi1y8EASZIx77yiuZ6713+R1YP/bF412asa90J3wp
0CiMGDlWjCUq41gD7vyP6ecUtuh9qXQbZZQYx0uxL5Vn43ipfWY3WRAUEarL
l4r3xEol50iUlC15+2cxbyTCfSmu9eSvlpGes88+hz76Yppm+2eHjfK7Puei
U9Z7+oW3gz4Owz6N+jj+fKlA6OtHGflSgdB7S43pS40YNS7o8+Lv8cV3s03/
2wkN1H1zicixy31zgR9fivPl79673+wmC4IiWjt27qZS27wQaD8AAAAAwNTm
8nNSUp5EmWXys7RT5UvJz9YlripavnItHTt23OxHCQiKWBn5Uuwz8fxM9Xxs
79gXx02JOdnwpeoD16K4qXd/uvGW2zXwZzx3mOcN83jTxF/STT9Xs6+Teqzq
+pv6mn5O4Yt27GtOho0yyozrS7EvVeiopMNHasxusiAoImTkS81OKhVxzHHp
tX1zSq7k6Z/hSykMevCpoLwQngNhVI9pyowsijq/jeE2rdu09a73c0w+3Xhz
v6COxV4ZxwGrj1NfX6qX/Lygz39XH1/q3Fbn0fufTgx4Dg3pS02dlUt/vrhj
0OfXoWNnmjY7z/S/H/NR9c3y+7SSY9efL5VrkWj3vmqzmywIimitXLOJUrOt
IdB+AAAAAIARefATy+RnafndOcdFafLzNOcZUOZg2z011C2u+VRT87vZjxIQ
FLEy8qWU+hVK7Yok9dhXluJLOeBLBQnXUzirRYugxmV47jbXSf85psD08zYD
+FJNSe3YF9etmZNhF3l3jeKlbHJ/nWeFLwVBTSW9L6XMGRGxUqr5Iql5Br6U
/Owt6j96fCmuGRlJfTP3n9yXdOp8mU/OPsWP4tilL3+I8buPMWN/og4dfXPg
9bp1gM+6nLuvXfuLfdblY/Pnz7w40vAYRr7PS8M/FPnu1J9zfajBQ541rMmk
96WeeuEtuq7nbT7n0fnSbjRuwiyf7T/8bLK4HvzswetecfUNQS1TePej7zXX
WN1nc40v9Xn848rrRIzZY0+/Jmp8derc1eea8XU3++/HfFR9s3z/xqbbxXs0
59i1GfhS+Tb4UhBkpk6cPElzF66S++jI6WcBAACA5gDP8YpOtlJcpjuXX5ZV
IotTPf9aojxLJVUfPESnTp0y+5ECgiJSGl9KqbGcVB7c2FeqnWLkexy+VGB+
/DmtXnOiGY6fMvu8zQC+VFOiHfuKy7R760Ea+VK55RXwpSCoiVRTU0PS3OU0
M75I3KfsHXPfrOTW5fjlFLlfTi+o7Z8Ts5yi3671pdzzRnjbSO2bv5+aImKE
uKbSO2Mm0BffRdO06PygtmUf6KsfY2nkh+MFX34fHXB9ron40bipIoZozLif
RNxVoPX9xSNxjUX2e3g/Y7+daehHKeh9KSXPH3tunEdv1OhvadL/MgKeBx9v
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
q/TNBVaJCu3u/3L/nKnqn9X5/DhmCvNGAAh1dH2zfO9yHvxcu7tv1s8ZsUsS
LVi0jA7+dsjs5gqCIko1R2poxcp1FJ2EWCkAAAAg1FFqqs9Jd1FCrkRpRe73
Z/VzdYn8vL1w+Sqqrj5g9mMGBEWc1m/cTDnyfancr/wezLFQSv0KHutSj33l
lGprWajz+WHsyxcjXyoQXC9pxMixmn3cPvABzTqcF4dz4qnX4bx/+n19+UOM
WNZYvtSQx4eJ/IK8nOd865d/9WOsd3uuQ6X1pKK858ewx+bPl+JjqOtvsQeG
WlJngmrsi2Mk5fuX45nzHBKVG/lSlVW0eNkqOnr0mNnNFQRFjHbv2UtW10Lv
fctxTwmZTp++mfNhc//Mc0e8+fw8Mc0iZirFJuaNIJcfAM0B9ZwRq6Zv1vtS
NkmiVavXirgNCIKaTtUHfiOrcz7NSkC/CgAAAIQ8YtyrhGJS7BQnvyPznOw8
+d3Zps6N7ZT/O3cBrd+4xezHDAiKOG3bvpMKy91zsr15Q+R7VaktxfmBeMyL
x74KbNp8QUo+P3XM1AzkM9BQH1+K89yNGetbe0rvCQ1+5FmfdX6YlipqNajX
43gsXtYYvtSgB5/SLOdcPeeco437ev/TibXbX9ot4PbMv+9+yO85tGt/sWZZ
uwsvphdefT8k8xY1D9xjX0xsul3MGcl3aPPsKnmCpLnzaN36TXT8+AmzmysI
ihhVHzhAlfOXee9Z7l/ZZ2JfiuOW2YfivrnU6emfVfNG1HUgkcsPgOaEas5I
upXSit19s9Wo7qOzgnb9+iudOIG+GYKaUrv37KfkLCvmYgIAAADNBKV2K+fy
43wE2WUSlTlrY6Y4X3a5/Gy9eMVasx8zICjitHfvPip3LPTeqzx+xfl/1PUr
ihzuujP8X82c7HzUsaiL+vhSbdtdRF9PnOOzj5bnttKsx/WojI7VqXNXzXqc
448/bwxf6rW3P/PZx4XtOxj6Ygzn7FMve/ej7+t1DgPvHWJ4zc5tdZ6oPTXh
pyTTf+vmRbF33sicTAely/d0gUM7Z0SpAemcv4gOHDxIJ0+dMru5gqCIEecJ
Wrh0rfeeVftS2Z4cfkWeOAr2ptijErn8AsQz/w9jaACEOO6+eYZ8v8Zm2IUv
VeB0zxlRx0vZ5L65wF5Fh+R2AnnwIajpdOzYcVq7fmsItBUAAAAACBpPLr/Y
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
Oj198/HjJ8xupiAoYrRk+RpKzrKa3kYAAAAA4DQRNdbLKDbNk8uvXKJS+b1a
Xc/CLr9L58nv0furfzP70QOCIkY1R2po6Yp14j7lsS+Oe+I52WpfSv9ObPGM
fdXmC3LXV49GjSkNwfpSr7zxsc96XG9JWT5q9Ld0XlRUnWNrLVu2EvWk9Pvn
z/QxWWqu7nGTJo9eQ/tSzBPPvh7wHLiuljpuSh0vFYyn9eLwD0z/vZsNHl+K
az6myfdvvt2dE0ybw89FFXMX0PoNm81uoiAoInX8+HHatGWnuGe5T+V5H8k5
DuFLlTi0dVrV/XO5J58f9+Gcbzcl1yVqQLpjpopF7JXpbVAT8Oa7X1KrVnX3
mwocT3U6x+F4I/V+9Plk+/S7U7P8yefeMPW6cDyX+nx43ovZvxWohfOLzMl0
ULr8Ppzv8O2beW6Yc/4C2rFjF/KLQFATie81Z9Uymp2I91sAAACgOaPk8kvI
do+FFdglsqlipjivX255Be2tPkB//PGH2Y8gEBQROnr0KC1fuVHco2LsK9lC
qXlOMaZVYuBLGeUL4nx+yTkub8wU11efHgJtjtlwnQllXIzzBp1zTktNLJMC
ey/6sa37HnxKsw7HDd3S599iH75+1LnUo2cf+mZSnN9zGf7Wp3Ruq/M027HX
dd9DT4uYqku61NZq4joZ6m0595HyHdgjevej7332r4754nXUNbIU2Dtq0/ZC
zTnw9Rlw14M0dXauqDvF3hXHi/W9/V7vds+9/C61u/Biw7FEjp0aMWqc6b91
s0LMEyml+GwnZcj3b4HBGHe5/FnVwqW0Z89es5soCIpI8TjY9p17KCa5RMQ5
8ZyPxKzAvpQybl2mi2nmmCmec6LMGwn3/pljZ8+LOt+wz+A8fv+4oge1bXeR
5nPuh07nWJw/tq/cZ3Ku2WdeGkVTZmRplnO/rT7OY08PP+PvdyZMls+P+30+
r0Hyc4ZRXw3MY7b8DJ2Q4xB9c6HT9z7n+7ty0RKqqanBuzIENZE2b9lO2fK7
bqTM6wAAAADCFSWXH8/R5vwEnMuvXOVLcQ4Snhu2buNmEcMBQVDji/OArF2/
laKTSsRY1eykMjEnm/0mHvuyGYx7efMFOdT5glyUkOnOF+TO5VcU9mNfwcCe
z4+/pIk8OT/HFARe7+c04T8FyqnD6309cQ699f7X9OZ7X9E3E+PEZ8GeC/ti
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
J4hzN1pX7UvpvTGuK6Wuu8Xcc//jPscKdD2YIY8PE/kBefnTL77ts/yrH2NN
/7sxm+mi7qNd7ptdom8uMshzX2KroKWrN5rdJEFQxOjAwcOUmm2V+0zz2wgA
AAgX+Jnwtn/d45NzWs+18jP8T7NyTD9fEJ5wLr+YFBsl5LhEHqECm29MRqmt
kpbh2RuCmkwHfjsiarq652SXUFy6jbKKAucKUtex4Pu4Npefe+yr1pcKv7Ev
AJojnCdoToaTkuX7lOeFcDyFQ3dP55e5aMOWnWY3SRAEkTtmqnL+EkpId/ep
HO/EsU8cp+yoo392e1MS5Zap4plTwzuXn/4dt1fv/vXeh95b4f+fFp0f1Lqn
40uNGj1Bs84/rrzOZ52XXhvtN07JyJcaMXKs4fkG8qX030Udz6XA8Vvsm6nX
e/uDb/zuY9CDT2m2/zkmX8Scqdd5/9OJpv/dmM0MMWfTSUmevrnYwHfmuo9r
N6C2FAQ1lfZXH6JZCUVh10+CWqbNzqNvpyQawnNGlNjoxoL7VI4L+UDuB98Z
M4He/+RH+mjcVG8NS1A/+Pfy93uaxfdTU0y/LqHGi8M/COhHqXlo6POmny8I
T5Q8QvFZ7rrreVZJjGtr8gjZJFqwfC0dPYpcBRDUFOL66vnFLjEnm8e+uL56
eoFvPKO/sS9eT53LT19ffXoItD0ARDLuPLplwpdK8eTRNcoF5qiYRzt27TG7
SYIgSNYff/xB27bvpCz5nlXHM3OMsr0OX0rpn0s83hTPG/HN5Rde80batrtI
8z57Wber6r0Pvbfy6pufBL3u6fhSRjFE7K+p0S/nfIDK9nqvqUPHzn7PN5Av
1fLcVpplPEZmtA/OMahej3P8BXs9mAvbd/Dra0Uk8j04Q8wZcYk5I9kGOe6t
8r0+b+ES2rFzt9lNEgRFhI4eO0YbNm03v30AjcKYcT/RZX+/ps54DYbz8d59
31Cf+OEz4eMvp4n+N9BxL5fPT6llCYL7TVu0ODtov6Mp4Vhzs69PKMHP5sFe
uwsv+ovp5wvCE/fYWKmoMcVjY/z8Xap7/uYx7rlLVtCBAwfNfiyBoIgQ5+za
uGkLJWbatDWmrBI5gxj7snny+blz+bkoLt0uxs/CdU42AM0N0ffK92RcpotS
5b431+YbD8nzsxcvXUH7q1HfEYJCQX/8QeJZOL9kbu3zc7pN5Oaz11Fjyjum
zbVp7O58fsk5TjHvJFxz+V157U2a91nO61fffQTjrQS7bjC+FOfSr+8YB3tD
yvaBvCY9/tblsS/9MT4fP8NwH127XalZ7+HHXqzXtftrpy7wpVTwPTgzkftm
SczXzDGYr8n5OJetXke/HTpsdpMEQRGh/dUHSKpabHr7ABoejn9u0/bCeve7
nB+XvY+GOId+uty8/uBYabOvV3Ph33c/ZLr/5I9zW53nzWcMiqh1m7ZBXzuO
0ce1A40CP3/L78Nz0mtzCRXr3q15rKxy4SLauh25hCCoKXTy5Enav7+aUnMc
7jnZ8jtyQqad8sqC86WcnvuW8/mxN8XzuZHLD4DQwR1rYaH4bInS5Hs03y6J
Odjqe5jv3/WbtohazxAEhYa4BqTNtZiivfHM5ZRRKJEtiHhm5d4W+XatEqUX
uuS+XV8DMnz65/53DvZ5p/3oi2n12kdT+1KDhzyrHfs6txV1+Vt3v7Av9PLr
H3m3bwhfivP3/+lPf9IsGzPWePztki7dNOtxvFd9rh18KS1cW4r75gS5b04v
lijP5utL5Za7aM3GreJZHYKgxtfOXb9SXrHL9PYBNDwvvPr+afsL50VF0Zff
R5/xOfTue0dQx3vu5XdNv17NhSuuvsF0/ykQnNPP7GsUCnA+Z/3zZl0gFyJo
LPgdODbVTom57vquhQbv1nZXJS1attrsxxIIighxrqBjx45RQWmVqC8lvOM0
K2UVB+dLqce+8ss5n587ZkpbxyJ8xr4AaG5w/QqOk0jMlSijVKICh7a2I9eq
ySpz0c49ezH2BUEhpsVL11BKltXjL5dSap6LLEH6Uup8u5z/Ly3fnWtX7UuF
S//82NOv+bzPXt+rb7320Zi+1CNPvOKzD32e/e5XXV+v820IX4rhXEXqZc+/
8p7P9lNn54p5v+r1uD5Wfa4dfCkVnMNP7puj5b45KU8S78RFDt+6ywWWCtq0
DTn8IKiptGnLLopLLTW/jQANzo039zsjf+Ga624+43OIdF+KnyU+/GyyeEZ4
afiH9MxLo8R3HTZitHgmOB0f4tKu3U33ngIxbsIs0697KMDxivX1pSZNzzD9
vEG4wvM97ZSQ4xJzw3iOtv4Z3OKoIGnBcrMfSyAoolQ5T1VfPblc1IsKNleQ
2092UYmn1hTnAeRx8BnxRWE39gVA84LzBJVSbJrdW1ed71OH2ldmT9lSQfuq
kT8XgkJNmzZvo/ySCm8uv4RMJ5XYJTEfJNj+WeTb9eTzS8xy+swbCYf+mccy
WrZs5fNOy7nyeI6mfv1Ro7+lzpd2o/888pz3s4b0pXr3HahZ3qffnT774Hrn
6nW4PsI3k+KC/s4N5UtxLQv1ssu7X+uTO4W9Kv21HT85IejrwcCXqsWdw8/d
N3MOkSyru7aU+r7mOnKVcxfT7j37zG6GIChitG7jDpoZb34bARoenqtyph7D
mfZbkexL8TNPq/Oi6vzuHP9en/3WVa/LTLiOmfpZKdLRz4MKBOcQMPt8QXgz
K7Gc4uT3aiWXdqnu/bmc54tVLaS9+/Zh7jYENZHWrNtIGflOb311rhVVXg9f
SnjKnlz4nM+Px85mJhSH3dgXAM0J91h2Oc3JcFCK3OdmG9SWcrgkqpy/hH47
dMTsZgiCIJ1qjtSQNHe5exxbxDPbqcDmngtSn/5ZyefHMVPRSeU+MVPTQ6C9
OlMeffIVw3db9kO4/gDHVLFP1anzZYZ+UUP6UlzrWr28VasoevyZETRsxBh6
4tnXxTqTp2dSVFRrzXqXdLlc1EVXfKGfYwpEPsIHhvyXrrj6Rk0+mIbypTiW
S3/NeOyMz+OrH2NFvr6zzz5Hs1wfiwZfqn7M8OTw45rL/D6cpastxfNF+B15
y/ZddOzYcbObIQiKCB06fJjmL15tevsAGof/z957QMdRnvv/J0AMmAM5cOAm
5E9+CbkkuZckNyEJubnckPxJv7lA8iOFhDT4p4DB2GBsuUpW7733uioradV7
2V5kufeGcS+AbblXnOc/zzszu7OjXWl2tauRVs/3nO+RLK9mV7M78868n/f7
PIHgUjiOTaXnzVzmUj977kVFfztmavDaR+l2KS81e/yFL31V8X7D60q1Xy85
tF1ePwQanCPr467DjQ4YkN07m2wOsIxuhBMnTxGXIpGmSZcuXYYh82bJmmwr
q/3jy5psvp4fXy8IM1PyPhahMvdFJs8W43hb3WSCug4b6AZ4LmWxuY+3A7b1
cPrsGI23JNIM1K1bt2DnnoOgbeVZEjKlHoMNzArr7LplprgxHWv0NrTbQzIz
hfVhHnzoYZ/mC773g2edvx9ILvXXBWFenxPXi4qPwxo2nh7z8Y/PY4/DtbbS
n6+OyXX+bqC4VGFlN9z/wEOK9xm+poSMap/2B5q4lGBWw28YqpvN3NhsZ30f
+yzu9UOQS/Wb1nFj8zlWb5tEIgVfx06cgkHjevXPEeSgOBBcCo01eP19DXOZ
S/30f3+jeB9jzTel28U1O2rwJqVOL2hUfd/PFL/xdqTi/fbmBNfgZHIgzHpM
SWoK9csyGVhfyLZuPeza8y5cv0FrxEik6RDOfW3YvAfqdHq2JlujM7E12VYf
575MmJmyYGYK+0xZoZLbVnmIzX2RybPCrE6QHmp0fO3ctiG+p6O0hp+BO8Y7
h9fBlavXaO6LRJqhOnzkOPRwYyrLWGiHoXPIxpiyL2OzuG6k1+gAXY8Dqj2s
G1H9nBUAYz2/bz/1Q8X3vdjTQPzdQHKp/PIOmH/PfR6f89777nc+Dtddf+PJ
7yl+vZhhEn83UFwKjXUNsa/7ZM+PtRJff2utz/sDTVxKMFv/pefuha3c2Mz3
lhqWjc12xwhs3LwTLl6iHDOJNF3a9+5haOk2q3+OIAfFgeJS9z/wSSiq6vHr
NRCXCjyX+vnzv1eVO03ku+ffo/p+n2nG/D/W6PO2z7DW44t/WKD66ySHvvHe
F9dva7tszh7s8kwG9rUZMI7ClStX1b5EIZHmjHbsfhd0nWZhTbYeegx2t2yF
EuN9NdbI7+bus5u6+DXZ1GeKTFbBrCanAWpbbayveqfBAQZ5hoIbfw3WTXDj
5k21Tz8kEsmLPvjwDFgcW/g8c8MQtPTaYNjsG5di19acBywOaOt3QG2Ledz4
XBpC4zOuyXzsi1+BefPuHHfPizXpvvmf32e9DqS/gz3Nxf/HTNCKtZlet6/k
sRFxBfDwI4+Oe/7vfPfH4x6L60Inynr9yycfgRde/Ktb/SDsHY7PLdbY+/J/
fMvr61XyWGR6Tz39E5bVGs+j7oQnnnzaa/8rJfvj8a8+6dwePgb3j9qfEzVc
Jqnhh2Nzu9EBJpv0HtgORtsoHD5yDK5dv6726YdEmjPasv1dqG4KnXGQ7O5A
cSk01uX15zUQlwo8l4pJKZuQc6hlrEf42z+8qvp+n4nOLWuDlZFZ7Foda1uj
Fy6JYtfleeUdqr8+8twx9ruo77RC65ADurl7ZKN8rszmgD7DOrh8mbgUiTRd
Onz0BPTrR4UeU8PQ1s/3e/N17gvvr7HPVGufA2qajSx/5T73pf45iEwOdePc
F6vh125ndXO7Te7rsXGcta7bCPsPHKYafiTSDNbly5dh++4D3Lg8BBXccY1Z
5F693edafmJmil83YvPYZ0rt81agjRwnJaeOZXMwExSTUjrhOufskhZ2v4w1
ASfbtpLH4vNjj6Zla1KZEzOrJ9wm3o9jJgrzRm8vT2D36MiLvD0enxtfQ05J
66SvV+lj8TUn59TCO6uSYcnKJLb/lPTTULI/8DFZRTpF+zdUjTX8apotrIZf
E47Nsvq6Ru66e8CyAc6dv0BjM4k0jVq/eV9IjoNk3oHkUtgbEntE+voaiEsF
nkuhi2t62fvhi//8t7cVv55///ITPm+/oLJL9X1OJpMndgV3Ta5ptYCOux7v
NDlgUMhZODMX3PX5kGUEjhw7DteuXVP7MoVEmhO6ePESd02+Gyq1Q8wN7Tbo
N8pqiyjMTGFNks4hB2g7rB76TKl/DiKTQ9qsht8w1LRYob6T76veK8tX6C0O
cGzaCVeuXKEafiTSDNfJU6eho9fC1xxoNEBrnxX0fqwbwflvrLWL60awXi+/
biR0uRSZPKOMmcdGVw0/7C01KDBj15qREbCu3wY3bxKTIpGmS6fPnOWuizer
f44gB82B5FJozDD7+hqISwWHS/njfyxcpfj1TJRHJ5PJs9d471vTbGY9pjqM
DuiXcSkbq2HggK07dsP5CxfVvlQhkeaMDh4+Dq3dQi2/JiPrY2H0sY+FmJnq
Mwl9LJqMNPdFJk+n6/g6QbWtdtB2O1hvqSHZcWy2rYOtu/arfcohkUgKdP78
RVi/eQcbP3E8bey0Qr/B97EZ57/1nHHdSH2bBaq0odlnikyeiWa1OHFsxhp+
eA887F4zBI/PkfUbYN+7BykrRSJNo/btPwjtfTbVzxHk4DnQXArr206UZ/Zk
4lLEpchk8gyyMGfGerHrHdBnc7C69/I1ndaRjXDm7Jjalyok0pzR6TNjYFu3
lR2nOPfV3GOFYZPvc1/ImQetDmgfwD4W49dk09wXmRxEY/8KoYZfU68DugwO
MMnmvjZs3gJHjp5Q+5RDIpEU6Nq163Dw0DFnTVwcV7sHbT7nmdm6Ec69Blw3
YoOaZhMbm93GZ7XPX2RyiLqcuxaubjazGn5YXxfHZmlWymDh/r1hK5zhrsVv
3aIcM4k0XVq/aRc0tBpUP0eQg+dAcyn0z5570afXoCaXyq/ohLdXJMIfXl4E
z//qz/D9Hz0PT3zru/D1bz4FTz/zP/Dz53/P+iEhr0nNrQ/48xOX4o21pPPL
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
4AicPnuO5r5IJJJHnT6DPd63Qk3TMMs067qsYJxiPT8cn4edvSCtoGk2Ocdn
YlPkkDV+liVjM/aVwvUi2m4+K9XJXfe2GxzQ0meHdw8ehytXqd8jiTTTtGP3
u9x9qicu5YFJjbvfpB5Ts9XB5FJZRTqYN++uaeVSL7z4V8Xb++yjX2QZKzX3
///+4iXFr3fp6pSgv55Q4lJ/eHmR4ufIK+/wadvEpYhLzR27uFR1o4ld22NN
7kHuntc67l7YASb7ejh/4ZLalzQkEkmmU6c+hH7DBr4mZ7MR2nptYLFNfe6L
77PugMZO7LNunIBN0dwXOVQ86FqP3YDrsQ1Q22qDxh5+zotnUnZo6x+FQ4ep
5yKJRPKumzdvwrsHj0DPoIONnVibAOv5mac4Ppvtrl6QOD7jdp1sisZncija
OWeN9fv0UN1shroOfr0Ijs3Y91HX54B1m3bBhYu0hpJEmonatHUvNLToxx3f
E3Gp8voBYlOz3MHkUuhf//7v08qlfJmTR+Mcu5r7/1e/+5vi1/r9Hz0f9NcT
SlzqpT8vVPwcaflaxdt9bVE43HbbbcSliEvNEbu4FK4Hb+i0QQd3XT/A3e9a
5HPUNjsMW9bBufMX1b6kIZFIMuHc1669B6G91w5VWuxlYYEBox2sU+01Zed7
WbT326Gh3cr6txObIoe03ea+DKBhvSsc0DLIHQdGB7QNOaAb+6lvfxeuXr3G
+siQSCSSN124cBG27doPzR18Pb/GThyfbVMen02cB3B8HsTclJ2xqSpiU+QQ
tbPfY4NYv8/O6nzgmIx5qdaBEeg3boT3PzjNrolJJNLM07qNu7h7ySH3Y7t2
Mi7lITNFY9qscrC5FOZQsJfTdHGpwspun57vrrvmw2tvrpnSPkzJqYOX/7EU
nn7mf+Cnz/4Wiqp6FP/uH19ZrPi1fnzePIiIL/C4Hcym+Zr58eRQ4lK+/C1K
PwP4uI997GOKt0tcirjU7LfQY4ob23H+rb7Tyvq4e+NSvdz/jZ27oPYlDYlE
8qCzY2MwunEHaJr0jB+19FpgyDQ1NiX2We8TelkQmyKHtCX3xNi7orrJxOr3
sbkvPT/31TYwArb1O+Hc+fNARIpEIinR2Lnz3Pi8Haoa8bzCjc99Fhi2TI1L
OdkU5qaGBDbVbJqATc2AcyyZ7Iedc9WS+n24XkTXz9fUbeG+9hk3wN79B1lt
axKJNDNlGdnBekbJj++JmJTnzJT65yWycgebS6H/9Le3p41Lof/vb1/xedtf
+8Z/QWpuvaLtY+2/qKRiVifuC//2tXGcArmA0n2zcEmUT6/zjjs+Ds//+i/s
95asSIQX/7AAPv/Y4+z/5t9zn09MzJNDiUv58hx3z78H0gsavW4L9+vPnnvR
588VcSniUrPfLi6Fc3C1bRa27qzf5mA1QuRcCnMTY5SXIpFmpK5fvw4HDx2D
3qERqOTu3XHuq7XPCvoAzH0ZbA7GptoHHNDQNjGbKiU2RZ6NFu91xbkvzErh
3Fc3P/eFTAprBA1ZNsGBg0fVPtxJJNIsEuY3Tp78ADr7LNz4ib2mDNDWbwHD
FMdmVtOPuz4fsGJNP6y5a4caSb8p9/F5gObyyLPOznG5fohlpcT1Ik29rnG5
tW8ERjftVvswJ5FIk8js2OH5GJeuC2sYdK6r8JyZorFstnk6uBTO6T/w4Kem
jUshX7jt9tt93j4yn88++iV46umfwAu/+yssWBwBby6NgZdfXcrqESJj+Po3
n4J5d07cM+uVV5cp3jeJWTVT3i9SIy+byuchlLgU1ubzJdt0z72fgL+/sRIK
q7qd28iv6IS/LgiDT336s369H8SliEvNfru4VDl3ra9pNbN1Z302B1uDKc9N
YC37D06fobVoJNIM1Y0bN+Dw0ZNQr8PMlJ71hOrot47jzL7aytiUUNNvwMHq
BHpjU8SlyLPOUiaFc1/c57qm2Qz1HXZo7uOzUvi1udsGu/cTkyKRSL4J631i
LzpkU40dFjZ21raY2Pg8VS41nk3ZJmBTlGtG51d0sVo0onPL2iG9sJlzE3Nq
nhaSc+qc/0ZnFbe4/Y7afczngt2Z1JCz36NWWC+C43J9hw0sIzvh7Ng5tQ9z
Eok0gW7e/AiMtm2ej3M5l2qYhEvNgPMTWbmng0uhsSfPVJmLUi6FRh4QSN7j
i7E2n9LXidcrd951d8Cee+nqlCm9T6HEpdCP/uvjPu9DZFn33f8gsy9cy5OJ
SxGXmv2WcCnumr+Gu0duGeC5lFFgUVIuNWS1w+Gjx+HqtWtqX9qQSCQPwrmv
q9euw5Gjp6C+lZ+Xqm81Q/eAbcrzXlaxpp/ZAW39di9saoDmvSTG+tM5JW1u
xrmvlLwG3rkNEJteDUnZdc6fpeZrnY+dak6ePLnd74eHWFaKrcfG3hU90rkv
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
7h/MCOF74iuTCfS+CPa+xTkorBvJts99PsTt4z7AYyuY7x15uu0a57G/Rh1y
qWGeS5k93N8Om9fB0RPvq31pQyKRfBDOfY2du8B6WdQ0GVgf9OYuC/QPB5ZN
DVgc0MmdP5q7cV22ha3/VmPuK6OwBeIy6mFNYg2sjKuCt8OLYOEKWX8ogUGx
unsig1rDM6i31pbDkqhKWBpTBWHc769IqIKVnJEXIUMSOVNkRg3EcNcEsdmc
c2ogLpcz9mPnvibkuRwvfs11OU7qHH470Zn81yjua1QGv33kWsiuRI6F3GpV
Ug33mjjH87mrpYxTVTk51VsRFYxVsVyVwKvEmoB8LUCxj5X3+n+vheXCotUF
sDQS+1NVQkx6LaTkNUJ2Seus73Mh1u/DMY/V72uzszXZjEnpLNxneRscOXYK
rl2/rvahSyKRQlwfffQRnHr/QzBaN0NDq4lnU+0W6NPzfV0DMT7j9fww1t3V
O6Cll89NTcf4jGs+s4p13JjcCCk51RCTUghrGYdK9chbXCwq1UMOSuRP0uyT
lD+JrAldMoFLZZ7osaKLJRaZlcuemVUueM5VeclUxaV4Z1ReWFV4dCrrSxWd
lAfJ2VWQye1n3N+5Ze2zsB6vsF6kYYjVlWfrRXBs5sZlTYsNugbXw849B+HS
ZeopRSLNRplsm0DTNCy5FpdyqSGBSRGXIpPJZDJ57tmdS9ULXKrfC5cyWNfB
McpLkUizTjdvfgSHjxyHfsN6qGsx8myq0wpDBu7YDsDcF1uXbefXZXcN8zWD
6lqDz6aQkeBaivSCFkjKaYKY9HpYFVfBmMq42nWsF1QByxAhp8FeTosjymBJ
ZAXLQYXF8fkkzCqtERjU2jQXL0J+lJBbA4l5NZCUz39NLqiBFM6phS6nFeL6
Zd5pMqfKnFLIb0PcXmK+O8PC50TuFZPtYlfO7JXAqFYifxM41XJWE7CaZ1VY
VzCSrwPIONWaMiFPJdb+kzCqML5flqdeVZinWrgyH5ZFFsOahEqIz9JCWr4O
ckrbWT8q9ccx38c8nPvC+n0434XzXmz+C/tWDK8nJkUikaZdJ0++D3oLztvp
GZtqaLfAoDEwbAqNNRCwd2yv0QGtfQ7Wz6paNj4HItuMPATXT+aXt0FqXi1E
JRZCRGyml7p8Mhbl1gdKnoOSM6giDwxKzpyCZfF5i8ETs3LnVPI8lZRTTVT3
T9qjSknNP+xJlcHt73yITy+H7OJm7j1oZ+tVZ/5akkFmzDBj7Y4aISuF4zLm
pJq77LBr70G4fPmK2ocpiUTyUwPc/WeV1nXfxzOpARmXGiYuRSaTyWTyXDOO
7yKX0uqhts0GbUMO6LN65lJDlhE4epLyUiTSbNXBQ0cZm9I0472/ERo7rKA3
2cEWoLkvs91VMwjnvmpbTOPYVCB6WvA8qgvSC1shNr0OwqKK4Y3luYyhSHso
MRYVVgCvI4taVQyL1pQyToPMBrNGyHNWJ/E5JMwmRQv5J5Z7EjhUUkENJEuY
UwbnTMFZnLMlzpnA2cLjxd/Lkvw7Q3C68DzJAq9CJwpOkDArzGfha42U5Kn4
GoA1sErkVAl87yrsd8Xq/kVW8VmqcKHun8ioxJp/Yo+qMAmf8pCnWhCWC0si
CiEyuQpS85ohq6Qd8so7Z8Xcl7N+X6OBZaNw7ouf/7JBe98IHDh4GK5dIyZF
IpGmX4ePHme55gpujMRxs77NAsPGwIzNYnaK9YQ0OaCt38G2P1lPSFzTruT8
inVGsJ5ITlkbX9MD6+15qUPnlomK95aJyhc4lJw/TRd78tcir/LGqORZKi98
Kl7MUHmo9yfmqbzV+mNZqjRYyz1PfEYly1AhL8T3SP1x2PvYjEyKXy9i5cZl
G/uKdaG3bt8LFy5eUvvwJJFIU1Df8ChUNsi5lDwvxXOpSuJSZDKZTCbPHUu4
VAV3HVDbapkwLzVodsARquNHIs1q8bmpUXbtz2oGdfJsKlBzX9gXY1iyLtvb
3Jev9xls3ovNffVBTkkbrE2qhEWr8j30S8pjOSBkUVjD7i3MREVVwdLoalgW
y+eKMGeELAfr5SGHYrX38msgScgwpQqMKEPCkSZiToGyyLekvEqau0oRmBW+
Tny9IqOKynT1s4qQ1fxDRrWc+5uXxWhcfanWVroY1Wqh1t8qT4zKe60/Z5Zq
RS6sii2BLO49wfdmZs59uTMpMSuFRj7V2uuA7Tv3sppaJBKJpIYw13zk2EkY
5MZnHB8xz4T9plhNvwCzKRyf2wfs0Nxlg7pWKxuj5eMzrmVXMkYj94hLK4Oo
hGyIjEuHiJhUCJdyE7FflJNFpclYlFiXT2RRYiZqNnCoyfjUZIzKE5/yVOdP
yqnk9f6SvdT5S2bvxVruPcFafyk5dW79tNW3mJNyMakaZFHCuKxtt4F93RY4
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
ToPLOUvNpmg7zCvtQO+67Th+op/ZFIvFmrYiJnX+/Ec4uH8nekxVsHTkujIp
YgLdBYJJWc0GWC1FsNpKYDSVoqY2EzG6RARGxkvn0QSsCEtEQJQOsakZ0GVl
IKsgA4aiDA89o1T5KE88yo1FuThfdqHkfMm5kjPzZEaVkqlHUqoecXo5OxUW
LbOpgNBokZ2i2n6Un5Lt5FRKLTnNec908lBcys6kVgaFITg8HGmpUWis1rtu
e+LfdjbVaedS3YoN6Oupw4njh3H58iVmUyzWDNGQXEqVlSIuNYhNudXyYy7F
ZrPZbPY0swcuVdpoQ4PZhi43JkXusNiw6929OHHypNaXOCwWawJE9/apl1Tf
+u2Djh9OJtUu6iwoz7uR6eexaTVYFV2MpeEFwkvC6CvxqWIEJ5QgLJE4lGwX
FkW1+uK88CjJ7izKxcHpWCZ5qeQlkhdJXiB5flA65hGfWpWON1fI2SmqN+io
67dAVUvOnVOpeYvW3GeKe1g25aj/p8er1EdK+qxWhuchXtqWMgrUc1HneYtq
0AouRXNWyfllnbCu2YpT/adx+coVrXchFovFGnOd7j8lekn1dBUOyaQspkIH
k7LayiVXwGypRHNLMfINqYhMSMCykFgsD42z56d0iNKnIS0nHQZ3DlXs2jtK
rtWX7JlH5Q9t4lN5kqm+X3qODsmZztxUZJxesKmQSHvfqdBorA6JEoxqVXCk
4FRylkrmVC79jihLpTXbmQ72wKWISdHXxIRwVJXpYWzLhlnNohxsSp3ZU7Mp
aVs0FqHXWoNjRz/A5cuXtd6NWCzWBMgbl1LX8CMeVVhpduFSgk0xl2Kz2Ww2
e3rbjUvlDMOl2qSf79m3H2fOntX6EofFYk2Ajhw5hm7LBpGHUo4bGQU0p2hx
MKkcFZOiOYWhyoqiaitKai3IK+9CfEYtVkYViZp+5AXB+VgYIjOq1TGGQSzK
U70+pVbfYBaVLliUwqPcTXxqseSFdjY1V5WbemNpOl5fkobXFqUKNvXKAjuf
WqD32PdoUAZoEnCeKWtvfMrOpSgjtSw0B8k5jUjLb0Z6fosbl3I7hwk2RVyq
Q7iwohtN7b3Ysm0X56ZYLNa0kmBSW61YYxrcS0pwAPeclJWYVJlgUlZbleRq
mMyV6OgsRV19PrLyUxESFY1lITFYHhqL1ZHxCItLQmxyMlKzU5FXlAqDIxuV
4ugdJfMovU8cakg2ladDWo5c0y8hRY/oRD2i4uWafqLnVHgcAsNiBJ9SGJXC
qVYGR2JFUIRLrb/lqlp/Ltaa9UxZy+s1OCxM+tyS0FiTiu4WVd0+T0xqUD1J
mUtZjAbpaxE29LVg9871OHniqNa7E4vFGmd54lLyM41KDT8nlyqkzJT9GUfm
Umw2m81mzwCruZSBuFSn4FJUx88Tl2ox27B73wHmUizWDNDhw0fRad6A/LIO
xzFD1E5T5aQ8ManiGitK62wok1xSaxVzjbSCNkTqqrAwKB9zV+fiHclzA/Kw
ICgPS0LzsDwiD6sFh5JZVEBkNlZHOHtHOZmUdwblzWo2NS9Qrun3lopNzVaz
KcULVJzKjU8p9lqzTmvmM4X8srq+3/wkvLpQh4WBWQhPLEVSVp20vcnbHDGp
jOHOYwY5M5Vd3CHOZcSm6lts2LbjXZw/P6D17sRisVijEjH2M6f7sWubDWvM
JW73//Nc+kmpa/fJTIqyUpVuroDJXIqWtkIUl2cgKS0BQVFR0vk2Sjr3xkjn
4ThExCeKHFNGdjLy8pNhcK/XNwIe5c6mlJp+adk66NL1iE+Wc1NU0y8iVofQ
qEQER8SJ7JTTxKliRB8qudafPT+l5lMqO7JU3JfKL68ICEFIWCh0uiiUFenQ
2ZQBc3u2dw7lI5uyGouxxlaHndv7cOoksykWazrrw0OHUVJtcly3q7lUXmm3
ag5pGZSZYi7FZrPZbPY0tzuXKu1EWZP3vFSz0Ybdew/gzBnmUizWdNWlS5ex
+72DaDeuQ0F5p+N4IffzaUWWfT7hZFLdjvkEMamSWpuL6Wf0/8QNopOrsSqq
CPNW5+LN5VmSM/HWiiy8syoLC4OysTQ0CyvCPfEoO5MaAZdapq7pF2RnU6tU
bMreb+q1xal4bVGKqO336kLZTk7lmU15MvMpP23nUu+sSMPqqEJpG6mU+0iN
4Fwm1/Oj+WunYFMF0rZZ3WTFth17cfajc1rvWiwWizUiXbl8GadOHMXu7WvQ
S5mTQTmpPGf9PpfafaWO+n1Ol6tcJn7HZC5CbV06MnMTEZMUi8CIKOlcG4mV
IdEIiowT9f4SU5OQlpmE7Gwd8nJlpjRaLmWQXCA5J1/pNSWzKcpNyWyK6vpR
z6kEUdeP+k4Rowoih6v5lL3Gn9KDyt0BEaIOnbDXHkrac6DJ4GUuPCoa+Tlx
qKvQ+ceihmJTtP0SmzIVo9dWix3benG6/6TomcZisaaf+vtPo6zW7Lhmd3Ap
Rw0/ozSHNKOo2iK+Mpdis9lsNnsG2U8u1SryUvuZS7FY01QDFy7ivX0foLrR
JM0BnNf+CpMScwm3XrU0fyAmRbX7iEEppu+Fq6zi/+n36O+SMusRHF+GJaH5
eGdllujz9PriVMxZJvOi+QHpWBiYgcVBGYInLR0Bh/KUmVKzqbn2XlOipt+K
dPHas5W6foJPyX7Vzqlc6vz5wKeYTfnmV6X1+dZy6XMJykFofAl02fWjPp+p
2ZTi2uYebNnxHk6f+UjrXYzFYrH80sdXruDk8cPYutHs+V6/O5MyU+2+Yres
lJpDldl5Van8O1Tnz1okWFZHRy4qKvRITotBaFQUAkLDsSKIHCn4T1h0PGKS
EqBL0yEzW4fcHB0KiFHljY5N5dvr+VGvqdQsuaYf5bTi9Oq6fokiO0W1/UIi
EwSjUvMpOTul7j3larnWX4Q9P+Wl1p+93t9Mrfm3PCAUQaFhiIuPRG5WFFpq
U0bHozxtr47MVJFwj6UcWzf34KOzp7nuLos1DUX3jcrrhuJSznmkMl9kLsVm
s9ls9gyxikvRNUJuWScqWmxo9MalTDbs/+AQrlzheQOLNd108eIlwaRqmswu
xwk1k8pSmBTVXlD1qXUwKBWHUuoxiFrh9jmGMs/INLQhIb0GAdEGvL0iE68v
JvajF+zntUXJmL00FW+uSBP8aGFgOhYHpWNJ0OgYlUuvKWnMeQFyTT8Hm1L1
nJJZmRujEhkqO59S2JQn+1Lrb4Yzq39K64k+84WB2QhLKIEuq17uIzUG57QM
FZvKKekSJjZVUW/Cuo07cebsea13NRaLxfJJn3zyCU4cP4ItG00+MimDzKSs
6qyUmkMpLKrYbplH0d/R31MNQBqruz0HtZXJSEsNx8rAUEc9PMoiUd084kFU
Zy9Wp4Mujer8yXzKMNp6fvbclMKmktLkun4xScSm9KKuH/WdCosmJ7rwKarv
p/SfWhkU6eYIL3xqaGvNiSYsI2VncqERYcjPiYS5fYxYlEc2lS/YlOBSJjIx
qhJpG5fZFG3zLBZr+mgoLqWu4adwqcJKk8hQCS5VylyKzWaz2exp7UFcqgvl
Q3ApquN38BDXAWexppuufvIJ9uw9gOomk8sxwp1JufapNQ56xq2w0lkb3MGi
pHkFWZ5fdLk8+0bjx6dVYf6qDJGdkXsNyXyH2I/IUS2Xa+7NXZ2OhUFy7mk0
bEpkppSafgHyuG9TXT8Vm6K6ftR3SmFUCp9SavwpbMqT3RnVkGxqpnEqe82+
N5emICSu2P96fT44YxCb6rbzqU4xv23uXIurV/m+F4vFmvw69MF+bFrXBltX
4dBMSvSUstfvc2Sl7AxKMf3cYudQFoOTRTl4lMykaEyz9Bqmtmx0NKajplyP
rPRIhIaH2vmFXBuPsknEgUKj4gWjSkrRIy1Lh9w8mTMZhnGhm/PtbCqb2JS9
31RyppNNUV0/hU0Jx+gQHp0kMlQyn4pDYHisqq6f2k5G5eBTgeE+samZ0Jcq
NiYUJYUJaGvIQFdz5vgwKU9sipgU5fsk2yxl2LZ1Dfr7T2i927FYrDGUmktR
39hM0dO8A3nSnLCg3CTmjkrNjcFciuaNrlyKxtD8HhqbzWaz2eyxsZpLSef6
3PIulDfLXKrbA5dq7LLhwIfMpVis6aZNW/eIPEl2kefafe5MSp2VUixYlCoT
JUzzCTuLUvMox/zC0CJyMpSXCY4twoLVmXh9kd7BahQ+RTkl4kTUD0rU+guU
s09Lh6jzt9SDl9gzU4vsuSml35SDTal7Tjn4VLoLn3KwqYX2un7ududTvmSn
ZgCbemWBDu+sSEdkUjkSMmqRkts4ruc25byWbWdTuaXy/Lakxow167aImpUs
Fos1GXX1449xcP9ubOxrga27aFgm5ZqVKnZmppR/2zNRwibDYBYleJTMpBw9
q+yvaWzNREtdKiqKdchMj0FUdKjoxST4VEC4yCIRnwqJjEVkfCISk3WCT1GG
KitHhzx7D6l8N+fZOZTiHDuTylLlptRsyrXnlGxnfkqVnQqPs7MpOTulmNiU
k09FuLApT3bnUtONTa0KCkViQhhKDHrUVyWjsyljfHmUJzZllLdHq6VYsKle
WzV2bl+DUyePab0LslisMdK5c+dUXIrmlHYuparhp/QnJj4lzymNLs8zKvPG
TEMLZ6bYbDabzZ5OduNSeeXOvJRnLmVlLsViTSNRLf/N2/agssE8LJNSekqp
s1KyjY5clGMO4YVFOecVrY5ci/KaxKZiU6sQkVSGlZEFeGt5qsjW/MOeoSLm
Q3yK6r/NWZYm6u/NWy0zKiVHtdjuJcGu37tb4VIubMpDz6lBfEqdnVro7Dvl
tCufGlzfL2mQpzubem2hXu4flVCKmJTK8eVRbpbnv22ijl8Ocaky2lZNKJPm
x+s37cQZ7jfFYrEmmS5duogP39+LdT0NsHZ6yUl1ujEpyj8pWSkPNfpc6vQZ
3VgUjeUYN9crSzC1Zol+Q2WGBKSmxiI6JgwBwSGiJ5Fc40/OT4VExCIijvpQ
JSI+WQd9ug6pGXqkZeqQnq1DZq7debKJP3my0msqJdNZ08/BphJlPkX5qcg4
OTsVJrJT1HtKZlPUc4qWR67tF+2RT8nZKbk+4fB8KnzKs6kVASEIDgtFUmIU
CnITUV2WJD7XCeNRLmwqT97+iE2ZiZ2WiK+9PbXYuaMPp04d13pXZLFYY6TK
RpvLdbnCpajWO7GoklorSutscmaq0t5jirkUmz2jHBydjb/84x08+T9/wYO/
ehw/e+g3eOyp5/HcX2ZjVViq5svHZrPHyYO4VLfoL9XkhUu1Sj8/ePiI1pc2
LBZrDDQwcBHbd+1Dea3RRyblzEopvaIG1egrdbIoJ49qc7AoYTce5e7UvGYk
ZtYiLLEUy8PzMU9kqJKdfGq+XvCg1xaniD5Uc5anOer8kak23wI7qyLmRF8V
/qR8v0Dl+WoutVpmU2+pe04ts9f2W+qWnVrkmp3yyKfc6/vN8+xpx6bmyfmo
+QFZWB1ViJhk4lFNmpzn5DmwtB2WdAkulVdulr6aUFFvwcYte9B/+qzWuyKL
xWIJXb50CUcPH0SfrR5Wum/vwqSG6CnlzqQsbn2j3JkU/X1XvpNFuWWkhjLV
92uvT0OZIQ5pKVGIiYlAcFgYVgWG2DNUEYL5UGaJauuFRccjIjYRUQlJSEjR
ISlNB126XrAmykIRd/Js6f8z5N+j309MlblUnN4Tm9K71fWLl+v6hcXa+ZSS
n4pW1fhzresns6kINw9mU1qzJX+9bFWo4FFBoaFITIxCXlYM6iv12rAoL2xK
9Jqy2DN+lhLBprZvW4OzZ/tx9Sr3NGaxprrcuRTNFfPL5N5SxdUWlNq5lDoz
RfPMwVxq6Dkkm+3NVJ9lTHoZs8fls/n5Lx/DNddcg//3//6fV3/vBz+FPrtO
8+Vls9ljbBWXypLO9/mVpiG5VLu5B+8zl2KxprwGzl/ArncPoqSqU3Ai5Zjg
6M1jkOssOJiUqn5ffplbrb6yLpe+UWomRXMIGkedj8rw4xilz25AZFIZlofl
4e0V6Zi9mPo6OXmOg1EtSsHrS1Ixe2mayFIRVxKMScWqHA6095VS/Wyuvc+U
yEvZuRT1m6KafsSmlOzUG+5syj07tXCM2JTWXGkEpuzXa4v0eEtaXwsDc7Ak
JAdR+ooJzUd5trTNGeRzHNXzyys3OdlUgwWbt72Lc+cHtN4lWSzWDBfll48d
+RAb+jo81DxTcSkVk3LhUhbXfNSgjJSaSXW6MakRcoXOxnTUlichNysKcbFh
CAwNx6qgMAfLkbmOzKmCwmMQGhmP8JhEkXEiRyfqEKfXCd5E3IkyUYlp8r/V
pv9XekzFJNmZlDuXirXX9XPrORUU7mRT7vX9iE85+k6J2n6e2FSEx9zUZK7t
t2x1CFYEhGJ1cBiCw8JFti0nIwJt9WnasygX57rmpohL2cqkr6XosVVi6+Ze
nPvoDLMpFmuKq76lF1kGNy4lzSUNgktZUVprQ1mdzZmZqpIzU+K5RzG/ZC7F
Ht5h8fl48eW5ePjRp/HDHz+Ee791H+784t246aabBfP41Kc+hVnX34Dbbr8D
d3/lXnz7ez/CAz99BH947h9YvCoeyTn1mr+HmeiXZy8Zkkep/cxzf9d8edls
9hhbzaWK2pFfYURFK3MpFms66/LlK9i15wBKq7pcjgcOJmXnUpRzonmAUo8v
z86lXFjUoIxUu7D6uTZPNfv8dXJOI6KTK7AyIg9vLaesEvV2cuU5oheVqPWX
gtcXp4p+VG/YeRLxJWJNVKPv7VVebP9/waMUJrVMxaS85aZUPadeHcSmkoft
OzVkbmqycypp2YgTvrpQjzeXpWJJSDYidWXan9vcLLY/B5vqks51FmHKT9U2
92Lbjvdw6fJlrXdNFos1g3Xi+FFs3WiS79N75FIeekpRbx6zmkUVOvNRLj2k
1Ewqb0yYlGJze7bIUHU3Z6KpOhkp+nAEhoS4ZXbC7LX+wh1ZKuJFxI6oP1SU
YFTOLJTCn8jK9wqLUjiUwqLCY3SCR5HDXJhUPILsXMqdTalr+7lkp+x9p7xl
p1zZ1OSt67cqKBjxcaEoyotBS20qTK3yZ2TWnEMNwaa6C+V6ftYyWG3l4qvN
UiLY1Nkz/VrvniwWaxRq6+6Trr/leSDNC2n+qO4tRTyqrF72oMyUoyY8cym2
q+nZx7cXheHXj/0B/3LHF31mG9587bWfFizrd8/+H6J0RZq/v5nir937HZ8/
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
5FSv0eePHdt/Ubvca6rCjKI6mU0Zaq0ok+bEljXbtN6FWSzWNNPhD/di09pW
WDvd6/epuVSeikt5YFEeM1JTj0l5s0kwqgy01aehqSYFNRXJKCpIRFF+IrIz
opGYEI6IyGAEh8omtqNFzyd/+VNAcDDCwoORGB+GrIwolBp0qCqn95eC+qpk
tEjvlUwsSuvPQFsu5eSyVjOxKarnVyu5XnwlNvXuu1tx7txZrXdnFovlg3bt
fg+VDWZx/U1zSKrHQVyquMYislHEpYhJVbe41/KzwFCl4lLcY2pG+fv3/1xz
BuXNVFeQ7itovY7G0xPFpci/e/b/RI2+oVjgs8+/ovk6YbPZY2x7vS3lvnRu
WTdKpWuCBrMNnUo+yqW3lBXbduzC6TM8B2CxpoL2vHcQDa29yC52vXZXcymZ
SbXamZRs975RwgZvTGoSHMtGYbqeTM5pQGJmLWLTqhCTUoXwxDKsiiwQtf+W
BGfjnRVpmLM0Ba8vkmv6acGT/KnJ9+oCnfDclelYGJCJJSFUk8+AKF0lovWV
iEmtQnx6NZIy6wSP0voz0PIc6N5rirJSxKWKpflwUZ0V1c1rsH3He7h8+YrW
uzOLxZoGOn/+HHZsNsPaWejhnrw3LuXF3ur2TXEm5cmUFepuzhCsqqU2BbXl
OpQXJaKkUHZBbiKys+KRlhoLnS4K8fERCI8IRVCIzIJWBwWLXk3j0wcqBKsC
g8XrhISFICIyFFHRoYiOCUNCQoRYHlo2WkZDfiJKDYmokZaf3oexdQbzJ1/Z
lOg1VSLNRSkzVSe5QeSm+vo68MEH+3Dx4gWtd2sWizWMjh47hsb2NfZ5qJpL
WQWXUrJSNa2ee0wRl8pjLjWj/NLL80bFjShn9evH/oA/vTQHr7+9CgtXxmHu
kgi8PHsJ/vjCa7jvBz/FNddeO6rXeOa5v2u+nsbTE8mlyIkZVVgkfU6Un3rh
r28K02dHfa6SMms0Xx9sNnscrOJSSl6qrEnOS3niUp0WK97du1+aUw9ofWnD
YrGGENXcP3LkOFq6+pBTPPi6fXBWqtUzi5rmTMqbKTOUlFmLuLQqUfePatuF
JZQiJK4Eq6MNWB6ej+Vh+VgQmIUFAVl4Z0W6qIX32iK5Z5VL36ox9Cv2unvU
C2r24mS8uSxVvDaZ+kHRcgXEFCMoVnZkUjmikivEe9Bl12u+XielXdhUB/LK
TSissYjsMLlUmhfXt67B3n0f4MKFi1rv2iwWa4qKzstXrlzBgX3bsM5W7eV+
vBuT6vSVR6l7SU0/JuWrjS2ZaK1LRUOVDlWliSjMjUVOVjSyMqKRmR6NlJRY
6PRxDicmxSI+IdrhmNhIRMdECEdJjogMd3xPjomLdPn9pCR5PL3ktNQY8Tr5
OTEoyo9FaWEcyg1xqJaWo7FaJ5ZN6/Uz5azuNWU0wGoplXtM2RolNws+tXVr
D44e/ZB7QbJYk1w+cakWG2rbZD5F+Sk1lyqoMCKvjLnUTHFQdBauu27WiFjR
937wU8GffMkyJaRV4u+vLsTNt9w6otf69KevE7UGtV5f4+WJ5lJsNnsG2i0v
lVfejXLpOqDBYkO3h95SLWYb3j90GBcvXdL60obFYnkR9VI/d+48TLaNKCzv
9Ljvq5mUuobfUDX7BjEprY9fGpmYlT67HrqsesF8ovTlCEsoQUB0IVZG5GNZ
aK7w4uBcLArKxcLAHMwPyHbxvNVZeGdlhvBby4krZTi+V0y/o/z+AsmLgnOw
1D72ivB8rI4qQHBskXhtcrS0LHpmTyOzg021iV5TVM+vuN4qntOgDHFRrRUd
pnU4dPiYuK/MYrFY/urjj6/gxPHDWGutGOY+vIeslEcONb3q9mnhbnv2SnFt
eSKqSuKFK4riYMiNQmVxnONndeVJLr/PrGkC7KjnR5mpIlhtSj2/VslNIj+1
Y0cvTp8+pfUuzmKxhtDp02fQ0rVOXHer+0sRd6JsFHEpquFX1+6s5Ue8ysml
TMgr65b+rkPU9qD+xprPH9jj5n///o/9ZkTEsf76yvwRvV58WgV+8uCvR8Sm
nv3T9K0tx1yKzWaPu124VBvyK7pR2WZDo9UGozuXsljRZLLhg8NHcPnyZa0v
bVgslhdduHgRu/fsQ4EXJkX2xqU8cajMQtc+Uvx8mn8mjpWYUeviOMpg6cqE
Q+KKRI8n5XvFVGdP+X1iYFq/j2lv+7adVdSO3DIjCqotKGmQ5srS3LhMzI2t
WLdpF06c6hfsl8VisfzRwMBHWGNt8NBTSnHuYC7lC4tiHsWe1lbX8yuE1VwM
q43q+bVI89M2kZmyWauxfatN612cxWINoUuXLqHTvElcc4s6PR64FNXwIy6l
ruVXUmtFkQuX6hT9j2mOqvncgT0uDonJwac+9Sm/2BD1HgqIyBj1az/+9At+
c6nP3vq5adufmbkUm80ed6u4FN2TLqg0oqrNhiYPXMpssaKhy4ajx09yrQQW
axKrv/8sahqNIu/kab9X8yWPHGpQrT7mUewZYvszGtnFHYJNUT0/YlL0vAbl
p0rrLdi07V0MDHAtWxaL5bvOfXQGu3asszMpLxyp0xuX8sShmEWxZ5Kd9fys
xiJpXlom+ksJLiXcgDVrmvDunq0il8hisSanTD1bHc87EluinlHuXKq+w5mZ
Umr5FVVbUVhhRj5zqRlhf1gI+ZprrsHCFbFj8tpU+++HP37Ibzb1xrxAv18r
JacBuswapOb5znPob95aGIrnX3wDv33iOfzoJw+LbNnPHvotnvifv+Avf39b
9GLS4rMYay6lz66DLqvWp3qMo3W0vkT0tKL1+qS0Hn/5yFO4/4Ff4Lv3PYAH
pHX88KNP48lnXpT+f7ZY/9QHazyXZyTbBv3+7LkB+OMLr+Lh3zwt+qfdd//P
8NDDT4j39OI/5iIioXDc1yV9XoGRGfjbqwvx2FPPi9e/X9qnvnvfj8RXWrfE
f6l/3MrQFL/eI3u62sml6PxeUGUS99+arVaPXIquE/pPn9X6kobFYnnR4SMn
0NLZJ+3P3ns/eeNSnjjUTK3Vx56hVvaLonbklHQhv9KMYmmuXNUusynKT9W1
rcG2nfu03tVZLNYU0YWBAby/fxfWmIeo30cexKU88CgHk2IuxZ5hVtfzMxmk
uWm53GfK2iHYlM3WgLVr23D48Pu4fJnrzbNYk1G967Yjt6TN8Uy0O5eqVXOp
VmctP8GlpGty+n3mUtPbSRnVmDXrer+Y0At/e2tslyGzBjfddLNfy/C9//jP
YcclbvPbJ/4X//L5LwqWpv77WbNm4evf/B6WBiZ5/NtVYamCEVEuzJfluf3z
X8AfnvsHYpPLfH7fzz7/Cr705Xtx191fc/jGmz7j8zr417u+7PK3atO4f3pp
jtfXJpZB/3/P17+N62+40eP6+dq//bvgRmOVTVsakCT4yF133+N3Po+W78tf
/ab0938S+b7RLguxmSd+/2fcdvsduObaa11ei3qY3f2Ve0XPNE9/uyxIh4ce
edLn/YbGevHluWPO+4gx/erR34nPz591Se/vP370IGa/s1rwuPE8vrAnq1Vc
qqQDhTVmcf+NuJTJU38pUw/6z36k9SUNi8XyoIHzA9i8bY+43h9qv3flUi2e
eVShd67FZk9fO+vaZlFmqrQbhdVyn6kqaZ5c0WJDaYMVbaYN+ODDI/jkk0+0
3u1ZLNYk1/GjH2DTujYf77sPY2ZS7Jlse2bKWc+v2l7Pr9PBpjZvsqK/n2t7
sFiTUes37UJRRYd3LtVmQ0OnzKbUtfyKa2wuXCqHudS0NeV9/LmnTYxnPGro
Pffn1/1ajlnX3zDsff5FK+OGHecb37rP5W+IkVFWx19uopi40tsLQ4d9v5QX
Gsn4/pjeg7ecEbEVX8d5Z3H4qD5b4ieU3Rmr90WM6qe/+A2Co7NHvEy+bBt3
fvFul7+hnmg//+VjI17ur9zzTawOTxv1vhKeUCByZWOxLm+97XNYKK0LrY9D
7Im28x403X8rqrOiWroOaPHApcjt5jU4zVyKxZp0unLlCvbsPYj6lt5h93vv
HMqVSTGXYs9IOzJTVM+vE3nlJhjq5LwUsSnqN1XV0oOetVtw4cJFZlMsFsur
zp8/iz07emDpLPThnjszKTZ7SKsyUxajAVYL1fOrt2emuqV/t8JmbcC+/btw
fuCc1rs/i8Vy09Yd76K81iiut4krqblUVbOTS5E91fKjHlO5pV3IKelgLjVN
TXXH/LmP/cqc5eOyHFQ/zp+sEDkoOmvIMYmnDDfG3V/9huP3FyyPxq23fX5M
7vf/95PPjXrZxsKLvdQY9Of1X31zxYg+U+I4D/z0kREzvuFM4/7u2f8b0bL5
8v6J2Si//+aCYHzm5s+Oepkph0a5sZHuJ/98Yxmuk8YYy/VIjJdqOGp9LGJP
pJ33oalmUVG9BTXSdUAr1e0bxKVsMNrW4cxHfJ3PYk02HTl6As2da4fd52Xe
5BuX0v74xGZrY6XGZZajnp8VpY0yl6qWzpHUh7FR2t/2HzyES5cva737s1is
SSjKa+za1gtbd4mP99uZSbHZw1qdmTJRr6lKWG3N0lejZJNgU319nThy5H18
8slVrQ8DLBZLpd3vHUBts8VxrZ1X1i14kzuXauxyzUxRLT/iV5SZor8hLkV9
lHm+Ov3sDwu66TO3jGvvIX+zKP94ffGQ4/nDpaj3zljzk2ee+7vXZSPWMx6s
xt1veclujTeXokzPHV/40oS8x//82X8hObver+Xzh0tRLcOx3DaIA60K8z83
Rdv7eDG+FcHJmh+L2BNpFZcq7UYxcSnpOqDNXrdvEJey9uHMWeZSLNZk0pUr
H0v75kbkl7YPu88zk2KzfTDtBwZnPT86Pxqk+XCFND+mc2S15MpWK+pbe3Cy
/wxnplgslouuXr2KDw7uw/qeOvjEk3ziUpOACbDZWtuRmSI2RZmpUlhttaKO
n9VqEbkpm60Ju3dvxpkzp7U+FLBYLJUOHPwQTe1ybQ+5Xk+XRy7V1C1/pe+V
Wn4ltVTLz6LiUm08Z51mDonJ9eveNXGj8Vye195a6dfyPPybp4ccz1cu9Yfn
Xx6Xe/3EEGbPDfC4bJSZce/pNB5+/e1VI143iv3lUitCUgTDHO/3pjbVY6Se
Ub4uo69civJY47G81P/LH8ZL28t4MSnyaGs1sqeSW+Fax88oerrXdtnQ7oVL
mW3rcJbzUizWpNHly1eweesulFR3+3RtPhyTovvx2h+b2Gzt7chMFbcju7gL
BdJcuJjmze3SPNkoZ6dKGizYvG03znB9WxaLpRJlpTava4Wty4f6fY577UNx
qUnAA9jsyWJVPT+ridhUOay2Rmmu2mVnU11Y29eFgwf3aH0oYLFYKh05cgwd
pnWO62zqFaXmUnVtclaqySh/pVp+9HOllp+hyuLoMSVzKZ63TidT/sKfe9ez
31k9rssTl1Lu1733u79y75DjTVStvKF8/Q03IiGtctCyTde8VExyKW666WZN
1vVTz7zk83JOhm3jxZfn+rSsxNvuuvuecV2WN7zwU/Z0c6vDGXY2lVdmEnWK
6rpt6PDQW8pq68G6DVtw7vyA1pc0LBYL8n2vk6f6UV5nErUMhtvvMwqG5lLM
pNhslZXMVJEzM1UozZ3LmuTMVINZrunX1NmHvfsP4dIlrufHYrGAixcHsH/v
VvQaDT7eZ2cmxWb7ZWXfoMyUsRBWc4k0T62R5qvtdi5lEfmpzZutOHb0kNaH
BBaLZVd/fz/MvVvEdbbcR6IDRVWDuVSzSc5MeavlRzkr5lLTz7/69VN+3buO
0hWP+zL5wzTod4caazKwB/KTz7w4aNneXhQ2Ia+9eFX8qNeNr1yK8j///v0f
a7aeKX/mrZ/WZNw2bv/cnT4tK2XexntZ5swP1vx4xJ4Iq7hUoVyrKL/ChHLp
eqBBug7odGNSlJ2y9PRi5649GBi4oPUlDYvFkkQ1NXvXbfWJSZGHzUppflxi
syeZ7WyK+kxlFXcir9yM4nqryEo1WaS5s1maKzdbYVu7DUePndT6kMBisTTW
xx9fwYljh2Azlsl5Dp/us3P9PjbbbyuZqe4Ce5+pCntmyuTITPX0dGDb1j5p
7nqee02xWJNA58+fR9/6nY7rbOJSlIEqr/fApYyeavlZxe8rtfyoroHmcwX2
mPkb3/6+z/etKceUmtc07st05xe/7PMyXXvtp4ccazKwB/KsWbMQm1zmsmzR
+pJxf136zBLTq0a9bnzlUn96ac6Il/XTn75O1M377K2fwzXXXjvice784t0+
Letk2TaWB+uHXdYf/eRhn8ejnl4vz16CkJgc6LPrxHZHvaMo6/jIb37vtb7i
vCWRmh+P2BNhD1yq0iR6ZzSZbeh241ImixXdvWtx/ORJXPn4Y60vaVisGa8r
V65g/4FDKKro9Lm29pBcSvNjEps9Oa2cI4lNKZkpeoajXpozN1tsqJHmzA0d
vdiyYy8uXLyo9aGBxWJpqI/OnsGenev9vMee6zQzKTbbd4t9hTJTVMuPMlNV
kluluavZPoc1Yd06Ew4ceE+6buZMM4ultej55r4NuxzX2NnF7SisMKG0zirY
k8KlWswym/Jcy8/qUstP63kCe+zsT20wup89Ecv0ze/8h1/39ZOz672ONRbs
ge7zP/TIk3jif/4i+mvdeNNNIxrnhb+9NWj5HnvqT/jMzZ8V61Yx8RmfP5Ob
bnb5W7Vp3Kf/+NcxWTe+cCldZo2oWejvevnlI09hyeoEl15L9O+lgUn41aO/
G1FPpQXLo4dd3rHYNm686TNie73n69/263NT+/GnXxh2WWfNut6nsb713R8M
y47p/+cuiZB+94cufxsam6v58Yg9EXblUnS/rbDaLPpm0H02dy5ltFhhWrte
3HPj/u4slvai+n22vi1+7ffEr2S7cymtj0ds9uS2YFPS3DenRM5MGaT5c5U0
d26xyOfM6nYruns24f0Pj2p9aGCxWBrq6JGD6DFVjcE9d2ZSbPawHtRnqhRW
W500dzXa57CUm+pEr60eAwPcH5nF0lr0XOXmbe8hu0i+viauVKBwqWaZQSlc
iqzU8qtukTNTpfU20Y+K/oZr+U0/33Lr7T7fP7/r7q9NyDI98NNH/LqvT7kj
b2ONhj3cceeX8Ma8QBdeQk7KrBG5E3/HI2bgy/v/9X8/4/OYKbmNI17PY82l
/vKPd/xaH1Rzj/qbDTfuP99YJn7Xn7Hv//FDY/r+3X3zLbfir6/Md2FA9FnQ
slKGz5+xvnvfj4ZcTupN5utYEQmFfm0DK0NTBBejnNtEHnfYWtqVS2UXd6Ko
1oxq6bzfQvkoD1zK2Lde9LNhsVjaa/uu/cgrHfkzYhkqa388YrMnuZXMFPWZ
KulGfqUZJdSP0WRDm0XOGRObMq3Zys9usFgzVKdOncCOLTY5v6H1/Xo2e6bY
0WfKIPeZslaJ3lLqzJTN1oBdOzfi3LmzWh8mWKwZr93vHURhebu4vqY6fJR9
Kq2zyHX83LmUvZafpx5TeaXdIm/FXGr6mOrL+XrPm/oGTcQy/fqxP/h1Xz84
OtvrWCNlD9/7wU+RlFHtdVxiVffd/zO/OQwxhmHf/xTkUrQ+iOP5Ot6s62/w
KdOkePbcAL/YFP2ue93Esdo2KB811OdI/bxmzbrB5/Fu+extQy5nYGSmz2MN
lR1ks2W7cimqTVTcYBG93Fvt/aRcuZQNpt6NzKVYrEmgo8dOoMu8ga/D2ewJ
tJItpuc48spMMNRaRcaY5s3t0nmyvsuK2vY12LBpJy5fvqL1YYLFYk2wPti/
E2ssY5GVYrPZvtu9z1QZrLYG6Wu3KjPVjb6+Thw9+qHIa7BYLO20d98HKK/t
FtfWxKWoV1RprZNLUUaKrq1bzb71mOL58PRwal6jX/fjH/zV4xOyXH947h9+
LdeyIJ3XsUbCHqiunHtGypOJW/nTC4v89sLQYcedilyKWIw/6+HFf8z1e3mf
+8tsv15jzrygMXv/in/20G98WudP/P7Pfo1LGTxvYwVFZfk8zutvr5rQYwh7
KtrJpeg58NwyE0qbrKiTrgPa3JiU7F6s3bANH3/MPWNZLK21duNuGCq6JsFx
hM2eSW5FhjR/psxUbmk3Ciot4rxZL82Z2y3y/LleOoe2GtfiyNHjzKZYrBmk
0/0nsX2TkbNSbLYWVmemlD5TIjNlUc1l27Fr5yacPn1K68MFizWjdfCDw6hr
tohr68xCmUuV2LkU1ewjLtVqf+aLvg7XY4rYlvZzBPZoTXkSf+6d3/eDn07I
cj37/Ct+LVdQdJbXsfxlD5QJG64/j9pvLgj2a/yXXp437JhTkUv5wxIpK6Ub
gsN4c1xKuV+ZKeoHNlbvX2z/9//M520jMqnIr2Wl3/c2Fn3Gvo71+TvvEhxr
IvZT9lS1k0nRMyb5FRZUtNjQYLKhwwOX6untw5btu3H1KnMpFktLHTp8DHUt
vZPgGMJmz0CLPlPtyC7pQl65CYU1zswUnTvpa11nLzZu2YmPzp3X+nDBYrEm
QFRLYM/O9VhjLtf+/jybPVMtMlOFsJrVmaku1Xy2G2vWdOGDD/Zy/Q8WS0PR
XLata424rqb7UNQnqrjGLPJQgksZ5RrZndJ+227PTBGXGtxjysmlODM19U33
wv25L//kMy9OyHI9/+Ibfi0X9cjxNpY/7OFf7/rykLX7PFmfXYfrrvO9FuLv
/vDSsGNORS5FPM/XsR59/NkRL/P37/+5z6/zze/cP2bv/yv3fBO6rFq/lpX6
Rvk6/lBslexPLo+2xxdfnouUnIYJ2V/ZU81OLkUuqLKgotWGRrN8DaBmUlTT
r2ftOux5bz9zKRZLI9G+NzBwAV3mdcgva58ExxA2ewaanuUQfaY6RWaKnuko
o3m0UX6us1OaRzd0S/829+Hw0eN874vFmuaiczP1ldrQW6f9fXk2eyZbyUyZ
Cu2ZqWq3zJQFNlsX9uzZxn2mWCwN1d9/Gr3rtjiurYktFVVbBHMSdfxUXKrT
/szXoB5T0u8XVJikv+1CVlEbc6lp4MT0Kr/4z2+feG5CluupZ17ya7nC4vO9
juUPe3hlzvIRLe9/PPCgz6/x4MNPDDveVONSVPPw+htu9Hms0NjcES8z9Zny
9XVuuOGmCXn/3vzfTz7n8/grgpOHHOuBnzzs1z5B/szNn8XTz/4VUbriCdlv
2VPFqryUoRWGGot45pt6t3e7caluixVrNmzCseMnuJ87i6WRLl26jPf2HYCh
snsSHD/Y7JlruZZfO3JEZsqMojorqjrkzFS3fQ7d2N2DLTt24/QZvvfFYk1n
Xb58ERvXdsLWZdD+vjybPZPdmeshM1UvfTWq5rUmrO0zYf/+XVofOlisGauB
8wPYtmOv47ranUs1m+T62F32a2r6N7EqpceU4FI1VhRWmkXWKlu6JmcuNfVN
POFTn/qUz/e5H3706QlZroceedKv++8JaZVexxpv9kD++6sLfX6N7973wLDj
TTUuFRaX7/M4xK9Gs23Ep1b4tW0MVXdvvLeNP700x+fxl6xOGHKsP77wmt9c
SjHVAKQanG/MDRjV9sKeLnZyKerjXlRnEffVms02GN24VIf0szWbt+PixYta
X8awWDNWZ86eQ32zWbr25utuNltLZ4hafm3Svtjp6DNV1mRFg1F+ttMsuUma
Uzd19mDfgUNaHzpYLNY46fLlyzhy5AP0mkpg6cjV/r48mz3TPSgzVSP6Sjnn
tZSZMmHbtvXo7+/X+hDCYs1IUf/VvfsPOea0OSUdMFTZ6/jZa2NTDQLiUuJ5
L4ucmaIaf9RjqrzBhpJa4lIW0ZuK/p57TE0Pz5p1g8/3t3/y4K8nZJnoHrqv
y0Rcjfiat7EmgkstWhnn82tQrcDhxptqXGp5kN7ncage3Wi2Dfqs/enbRBxL
q23jr6/MHzMulZRZg1tuvX3EbErxTZ+5BX984VW/61Wyp5NlLkXPfdO9teJ6
C6q7pOsAy+C8VJvJhr6t/FwZi6WVzp0/j6073kVOMdXP1vrYwWaziU1RZiq7
2J6ZqreiplOeR1vtc+jadis2bNuDs2c/0voQwmKxxkHnPjqNrRstsHbma38/
ns1my3bJTFXAamtS1fIjm7FunQ379u3mOiAslkY6fqIfVfVGZBpaRB2+wgoj
KhutMpdS5aWM9swU1fVr6nZmpohLGaosyC939phK58zUlLc/97q/du93JmSZ
7v7qN3xeJq1rtZEDIzPHbHnJU41L+TMO9Vwa7fZx8y23+vx6lOXSatv45xvL
xoxLkd9aGDpqLqXeDn//x79xD6oZaSeXyi0zokS6DqiRzvVt9me91VyK+mVs
2L5b68sXFmvG6uixk2jp7J0Exw02my1MmSlRz48yU0YUVltR3izXwjUrmSkj
Peu5Du/te1/rQwiLxRpjXblyGUcPH4CtuwyclWKzJ5FdMlOlsNpqpflst0uf
qZ4eMzZvXovz589x72QWSwOpuRQ5v7wb5Q1WR3+pDvuz0iY7m+qQTPX9KDNF
XKq0zoYi6dpb3WOKudTUN+V3fL2XTf1qJmKZbvnsbT4v0+2fu3PIsSaCS8Um
l/n8GpT1GY4lTTUuRX25fB3nwV89Purt4667v+bz660MTdFs23hlzthyKfJP
f/GbMWNT5K/c801EJBZOyH7Nnix2cqmCKrkGUZ29b7vFjUtZbL3Yvvs9rS9f
WKwZKeortWvPQRjKOybBcYPNZitWMlPUZyq/woKSBhtqO20iK0Xnzi7pa2OX
FX0bd2Bg4ILWhxIWizWGOnumH7t39Gl/D57NZg+2IzNFtfyqJDeLnJS6nl9f
nwX79u2RrrO5Tj2LNdHqP30GXaY+ZBe1iutpqsdHXIryUGoupTzrRZmpVrNN
uq62oaZVruVXXG1BYaVJ9JgiLsU9pqa+v/Zv/+7XfWxdVu24Lg9xFn/qtN3/
wC+GHG8iuFRqXqPPr3HddbOQnF0/5HhTjUv95e9v+zzOY0/9adTbyB1f+JJP
r0U1HrXMS40Hl6J+WU/8/s9+9YUbzjfceBPmLY0c1/2aPcksnvduQ2GV/Jx3
vUnujWF1c0/vWux5b7/Wly8s1ozUseMnYbRt0v54wWazB1nuM9WBvHITDLVW
VLbImSnl+Y4WaW7d1bsRBw5+qPWhhMVijaGOHjmIPluD9vff2Wz2YIvMVIG9
ll+Zx8yUzWrCGlszzp07o/XhhMWacTp/fgCbt+5CTkm74EnElkrrLII5EZdq
t3Mpi930b/oZ/R9lqkRmSvSYkrlUdnE7c6lp4J//8jG/7mEv9vH++Ui9YHmM
X8vzv39+bcjxJoJLxadV+Pwaw/XDIk85LvWPd3we5+FHnx71NvKlL3/d59cL
is7SbNsYDy6leM68IMy63vfecMOZxorSFY3rvs2eJKYeNaJ3e7vgUhXSNUCj
By5F1wF96zbgwMEPtL58YbFmnKjs/dYde1Fc2an9MYPNZg+yyExJ59Hc0m4U
VNozU902GC3OPlON0hza1LOJ+1iwWNNIHx7cwX2l2OzJbNo/jQZ7Lb8a6Zzc
NigzZbV24P339+PChQGtDyks1ozSpUuXcOD9Q8gr7RDX0jklHSiuMctcqlvm
UkZVHR+TKjPV0GlDdYucmaIeU5S1Ir4lekxNgrkBe+T2hymQn3rmpXFdnsee
et6v5RmOk00ElwqIyPD9/v+sG4Ydb6pxKX/4y3888OCot5GbPnOLz69HNRa1
2jbGk0uR41MrxP44Vnzqvvt/Nq77NnuSWOFSxe0orLGiqk1+xrvbjUtRHaIN
W7bh2PETWl++sFgzTlT7y7pmm6i7rfkxg81mezRlpuRafmYU1dnE+ZT6M5vt
8+l26dzaal2HI0eO4crHH2t9WGGxWKPUsSMfYPP6du3vu7PZbO921PIrhtVW
KblBmtsa3biUCRs3WNF/6rjWhxUWa0bpY+l6+MTJfhSUdyKjsAU5xe0oqjZ5
5VJWdWZK+n+q90eZqZJamzSGUXCtLFETUPt5AXvkXh6s9+veNfWjGc/lueNO
32q0kanenz67bsjxJoJLzVsS6fNrUO+s4cabalzq7YWhPo9zz73fHtX2Qe/X
nxp2Q62fqc6lFCekVeIPz7+MW2/7/KjZ1Ej3AfYUMp2zDS2iN4ahzoqqDhta
zPL5X82l2qSfbduzFxcucG8MFmuitWfvAdQ227Q/XrDZbK+W+0x1IK/MiMJq
K8qkeXKj6nzabaHnO3th6d2E8+f5XMpiTXXt3b0etu4S7e+7s9ls76Zafp35
sJoMsNrK7JmpDlUtP5lN9Ug/O37skNaHFRZrxunChUuoqDchu6hF9IcqrDSi
qtlZx8+dSxntmakWt8xUUbUFuaWdzKWmgZNz6nHNtdf6fN+amEBITM64LMub
C4L9uod+91e/MeyYE8GlXnp5ns+vcecXvzzseFONSy0JSPR5nNs+d8eotpHI
RIPPrzVr1ixNt42J4lKKqT4k9Yn64X/+yq8ebWoP16+NPQ0snbMzpHN3TmkX
iqXzeU23Da2WwVyKnvN+98D7Wl+2sFgzUuaeLcgrbdf+eMFms4e0yEzZa/kV
10tzZWm+3CmdU5V6uPTvJulnR44ex5UrV7Q+tLBYrBFqYOA8dmzq0v6eO5vN
Ht5KZspKtfyqJDe7ZaassNmMOHhwHy5yLT8Wa0J18dJlNLbakFPSKmrwUT2+
ikZnXqrbjUvRv7vsz02LzJT0txUiM2VFfrlR9JiiGiPMpqa27/7KvX7du6ae
VGO9DHRP3Z++QeTf//Fvw447EVzqu/c94PNrfP/+nw873lTjUkFRWT6PQ7wk
Wl8yIcv8lXu+pem2MdFcSm3id48//QKuv+FGv/ap2z9355jv2+xJ5kL5Plp+
hUk8211ntIk+GBY3LtVp7sHeA9xbisWaSF29+gn6T59FbXOv9scKNps9rCkz
lV3cKWr5GWpsKG+2ocVkE/Xw6Vxqls6vLaYe7Nj1Lj766JzWhxgWizVCHdi3
G+t6arW/385ms4c3Zaa68mG1UC2/Csm10jm502WuS5mp9et7cPgwP4fJYk2k
Ll++AlvvRhSKWn6tIvNU1mBDY5dcD9udSymZqQ7p/5qla+z6DrmWX2mdDYWV
ZuSWdDKXmgb+7yef8+veNbGF0NjcMV2Gv72ywO9l8IVv+MMeHnr4Cb+XOya5
1K9syu+e/b9hx/SHS1ENt5Gu87HiMql5jfj0p6/zeaznX5w94mWmPI+vr/Pb
J/53Qt6/N2vJpRRHJBYKPufrclAeMimzZlyWhT1JbK87VFhlRUWLDQ3Sub3T
7bwv+kuZe7HvwIdaX7awWDNKl69cwZr1W2Co6NT+WMFms4e3Usuv3CTOq5RD
rjfaxHOdyjOelD+29W3EiVP9Wh9iWCzWCLV5fRssnQXa329ns9m+mdiU0WDP
TCm1/FznuzbpZwf279L68MJizShRj6ldu99DWa1JcCnqEVVSaxG8qdUsX0O7
cymzvZYf/T/xK9dafl1cy28aODg626+ePeS77r5nzO5f0z15f2oJkn/y4K99
Gtsf9kD+3z+/5teyv/DXN/0a/415gcOO6Q+Xos9upOt9LLnM1+79jl/bzkiW
lxiLPwxw9jurJ+z9e/Jk4FLklJwGfP3f/t3nZVkakDRuy8KeBLY/222otaGq
3YYms/xMivq8b7JY0bNmPT48dETryxYWa0bp4sXLqGowi3rbmh8r2Gy2T6Ya
JDklXcivtKCoTjq3dtrEM53q82qDdL794DD3V2exppquXLmMD9/fjz5rJSwd
udrfa2ez2b6ZuBTV8rOUwGqrlNw0qJYfZah27NyIM2dOa32oYbFmjK5evYqj
x46juskmc6nidhRVm1HbJvc998Sl3Gv51VAtv0Ybimssjlp+NJbWcwL26Pyt
7/7AL75Cppp0qXlNo3rdgIh03HTTzX6/tq/3zv3lUsTniCf4MnZcSjluu/0O
v8YPTygYdlx/8mtzl0SMeN2PJZehbJI/62FVWKrfy/vE7//s12sMl6ebKVyK
/PLsJb7vW4HMpaaz5WdSukQfjJouG5rNg3tLdUg/27J9F/r7+RqdxZooDVy4
gN3v7kd+WQc/78VmTyFnGFqRXdIhzYtN4pmP8hbp3Gq0iWc7lfNqXYcV23fv
w7lz57U+1LBYLD908cJ5bN5ghq27SPv77Gw22z935sFqosxUOay2eg+1/ExY
t9aCA/t3a32oYbFmjD755BNR27quZY29HnY7CiuNIgPVavZcx8+llp90jV3X
Ltfyox5TBRUmkbliLjX1PXtugN9siEw1woKis0b0mn/+21t+1X9T/OWvftPn
1/CXSylsinJQQ42bnF3vV0aIfMedX/Jpmalvlq9jPjiC2oMjWTfDcRl/t59/
ueOLogeSr8tK/G3WrFk+j/+t7/5wQt+/J48ll6J6kSExI6+duSxI5/uyBCSO
yTGFPTktekuVG1HaaENttw0tlsFcqqHLhr0HPsTFi5e0vmxhsWaM+vvPor17
DbKL+JqazZ5KpnlwlnRuzS3tRmG1VZxf67tda+S2Uc+p3vU4+AHnkFmsqaSB
gY/QY6oQ97c1v8fOZrP9s6jlVyidh8vsPabaRF8pdY8pm9WInTs2an2oYbFm
lCgz1dSxTjyLSTX48su7BWdqGYJLiVp+1LdV+p2GThuqmm0oq7fBUGVBbkmX
uB7nZzuntqlH0M233DoiNkVs6fGnX/ApA6PLqhX36+/91n0jei2q47YyNMXn
9zUSLqX4l488JTJR7mNSXbQHfvKw3+M989zffVrmP700x+cxr5s1C8uD9R7H
oWUfqtbiWHKZ5Jx6v3Nvt972OYTG5Q27Pl7653y/6veR31oQMqbbhpZcKj6t
ArNm3SB+j2ogvvbWSqTlN/u1LNTTy9dl8SXTx56qlvtgFFSZRW+pOuotZXE7
70vfVzYbRb0hepaFxWJNjI4e64ehgp/1YrOnouVafp0oqLSIHlPVHXLvZsdc
Wjq3thptIjN15coVrQ83LBbLB1EPjP5TR2BlJsVmT113Fdhr+VVJbhYZKdf7
3WZs3boB5wfO8dyXxZpAmWybkVfaJq6hqUcU1eVroh6t7ven3Gr5KT2mahw9
pqzIK+sW4/A8euqbeh+NlOEovv1zd+Khh5/Ak//zF5E5+vurC0XPpkcffxb3
//ghzJp1/ajG/+MLr/r1nkbDpcizrr8Bv33iOfxNeh/kPzz/Mm757G0jGiss
Lt+nZX797VV+jUtc8AlpfdPfvb0wFM8+/wq+cs83xf/d9JlbBEcb7brxhcv4
W2ePTCz0b68sQEJa5aDxqMbjw48+PaJt0BduM1W41LwlkYN+/1/v+opYb4kZ
VcMux2JpbF9zifR7xBi1Phaxx8v23lI1FlS22tDgoYafXMevF8dOnNL6UoXF
mjGi+9R79x+aBMcINps9EovMVHE78qiWX41VPPvRZLK5zKvbpXPu+q07uUYu
izVFdO6jM9i5ba2cudD63jqbzR6ZHbX8Kuy1/Drc5r4WrFljFZkpYtEsFmti
tG3He6isN9n7THSgtN4qclCdFptHLqXU8mu3yD2mqB8VZazce0xxZmrqmzJC
o+E44+lvfOs+v3Mio+VSY+Vvfud+n5eZMkRj+drecmxjzWUiEgr9zjUpvuba
a/H5O+8SObp7vv5t3HzLyNgfmXopjfW2oSWXemXOcq9/d911s/CTBx/Fiy/P
xbylkWLb0WfXic+Cvv/Pn/2XX58JsWOtj0Hs8TOdp+lZlOI6K6rabWiWzumm
QfloG9Zt2IL+02e1vlRhsWaMTpzsh6Vnk+bHCDabPUJL51f5eU9VLb9O13Ms
5ZO7e9Zi1579Wh9yWCyWDzp18gjWWOth6WAuxWZPaXcXwmoptdfyax90r9tm
M2H9BiM+/pjzzCzWROnI0eNo7V7r6DFVUmsRfaOo17nZC5dSavk1m6TrbHuP
qdI6Kworzcgt6bRzKc5MTXXrMmtE7x+tOY67qUZcRGKh3+9nMnAp6lflS41D
xcTerr/hxjF7ferNNNp14yuXefzpP2m6rn/0k4fHZdvQkktRTm+i1h9l7rQ+
BrHHz3SOziszorTBhppOG5rt53Z1naEOcw/e3bsfA+cHtL5UYbFmjPbsfR9F
FR2aHyPYbPbILT/v2YWCSitKqIdjp2uPKcGmTD3o27RT60MOi8XyQSeOvQ9r
Z6H299TZY+qslFX48/OP4fdP/Qpvvva/6GxMm1Ljs0dgquVnplp+1ZJb3HpM
yZmpvj4Tjh8/yrV2WawJ0sDABVjWbEWmvU8r5Z5qWm2ivoA3LkWm/lNtVMtP
us6uVveYKu1iLjWNTP2bxpKLjNZUly00NndE72UycKlfPfo7v5f7V78eu9za
wpVxo143vnKZlNxG3P3Vb2iynm+59XbRi2k8tg0tudQ/Xl88Ievvrru/JvrM
aX38YY+fM4vakV9hQlmTDbXdNrS4cSmjhXq194gaflzHgMWaGF26dAkbt7yL
TIP2xwg2mz06Uw/HvHIziiiX3GZDs9nmMpfuMNlgWrcZ/f39uHqV+1iwWJNV
58+fx/73tmh/P32K+G8v/g6/fuQBv/30U7+EuT17Qpf1K1/+gsscOHDla1Nq
fPYI7KjlVwmrrVH6anRjUxb09Jixc+dmDAyc1/rww2LNGNEcWN1jqrLJilbT
4Jo+7n2m6LkvquVHHIv6UnGPqenpkJgc/Mvntc9NUZ+k2OSyEb8PrbnUbbff
gbiUcr+Xe0VIypgtw5z5waNeN/5wmZCYXMyadcOErmfK060ITh63bUNLLjX7
ndXjvv6o1h/xaK2PO+zxtNxbqrDGIvpe1Jvk57jVtXu7zVZUtVhwjrNSLNaE
6cPDR9FmXDcJjhFsNnu0zjS0ybX8pHNtebMNDd2uz3x222v5bd/5Hj//wWJN
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
eV9PDnsT7hj4MPtZ97jkSvbzvf7GW+Hevw+Bf708slH1lqYkFcLY8bPg07FT
4cMvJjHQzxo7Ppl5N839PfCYoz76nvmRt9x2H1x3fX/2HdjPtvNpLHfhpZdd
zfwg/J36xxMvwkdfTIZfU4pPyM/1RH9/rJGGfhI7/uc/hY6P/5foOTb1uPh/
jB7x3fcPZv/3/3fZNfCXs89nP8OzzrmA/X7efd9geOKZ11gcIsZk4Xc90b+n
RDxSJvXPbjDlynNkhT4RXDq+FD93sdGvJSRSQsnDzYWULEccPCMIgmg2AjWm
sM/FtSB5HhF8mjz5HC99JlbB7j37jH4MkUgkjZYv8gPvTjV+Hr2V01hfCj2W
YFv8O/o62vmagpyfWFv0d6Kt/Qwy8M5+Uc+DfP/ViNC2id+NUm0bPfI5uOjC
yGux8Toac3zlNvTT0O+K9D0uOL875Jonhh3/g5HPM/8q1rXTFIOlwJMm9cHZ
IIiF0p8uCS48r73ohz/+2Gz0Y4hEShht37FLGhNXMg8J/aSsAj+UeMJroevh
18RMmfMF5m2RL0XEEye6hhBBEES8w9aeZAVyCmGtC7/I+nB1HHQFzFu03OjX
EhIpoVRYWiG9Nxv/jCAIonlJMrsgzcZDVpHIajrimFm77tPhr4Ca3XuMfgyR
SCSFDh6ohSXzHcbPn7cBjseXikRx7mTW9txz/l/MczxjP38r6nmi+VINgf5Q
XtbEmI8fy3dU8sRj96iOnfTr5zF7UsHrI19KgTsVBM4Mglgg9cOOQI0pdd8s
ihxs3Lgejhw5YvTjiERKCO3btx8WLl7B3p/RT0q3+cHuFMEXgy8VipkK1ZkS
wWT1s5ip+lx+5E0RxkK+FEEQiY5cW4oP1ZYq1eTrxbmyisq5sGrNOqNfS0ik
hBDmysT8XZZC3vDnA0EQzc9MaTycavGzftcmjZOLufDxdSlXDlu376CajiRS
nOjYsWOwtnolVIq5xs+ftwGay5fq2KF9KJcf5vbDthf/Va5vcFqXzvD0Ew/A
d1+NgN8mfwKff/Iqy4en3P++gTdHPU8svhTGHWFuvrO6h+fSf+2lITEfP9J3
PPus/2W5B7WxUx2k7+4tmR7af8jgu1XbMU9foWUSjP9mJFzc41zVtgfuvQXG
fPiy4b8HcQXm8vOlgyDmS5Tp+lKYy2/pst+hpmaX0Y8kEikhVFdXB6urN7D3
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
zyt7hflJmIsPwX3xGNg+ki+F7a+85gZVnFeQx/45XHWtAx94LKwNxkX96+WR
8OjQ56Hr6d3Ctn/0xeTQ/ldd2zdse8/Lr2O5DjEejHypRqL1pbK9kF0S2ZfC
HPnV5EuRSC2icF8qOdyX8ptA4NIZ5Evpo/WlsE6U3Sr7L998+TZceP5fwvqN
j0cPD+2v50vdc1d/cBROBW/JdFY3Cduhr6KN5X35hX+orgX9IKyppGzz0AO3
hrZfdXmP0OdndusaioVCPv3gJdV+b7/2pOrYer4UxilNHjc6dH14zfj3fw65
V9UOvSHlsfJzfgw7VpFtEtv2+suPqz5HLy7az7+x7YlZ5EuRSK1YdXWHYMXK
aki3eFjuvYxcLxS5Gu9JBefNgjFT6TZ/yJfC9aOhfH5GjyUIgiAIIo6YHoiV
Ss72gSlXgCyMlfKK4FH0r9i3ls9dBJu3bDP6tYFEIkG4LzU94Eth/oFZylip
LI8M+VINEsmXeu2dT1WfoQ+DuftwG8ZTKb0VrG+B9Zsa8qUG3v8P1fa77ntU
tf2HnzPDrmXClOzQ9q/GJam2YX4+ve+k50v95azz4btJJvn6p9vgL2efr9p+
652DQvt/PzkjbM4Oa2kpz4EeW+fOp6na/O32+9k2zP+nPf99Dw5V7dvtzLPJ
l2oMOr5UTsCX8umMj73oS1EePxKpRbRm9XKYP6dMM1cdwZfyky8VCa0v1RB9
b7gSOGdSaH+tL4X/xtpM2vNofaFTT+kY8oGUDHv6QVU7rEUV3Kb0yDp3PlV1
nikTP1Tt98YrQ6OeH/lh7Lu6P5Mbel+uavfrTx+Ftbn04vNUbWZO+Yx9/sWn
r4edB/MgZiZ/o3uuxrYnEE19KR/6UoVRfamlSxcb/cgikUggx0zt218LVjsv
jaWxtoUbbEX+JvlSLFeB9E5eyGKmeGnsXT/urvem4mA8QRAEQRBxAouVyvRA
qoWH9HwRrA4RSqW+lFP0rXZ3OSxbvZ7l3yWRSMZr+YrVYLFz9fexSV6LpY2V
SmG+FMVLxUIkX+rnGXnQoYO6zsJ/PhnHtr3w6nu6fkxDvhTGCym3jw7k6VNy
3gU9VG0++rI+BqmpvlSnzl3C8vQ9/tTL6vm7Xv0i7o/nmTw9N+w8Dzz0pKod
1qLCz0do9kcPD70w5b7oTXXQ1LEgXyoKOJYNeFJ4D6fkyPFSRRF8KZ8gwu/L
lhv9yCKREkIb1lfDwrnO+rnqoC+l9aT4DJlgzFSkGlOGz7UbQ2N8qZ6XXAC5
ZnU+Oa0vhTFWeud5751hqnYYl6XXDr0iZbvTu3YObbvztj6qbRhr5CiYCmX5
U6BfX3VdRsztpzyu1pfCvH+Rfiand+0S9t1x3YgS7favv3iL7YtxVx0j1Ivq
dU1PGPf1v1Xnamx7YpYmXiolhngpAVaupL6ZRIoXHTt2DLz8XEjLdrGc+Nn5
PvDzTYuZ8kqUhOpMcWzsLftSZRQzRRAEQRAK2LwWxleYvZBmE8BsFyHPLbJ6
FMocuT6xkmKlSKQ40tq16yG3WFDdyzMVvlQwVio12wsp2ZqYqUwdbyoOnkdG
E8mXQm7620DV58GYoksvU885/fuDb9nnDflSnbt0bfT80usjxoT2b6ovdd4F
F4e1eeWtj3U9JeTp595Wz/9d2Uv3PG+P+q+qHcZP4efDhqvn8q64qrfu/l1O
U9fvIF8qCtp4qRw5Xgp9KW8EX2rl6jVGP7JIpIRQWB4/pS+l9KTETOn+zAx5
Uyx2ypce7k0ZPdduEA35UthH9rjwHBjz0SuqOKkgWl/q+69G6J7nqaHqPLzK
GlVKMK+esl27du1C50XvR3t97dqdzFB+hvWiSnJ/Vh1X60uhx6Z3fqyFFatP
p0QZe/XVmDfYdUdqO+j+AaochI1tn/A0KY/fKqMfWSQSKaBjEhs2bYH8knI2
PjZZPVDkEqV+uvG+FBeo74oxU9mFgsqXqvem4mBMQRAEQRAGg7FSMzNdkII5
/PKkfrNYhGJf/dwWJ/XDuU4RFi9bBXv37jP6dYFEIgUUnsdP9qWUnhTm90rN
8THw70FvKlkTN0W+lEw0X0rru6APNObrqWFezK8pxax9NF8K46+aMr+E1xA8
RnP6Um+O/CKiL3XP34eotvW75W7d84z68Hv1nGG7dizXIdbiUn5+U4T9yZdq
BBF8qWI+3JfCeGePQPWlSKSWkr4vlVofK4U+FPpRYpaEOeBNSXCa2Cn0phI4
ZkrrS6HPNOHbUfDzhA9YbSh/WXQ/JFZf6oVhj6ja3XpLL912GOekbIexS8Ft
mcnfNth/o4+mjZVCYvWl8Ptq16tgbNU1V10SkXsH3sTitpTHMc0cC3ff0ZfV
tNS7zlHvDDuu9gmNJl5K8OJ9XhTVl6peS2tGSKR4EtaZEmYvZjFTOF7OyufA
18SYKdyv1I8xUyJbI0oxUwRBEAShBftFjJWSc/hlFEj9pksdK4U5gZzcHNi6
fSccPXrU6FcFEokUkK4vxWIfXSxvX9CTMln8kCYR9Ka0ef2CMVPGP4+MJ5ov
NWVWIXQ85VTVtjO6dVf9+95Bj4faR/Olfk0pCptfOuf8v0KPS66MSN+b71Ll
v2spX0rrK113fX/d84z4z1i1R9elK/v80aHPqz7vdcPNuvuTL9UIdHwpS6kI
JVLf7dfxpdzS5+s3bDL6kUUiJYSi+VKhWCnBDIKYXe9NhfwphTdFvpTaLxrQ
u1H7x+pLffL+cFW7s8/6X912I954WtXuBkW+P/SAgp+f0rEjq1FV7191Zv4Q
eld6x43Vl0LOPftMVdtpkz5u8s8X8x4Of34wdOzQXt1HX9OzWdonJLq+VHEU
X4qDTZs2Gv3IIpFIGq2p3gD2sgo2Rk7L8UCJR2RrtZtSZ8odiJky53Nsfagy
VwnFTBEEQRCJDpvHZrFSfjDlCmAuEqHIX1+fwif1o2VcBSz8fQXU1h4w+hWB
RCIppO9LlbG1XSx/X46X+VHpVo7ltU7T+FPYJhgzRb6UTDRfCsHcfdHWQ3/y
319CbRvK49ftzLNV29/XqS8VDa0vhXWb9Nodry/13Cvq+lnoxemd54ln1DXS
sX6W3v6nde3G4qiU+05NLoJTO3UmXypWlL4U1peyeMFaJkJJIG+IKo+INI52
cOWwdfsOox9ZJFJCSNeXwpx8LFYqPRArhV5Ujr43Rb4Uo6V8qV8mfBDWl2NM
lrKNr2wGXHC+eh3KPx65i20rzp2siiUa/MidLL+f3foTOAqnNnidjfGlbu53
rartP4fce9w/Z23drLO6n9Gs7RMLjS/lw/u6JIov5YdNmzYY/cgikUga7d69
Byoql0hjaicbV+cUceD2i432pbQxUyaLTxEzVUoxUwRBEETCI9eVqo+VspSJ
4ODE0LyWW/p7qb+SzWcdOXLE6FcEEomkkNaXwvdbrNGKcVChWCkrBxm5AqTb
+DBvSutL0Xtxw76U1mtS8pezzo/aVutLXXVtX9X2u+8f3Khr/XpCctg1fDMx
Nazd8fpS7308Luw87338g2p/9JXOPOtcVZs77n5IPv/734Ttj58F98W8h3+7
PbyOCPlSUVD4UnjvpkrjXOZL8aKuL1WCvtQ28qVIpJZQTc0uWLaYq5+rDvhS
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
atGkBWpM6eX7aiifnycQa5WtzuXXiryphnwpRC9Pn7LN9J8/VW1DX8RmnhDz
NWj9G+SJx+5RtXn+2fC4reA5buh9uerzPtK/tb4WelXa/fOyJjbKIwqSY/oh
7FiW9HENfq/m9KWeGnqf6vP8nB9Z7FhBzk9h3z1hCN7PfJZ0XxbK3rFOfs7K
2X7YtnWz0Y8hEonUgsI1Ylu37QC3vxJSstzMQ7IW+cDDNT2fH8/ym4hgZ2tI
RbaGVM+bMn7cQhAEQbRVQvn7Ml1s3bQpV65/nheoK4VzVSXeObBs5Tqju2IS
iWSAFi5eDjn5/kA+axdY7Fg7qnHvv5jPrziwFstk5aR3XXVuAHrfJYiWheXw
k+7nVBsHWcVyXDTep7zm3vVwc6Bm916jH0MkEkmjmppdsHShPzCPnSrdr1my
xxRzjakgGGPlYDFTvM/UKmOmYvGlstO+D4tVevCBAaHtGFPV9bTOqu1XXHYR
pEz/MuSR+B0zIfm3L+GVFx+Dm/tdy3yUSP5NkL/1vw7eH/k8/EvHF8M6V8H9
R7zxdNj2QfcPYOe3ZIxj+fo6dGiv2n73HX0b7REFcRdNCzvf7QOuh/HfjIQ3
XhkKmcnf6n6v5vSlHhl0u+rzLl06wZ239WH/L0MG3w3PPjWI/eymTf7E8N+x
lvOlAjn8hBxFbSntPe2H6uqVUFtL+XVJpEQT5vOrqdkN5lw/847SLF4oKP3/
7L13bBzrmuYHzIXvBgNj78LrMdb2GDYM2zBswIDhXQwWDvACizW8wCwW8J/2
wLOee+8595yjo0TlnHNkkpg7JzbZzUx27qqiRCrnnHOmRIqizpnH3/tVVbM6
kKLIppqU3gd40AwdSEpVXfX96nnemWWmUka/SVuEZkIrcqZ0oVlTpT53YbPZ
bPbXZ3p/ofcZ6u+jrJS9WclcN039fdTj5xOfHz95heeqsljfqJ4+fY6u6GDW
jCmaOZO7fv2p491I5ng3LY91qRswi03NgX0im/2tmN77qbeXrkUJdGsIJ7M7
/KivPqYcx6079zE6yvMrWKy5Jrpu+vaNs1DjbrmWTT18eufX565PmZmpDn3O
VG5mqtTr9EXiUuR/+k/+u6z7/OY3v0FH8FDm+2tX/E1BtvTb3/47smPuN7/5
k6yv11au+ySXmsxWhhPvqsF/9Gf//pQfSz8LsbbpcinyP/wHfzrh869Z/jez
zqX2bl885d+XXsdv31Xy/2uzbjkvzj3JbCkF/VoCL148k+vTLBbr29PHj79g
8NQF+Fr13j1/WwrR9PS5lHmuTr0JLeKcwNWSkv0m2Wyqh3tO2Gw2m11k945n
pbx6VsoV1vv72lJ6fx99HFdO4t6DJ3zsy2J9oxobG4N6/Lw4Po1kZkz1pPTZ
UdPNTFF/tXXOFHMpNvvLmjr8bP5k5n2fenut23RMbOMdieN4+25YzppjsVhz
Tw/u38Bxtc3IWDjFtkvr2IVm0UwhM6X1yrVwJTH/MlNT5VLbN/2Ud78lP/3f
me9TLoryOlNlJbbaLdPmUv/yX/xFXlddxf6VMjP0qcf+3b/7W2zd8GPe7/e5
XIp+94leY+2K3806lyIW9+f/6Z9N+W/2X/zn/xjJntqS/3+bNdO2JrY/4sOq
FirImTVNxalT/Xj3jnPMLNa3Kpr1/vjJM3GsfgKOQAxNPuozSYp9x8zYVFw8
vjNm9ptYZk0ZbIo7+NlsNptdNBvvKXUu8T7jicprph0tCnziPag1pnOploiG
QKeCG7cf4D1fK81ifdM6e+EqfK1xvcvPF0NnXM9TTLcjwBNSCmamSr5vZLO/
BVOHn8xIp+Fp12dIRnIykPGUiu74AD6MfSz17ofFYk2gZ08f4ezJuLGe7RDb
bgc+f8aUNTPVDjVF+St7Npsq9Xr9J0yddH//7/9dyS6o647yTblZIjIxjf/4
H/+jLNbxN3/9b/Lut2vrwrz7Wf3n/8l/iO/+5v/K4kqF+M2mdX/M40x/7+/9
nbzHWt0RPIz/81/+M/k75PGov/Nbyc0mmnv1v/yz/yHzN/iTP/kTVB9aPenf
jf4e//av/rW8r/V16LWpr5DuU1e1Xn7f7BD8i3/633/2a1pzanQfkxn+m3/9
v2e97j/5H/9brFr6b7H057/CX//VX+K//i//fEq88asxbWuZDr82FJotdeyY
hps3r+H9+5FS735YLFYJ9eHDGG7dvo+uyIA8P7f74+JjBcnP7Nq3WjHO1Tti
Gpo7FTlryuRS1MGfxaZKfS7DZrPZ7HntDJNyG/19AVqbUtHSp3f3UY9foEu8
pw2cw+sh7q5msb51Xb1+B6FuxejyiyDcpyIxjePeuJGZCnRo8hosay8AH+Oy
2V/ITqPDr0WFr1NDu9gmUznnpWn1GE6cuoiPnJVmseashobe4PrlE1CiTZIl
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
2lJzVrSrRe/043lTbDab/W05i0m5I3K+uSOoyvnm3k4Nng7hNhXhnmN4+Ogp
xsbGSv3WyGKxvgLRvuTS1Ttin6NfF+UJJRGJT68riK65iorj2o6oBn97GjZ/
Qr/eKm/WFB/TstmfssxOi+2n0atnpdxhFcFeDRHL9taT1KCdvIBXr16XelfC
YrGKrLdDr3DmZAJq3CHnQqlKF6bf5UdOQdV6xfO0yLk42Zkps8+P2RSbPalp
W6EMY9ptzJUy57+Z26aC48dUXL58hjPMLBarqHrx8hWOi+N+6jqh6z8DHUn0
xlWki8Wm4non/+RsqvTnSGw2m80usi1MSl+DisPenIY7PM6kvO0aOmMncOX6
XZ4fwWKxiirKTIW7FXm8ScefHb2paR/f0nFtb9qYoWrpqeZZU2z251nPTkfR
5EvK61QoK9WR1JAwtrWIOH/sTR/D+cs3S70LYbFYs6CPH8fw7OlD9Cd0hqSm
AzpXmhGbsvT5JXP7/HjWFJv9SVPOMOmSuUM9K9WTs43Fcfq0hiePH5V6F8Ji
sb4y0fWkNB86mhxEk7cPNl8cwY4UIomZcalxNqWi02BT1H1CbMp6jWnmWnpm
U2w2m/0V2cKkjL4eeyANV0ifKSW7+8IqOqInZKaBxWKxiq3R0Q+4ceu+3CfR
sac3nERPbPrHtTFVNboA6HorJe9aqzpXD7MpNnsSj2el4rAF0vI4oCWiodeS
lWqLajh+6iKePX9Z6l0Ii8WaBVHW4v3IME4PRKAl3MZaeBuy59h8rolpRaFq
IfFcbr3Pj2dNsdlTM20jcQfUlNgWZYdfWN+eLNuYpiVw5copjI19KPUuhMVi
fYX6+PEXPH7yXPKoJm9UznQOdaWhzDAzlek+Ee6IaWju1OBoThU4j+f+Ezab
zf5q7OzNmynV5E/C2To+U8oZUuEXH5+/zLMjWCzW7OjXX/8WL16+hj8UF8ee
feL4NoZQd1rOi5rOMW1KNfr8xDGtv0ORz8fzU9nsqZu2Der0bfIlZFaKrlFp
E9tTzDhn7FPpesZ+OQOZ5tCwWKyvUzRL9umThzjZH5I5DTlnSmamZrL2ZPT5
qUafn5w1xZkpNntyN+lZqYQTquKxZKWs+cUILl46gZevnpd618Fisb5i0dy6
oaG3CHX1S25k98cR7CwimzLO4wPtiuzln5hNlf6cic1ms9nTc20Ok6Lrok0m
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
0glsfq8s59b6/SX6c2W8SHe91cbr1y4owK9+HP+ZC+apfpbszStez2dfhWb3
RjR7t6G1pQpdXUEk4jHJcPv7e3D16km+XoTFYs05jY2N4dbth+iJD2a6T4Kd
aUQTdP5eXDaVmTfFbIrNZrPnpmk/7NT3y/pMqZRkUZSVIjblDYv9ev85PH3+
Ul7bwGKxWHNFtPb1TOybWjpS4ng2gjpnDxrdbXD5g6hv8mDXITt2HGjC5j11
2LSrFht21mLd9hwetY04VS3W7yDXYZ3w2l0NWL2zCSu22bFkUxMWrW/A4g2N
0ouEl2xswlLx9cUbxz+mW/r+0s1N0vQ4+nqZ8bH8vjA9fqF4vgVr6/Dzunp5
K72GXIsfV9dIZxjWCoOHUXZrqZnX0l2ITdHXv1tGfYOV+Gn1ESxaW4NlG2uw
dns9th1wYHeFFxX14dK/97DnhzPHBxE0+uJyzqS/S0VbwpgpFdfknKnT56/j
zdBQqXcJLBZrjojenx89uo9Tx9r1nrF0AHJG1Ix7evQciEo9gWnPeGYql00x
n/oqTHmontBBdAb3ocO/AyHXerQ418BHs6By50Bl9ecVyDyZDCrDk0wvM7xc
2k2df9IrC3jFhDYfr3uZxWU5tvArycQMVlVnyV3lZa5yegHp96P7i+dw28XP
RV2Frv0IeOvRGrQj3HoE0T4PLpwbxMgIcykWizX3RGzq+q378LYm0eDuk517
oe404smp9/JPZuoGtLIpR3OS2RSbzWbPNRtMqjbDpJKSSTkMJuUJqYilz+DF
i5f4hTupWSzWHBOx8sdPn6GrN4Xd5R6s3m7D2p2N2LyvAVv31BXkTzqDqsOG
nfXYuKsBm/c0YcteG7bus2HbASd2HBI+7ML2w25sOezBxgMerN3jxJpddqze
ZRO34jV227Fuj7gVNm/X7rZJlrXGuM/qnTb9/rv121U7xr1yexOWb2sUbsKy
rU0o26LzK7LOu4iFNWLhugb8vLYOP62uldmt3LxVhleVWToC8zgVzawqxw8r
KvDzmmosXncUKzY3yPlZOw+5ceBIM/f9sQvazFHLrJQ4j6N+X0+7ihZxftdB
53kpYlIqEuopPHn6nGdPslisLI2NfcDVSwPoJyaVdEPOhqI5UUXJTRHjCkFN
W3JTMWZT8900KyrWWY3e8CF0texFu28rmu1r4G9cCW/90sIZqAyDMvv2Fumu
N7NLVv603OBLqyxebXitxesm8NpJvDrneVcVZFrZ7Mqat1oynt2yZqtMXmVl
VTLzJe7XtFTnUvYtwvuEDwnvgrNxAzpaDuO40oZb18/g4f0bePr4Pt4OvS71
boHFYrEyevv2Hc6ev4Imb1T28juDCXT0povS50dOW9hUszhncQbTGTZVT2ug
zKbYbDa7dDaZlDObScnuvua0cAp9qVO4d/9hqd+uWCwWS4pmNo+Ojso18Ks3
7uHUuetI9Z9FIBzHhp0N+GEF9e1V4ec1R7BqS61kUVYGtWl3IzbvbcK2/XZs
P+jEzsMu7K5wYU+lG3uriNF4cbjWg8N1HhwSPiC8V3y+q9qL7eUubD3sELZL
by+3Y1u5DVvJh4UP2bD5oPAhwwfHP98kbjfss2HjfnErvF58vH7vONOSHMtg
WcStVmyzYflWG8q22DK5rEXr62XO6ue19TJb9RNlq1bV4IdVR2WHoNkJOD4H
a+IeQGJVxKmWrBN/p6312LxP/B3KfZJRVda3lf79iV1ym+dn+lypiJwrRccH
gW4NoaSGcErv7wv3aHjw6CnGOE/NYrEK6NnThzh3Og4l4Yaa8kDV2qGq6SKs
NyXFc3WL2yDUtNsya4rZ1Hyz3s1XjWh7JXpC+xH2boW/aTXcdUsn7+MzWVRe
Dio3+2TlTyZzWm/xhgLemONC97HafK7JGJbJv6y8akVOviqHU5mdgPU5PYD0
tUbKSonfzy5e17FL+KBkUy7bBoT9uxHrOqL/jWNOaAk/TvR349qVk3j98jHe
vH6B4XdD+Dg2VupdBIvF+ob1669/i+HhEcmm3ME4GjzEppIId+fPjJ4Jm4oq
GjpiBdiUu1daZqeYTbHZbPYXdAEm1ax39xGTos9j6dO49+Axz5NisVglFe2D
6HiV5tvdf/gUV67dRUI5CWcglrVf210ewNIN9XLu00+ra7BsU71kVVv322R/
nc6gPNhb5cG+ai8OHvXiUI0H5XUeVDZ4UN3owRGbRzyXR+wbddcIVwtXNHlw
sM6NvUec2FPtwN5qu3geO/YI766yZbyrgHdW2rBDmBiWaeJYWw7pJna16YAN
Gw+MMyvKXhGrWrXThhXbbVi+TfeyLXYs3WzLdAZSv6DZBUicihhVVvefhVHJ
3j/TOZzqu7LDWLSmCqu31mHLPif2VQXF36YVVY0dOGrvngPvWewvfYxgzUo1
emPy2MDTrsmsVDipIRhREew+hktXbuH9+w+l3k2wWKw5KspM3bt9GYNaG5S4
A6rigapGipSZMmZNqYEcNmXjeVPzwOlIPVK9dYh3ViHo2AQvMaTahROzKDMX
ZXKZTBZqmaV3r1D+KZc/5TKn2bKVV1ltMitrvsrKqCbiVEsli5IZKVsZ3I7l
cDvF8zl3CO/X7dgOn2Mzop3Vhf/uYrtQ414M9vfg4rkBmaEa+zCKjx/H5PE2
555ZLNaXFl13+k6c6x87cU52+hEzcrckEe5JF2XWlLXTj9hUsEuFPaC/DnEw
yaYyvX7mtXnifMhZ6vMxNpvN/lqdzaQafQmxX07LrBTdNonP4woxqSf48IHX
mlgsVmlEx6gfxsbw4uUrnL90DV2Rfth8fXn7NGvuftshP5Zu0mdArdjmxPZD
Xuyt8mK/waEq6j2oavSguklnUEfsOnuqd3vEcakHTcI2YbuwwzB93iDuc1Q8
prLWhYqjTpRXO3C42m6xDYeEDwrvr9J9wOJ9wnsNm/xqh8GrthOzqjBcbsMW
g1kRq5KMao+lC3CnDSsteaplWylPpXMq+p0lozKyVD+sNHJUK/I7/ybKUWWy
VMvLsWLTUew85MGh2pDkU9z19y3ZyEq5+sR2EYXNn4QrrCHQo6E1rrOpUOQ4
1MFLGBHnkb9yzy+LxZpEb16/xLXLJ9Gf9EFJOaEqrTpTKgqbiupsSgtCTbmY
Tc0TJ3tq0NWyH0HHenjrFsFd83OBWVEmh1po4VAmo8nt5LPmoL40f5oJs5qI
UeVmqcrgahRuKoPbJn5vh/i+Rzzesw1u9z64XQfgdu6Ex7UBHaFyJCMN2TPX
sv7+TVDF17WYA8dSPpzo78KFc8fx6NEDOe+FxWKxSqHnL17h2InzCIRpbnRM
sqmOXgXJdPHmTVFuqlPmphS4WsTr+OLjbMpdYOYU56fYbDa7yO6VNudJEZOi
eRF0HTTdUqY1kjopc1Kjo8ykWCxWafTx4y/y2FQ9dhq+UFL2TdfL65f0fRnd
0vVMdBzZ5IvJOaauFkWuo++uCGLVdjvW7nZie4UHh+o9qDYZlGtiBuUSdgt7
cuwyvt/oEI9v9KBqEjZl8qlDVRP7oMGq9lt41R5L5monMasqnVNRR+Bmk1FR
79/e7N4/macyO/9kjsom+VRW399qo+uP5lMZfX/Zc6kK8CnxtT+UlYv7VeLH
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
U6X/zj+tqsTG3TZU1IVL/v757bk3k62WcyebFcmjyNTl1yy2lRu37mHkPR8z
sFisLydiU6cHeqDEHTqbUmneVKqIuSnVeL4+qFoYatpTgE1NJRfybTjZU4uO
5l0INK2Ep3ZRTj5qwXjmx9pBN+WM1FQ6+Qr38WVnoSZhULn5p9pCDOpLsqhJ
GJW0waaIS9mX61zKsUa/ta9Ai28XIt11GW6UxZByc055zr7vOKNyZll+LzUR
m5qE4ebyKXEfLeHGoNaKC2eSuHn9At6PcCcwi8Uqnp49f4ljJ87L3BQxIpoD
1dKdQl9CRaqIvX60JtGb0q95DXYpcLem5NoGz5xis9nscctrnonZy3lSsUxG
yt1CedYzuP/wMcbGxkr91sFisb4iDQ29xflL1xHsVOEOUueyfvxFx2H0Mc0j
pc6+iTJS5hwp4kvEmkz+ZOVQlIPKZVA0hzSXQ4UjORyqS+dQ9Hr0up6QOIYU
P4MrmIYzmML+Iy1Ytd0uO+3ISzY2Yv3Ohgx/kt5eK/0pFlXIq4WXb60Vz1uL
n4lNrajOY1N5fCqP51Tk86uyCtmbV5BbGbzqB0vWSpq693Jtsi3L1+RjMhkt
gz/l2mBgmXlTlk4/c+ZU/u9Snj9/aqn+e/wkZ0/VSSZ4xNZV8vfSb8NiOzX7
+yQzTsLRokoTn/KFFVy6fJ2vY2GxWF9cdK3LvTvXcaK/U65r62wqqHfwFZVN
pQ021QZV8elr9pNlp74xNkW9fT2hgwh7NsPfuCwnI7Ugp7PvU3OkTCb1qTxU
bidfbh7qExyq3pqDyu3dmyZ/snYVFttWJnXUMHGp+sXjs6XsOo+i7JTPvhm9
bZVI0/9H+n9K/1+lTW7ksHytkAtwKukJGFbu98ztYzKGW9BiO467MaCGcOvm
BQy/Gyr1bobFYn1Fev7iFY6dOAdXc1xyIpsvhuaOFHrjalFnTlF3S0zR0J3Q
1zFojYE4GLMpNpvNHs9JEZMiFqVnpWIyY5pQz+LFi5f427/921K/ZbBYrK9E
Hz58wJ27j6AcO4fm9nT2/sipM3LKt2dnpFSZWSJmlMlIJcaZVJ85F8ro5DNZ
VKaTz8qg+vLzUGYmio4R6bWoA5rmV7la0vJnIDZGP0+TOFZt8kblcePuigCW
baqXjIY4y8J1tVi1xeBQ23R/DovKzU1ls6kayYesbKowjyo3bP0422YfXvbX
DV4lOZXOqsx81fcya6X7O4u/N1hWpjtwhZVRHSnMs6xfN/Ja9NjM81pzUxNl
pzK/n/4zf7+8AgvXHMHanTbsPxLEEZ47NYu2MCnq7zOyUmRbIIVAu4rBUxfw
fvQDHzewWKySaPT9CB7cvY6Tx7plPkNnUzRvKjY7bEpt13NZiqfAPJ1va/ZU
qq8esY5KdAV3IWBfk5+RqjEyUlmzkKwZqYmYlJVDTT4fKp9BFerlK5CHss56
KkYWajaZlJXxmVyq1mRSS/WslORSxKSEm9aiJ1SOVG99HvOZ0CZDyuVVE+ap
cpxwZrMs8/HTYlO6B/vbcePqKbx6+QQfee4Ui8UqkoaHR3D2wlXYfFF5bSyt
QwTak+hL6fMAinXcoJjZqbS+LkHrD47mpOyGIT410cyp0p//sdls9uy5zpKT
IibVQF2n4mNncxz9g+dk7yqLxWIVQ3Qd89NnL3D+0i10RY6LY7++zL6oNrPW
PZ6RIh5EOSViRZRfaunJ7u2j/FOvhUHJTJSRhzIzUZlevr7CvXz+djXDoWQm
qlWRr+toThkcKi6PTc3jRbm/NI4Xq5o6sfOwD0s31EqeQnxq4boarNg8FfZU
gzVbP+1Vwsu31GDxxhossLKpnFxRLmv63UTOndeU83kepyrLz2dJLpbhV5UW
TlV41tWUbDCwDJvKy07l/165zOq7ZRVYva1R/Jt4cbg2VPL316/PJpPqszCp
tMGk0nC3pJDUzspZwsykWCxWKUV9X/fv6rkpNeGUs6BUNWywqWLNmzI7/aJQ
tS7hkJ6dSnybbCrVW4ve8CGEXJsK5HoM3pOXkcplUqtymFQug1pdkEUVnhE1
hdlQxZgL9SX406Q2mdQiIydlMilx27QMHttadLUclMxw0n/DAjmlfEZl/0Sm
yuL4JBmsydhU5mcycoZ5P5ML507H8ezpQwyPvBPHG7+WenfDYrHmuWjW9fv3
o3j46Ck6+46Jc39aj4jCF06iO64iXcTclJmdiqT1tQqaX+0N69fAyrUGC5vK
5lOlPg9ks9ns4nucSUVkFw+ZmJQjEMfxkxdl3yqtI7NYLNZMpB/rfcCjx8+R
SJ+AzRfJ2hfRsZbkUUZGipgQ9fZ5QuO9fcSUiC+ZOSliUplevom6+YxcVB6L
atO7+SiHRa9jcqhMJkpmRqOfzNWTKxs7sOOwD0vW1+L7FVX4YWU1Fq07ipVb
arIY1NopMKhPsamlm2ok9/pxtZ4xyu+8y2E3S4rgAmxrvAtQ51bfZWWsCjsr
YzWpTTaV01U4AVfLZVPfL6vAojXV2LTHhor6tpK/z35VzmFSlI8iLkW3xKRS
/efkNs5isVhzQaOj73H39jWc6G/XuVTKA1Ux2VQx15iIcyWgar16r1/ap8/X
ofX3CWdOlZ4jFdPpSD06g3vhb1xZONNjZqQK9PYVZlJrJ2BQn9PPZ+FQuZmo
6TCokvOnCZxhUpSTWpbp7XM1LoPXtgbtgT2f+e85EQ8qwKhiFpucyfr9iTxl
NpXLy8yfwYljSggXzg9IBk3nGSwWizVTUQ7z7r3H6Euc0NmUNwpvKIlwdxrx
VHHZVNrs9Uvqaxb+dkWuRzRY1h6YTbHZ7K/ZtVYm5Ykac6WicAcTuHrjPl69
fsv5eBaLNWNRbGJkeARXr99BIJxArXU/VCAjZTIp4kbEkEwmFbYwqTwG9Yl+
PnNOlK9Nk6yLeFR2N19cHnfSPvBTHGoiNrV1vxuL11OeaZxNrdg8fRaV69XC
K4TLxHMu3qBnp/SZU1+ATRVgVVYWZM1TmXxq3PrXzPxT9vfGWZVkWsssDGvZ
eKdfbm4ql5nlz9OqxIJV1di4qxHVti4ctXeX/D133tvYVvVjhYTYblKSRzX5
k0bn7xk8fPSs1LsbFovFyhJdX3fr5hWc7O+AmnAZuamQkXMqZm7K7PWj7FSn
cAvUtGdyNvUV8CmaIxXvOopW12Z468vgzpoj9aORkfoUk1ppYVJWFjURg7Lm
oibIRllZVN1nsKhSM6bp9PjR79q4FG6bnpWizJSrsQyextVo938uk5qAUxXs
/ftUF6CFV03mQrnC3HlsBfmYA1rSLbnz40d3MDb2odS7GxaL9RVobGwMt+88
RFKc27R0KnJ9wNmcQKgrhWii+GwqrqjoTelrGs2dqjyv+tSaRMnPC9lsNnuG
lmvBxKTcEbnGVC+vfY6JfW2/7Nf6MMY8isViFUcjI+9x9sI1+FoT4rgqez9E
x1t03CWZlD9pmSUljsuISXXrnMnMSU02Iyp3TpSVRVmzUdm5qBgaPZ/Lonqy
2BqZuMfh2jC27HNi4dqjkq0QM/pZfLxqS/HYlDU7tWSjnp36YdURyXE+1Xk3
K3wqh1H9wZwJZeSofl9WuAtQelkhhlXY+WyqYuLMlLyf/vw/rKjC4nVHsbey
GdU8c2r6zmJSccmidCfEthRHb2IAT59z5y+LxZqbol7R27euytk0tA5OvEif
N5UqMpeyZqd6hMPitbzj2ZCJev3mKZ9K9dbJ3r6gYzU8dYuNOUcWXlI72Syp
ZZZZUqtyPFkeypqJKtDTl9vRN1E/X6l5UlGYlPj96hbpvz/199nKJJ+iz511
K9AZ3D87//afnAM1ycyqKXmC7WKi5447cXqwB9eunMLzZ49LvbthsVhfgYhN
PX32HCfPXIIvlJTXr9r8cQQ7U4gkijtzipzM6vXT4G5NyfVZ68ypvDWJUp8f
stls9nRs7MOISdXlMKm2nmO4eOVWqd8CWCzWVyJaB3r0+AmUY+fF8Vwqi0mZ
HaIZJiVnSem9fcSRrDkpYlAZ9+k8KjcPRRzKn8Oh9FlRqmVe1Hg2Kq+jb4r8
6VMur9PZ1KJ1NZKj/JFyU+uLz6as2alFG2rw0xrKTh2RLCa3127S+VJFZFN5
XX9WXpTFqyqy2NSUXIhL5eSmcvNS1vxW2cZabNzdhP3VzaV/H56H1rfXiM6k
fAlp+pjOz9q60xh6O1zq3Q2LxWJNqrEPo7h3hzr9usbZlNICVY3PHptS+6Bq
7eJ1msXruQtkp3LX4AvkROao411H0Nm8B0HHmvyMVI0x7yiLSS3JYlLj3X2f
6ubL7edbms+h6i0zo6YyL6rUPKloTIoyaEt0FtU0zuh89s3oDh2W3HDW/y98
ETZlcd5zm5ksF46J7fnSeQ0vXjwp9e6GxWJ9BaLuqBcvXuHMWZ1NNRozB3xt
KfSliz9zSu/1U2UvDF1762tT5BoJrVtM3OvH2Sk2mz2PTPstVy6Tihg5KRWX
r94p9a6fxWJ9JXo/+gHXb91FNHUCjkAssx+y9vZlM6l0QSZFx2TWXFRrd4FZ
UZJFqZl+vtx5UWS9py8mXjN7XhSxskKZqJppdjdTbupQTSvW7bThx5VVGTb1
85qjWLGp+GxqpaXX7+e1Nfhx1dHx7FQp+NQkrCqXUZnzqbJnVRWyNWdVkc+m
llpfrwCbokzW8kosWF2N1dsasKeC2dTnHjcQk2rwxAwelUCDNw5vawrp/jN4
M/QOv/BcBxaLNQ80MjKM+1Y2RZ1+CuWmIrPQ6UfPR71+Mahal57PUnxQEs6J
Z+rMEzYV76xCu28HfMSOsliJlUktnDAnNc6kVkzCogrNi8rlUQunlo36mniU
/DsvMP6+RieikZFyi7+Xz74BPaFypHrrv/z/jQn51HRYVW7fZVOB17BwKaMv
8JgSwPmzCl48f4hffuH+FxaLNTPRdbbUB3zm3GUEwim5jkDZKWcwjs64ilSR
2ZSZnepN6x0xtOZBaxu5M6/zr6vt4dlTbDZ7TttcC9aZlD5Tqt7Yt0VTA3j4
6InY3/K6EovFmpnouI2yE9du3EVrFx279ebth/KZVH5OitiT5FA5uSjJo4x5
Ub52ykVpWTwqq6Mvw6IoG9WXOZabtKOvCPvbI7Yu7KsOYuMeB5as13NT31On
35ojWLZR50nFZFNmr9/STTVYuF5nUyXNTk2VUeUwptxc1aTO/Z3yXsvKpaoy
/uOKSizbVIe9lUFUNXbw3KlJPZ6vNvv7yMSnfKE0+gfP4/lL7u5jsVjzS8Sm
7t2+Jjv91KQLSspp5Kb6DI40W71+vePZqRTNnXJ9gk2Vnj/lmmZJJXtqEHJv
grt2UT6Tqp2ISZlZqWU5M6ImYlHWvj4rj1qUzaNqpzg3qtQcqdhMqtac1UVM
Sv/beJqWI+jagq7Ww0j3NZT4/8qnev6m6YIzp2wYn2Hl0C22rX4ljJcvHuHj
xw9yXZnFYrFmouHhEdy6fR898UG5nkDXunpak+iMKUgqWtGPHVLCUUXv9aP1
D284LXsqpnKNbenPIdlsNjvb5lpwfWaeVETe0n5NGziLJ09fYIznSbFYrBmK
mNTLV29w6swV+Friefsh2gc1yPx7dk7KnCdFrIkyUCaXKjQrarynL59HOQKp
LB5lXldEbGyyWVGzsd8lNnWoNoztB72y04/mTZEXrD6Cso1HJUuazV4/yk4V
njtVURouNclMqmL4d3LeVPbMKT07Ze0L1NmUnp2qwu5yHyob2plNTXrsoDMp
YlGmKSdFTIqOHVgsFms+ijr9bt+6gjODPehPe6AkXTovInYk2dRsZqe6hdvE
6wXk6+rr6fYCbKr0HCqXScU6q9FsX1eASVl6+7KY1BIU6u8rzKFyc1Gf4FFf
e09fQSb1s86kaKZU/eJMdszTtAwt7i3oDVeV/P/JrLKrgllCK5syuZR+q6X8
uHfnKkZHR0u9y2GxWF+BaF9y9/4TJLWzsPn0NQ1vKImOPgWx1OywqZiiyV4/
mmcQ6EjD1ZKWax3mGsdk87FLfS7JZrPZ5Dwm5dZzCs0dCgZPX8bzF6/kWjKL
xWLNVM+eP0df4kTecZDJpOj6nkJMimZBEW8yGZTpQEc2h8plUfR4Z3M6Kx+V
OzdqNnNRU3FVUye2H3Rn2NR3y6rw46pqLN10tKi5KWuvn5mdWrSe5k5Rdqpa
8qk5x6YmZVbT5FZWNiVt5rAq8XtiU/RvsFz/e/ywshK7DvtkbqrU79Vzymbn
r0vPVjcYXKrRG0OgXUH/wDk8ff6y1LsbFovFmrFePH+K86ci0IhLpYhN+Y3c
VGoW2JRpeu7oeLcfzZ0y+dSE/WWl5VTJnlp0teyHv7EMbuIi5jyp3FlSefOk
luTkn3JdiEUtttgyN+pT+ahSM6MvwaTqjJyUyaTErVv8zVrcW9HXNp+Y1Az4
VHSCbcLMTmXYlFPmpgb723Dn1kWMjr4v9e6GxWJ9BaK1U7o2L6GehsMfk2sb
7tYkQt1pROLiPX4WZk4lxHNG0np2irpkKDtlDyTkdbjW7BSzKTabPads7Idy
mZTdH0V3bBAXr9zBmzdDnGtnsVgzFh2f3bl7H12R4+L4KJLZDxH7oWy5mZPK
nSdlZVLEoPI5FM2MUuT93K1KFovK7euj5yYX5lH6z2K6FPvkbQd0NvXdMj2/
88cVVVi+uabouSnTxKeWbanBEqPb76fVOheT3X5lE3T6zTVONR0+lcelzOcy
2ZT4G0gupXvRuqNYs70eeyr9pX/fngu2zKGUTIq2KdnhF4OnNYWLl69jZGSk
1LscFovFKop+/fVXvH37GtcuD0CNu+V6tpr2QVW7DX40G1zKzE8ldQamdQi3
yFlXMudRiE2VsN+Pevu6gnsRaFqRw0lMJrWgQE7K2t33GSyqfpHFCyfgUQtK
z4hKzaRMi68FXdsRaa+SebbSM6YZsKmp+FOcNsOm7DqXIt6bcOPk8U5cv3IK
jx/dk9s8i8VizUS09vHq1WtEkoPwh6mvJSbXI3ziY2JTybRWdD6lUHZKuCel
oT1C1/PSOomenaJ5Bdzrx2az55JrLetKcm3JsLM5gd7EAO7ee1zqXTmLxfpK
9H50FLfvPEBH7zE0evuy9kN1lu6+gkzKmCk1UT+fNReVNzfK6OpryslHjTOp
0jGoQtZnTjVj5dYGyVuITf2wshoL1x2VfGo22FSm229LDRZv1Lv9flx9FN8v
r56HbGoqJi418fNkZk4tMzJTK47ILNnPq6vF36oeuyu+cTaVw6SIR5kOtCmS
SY2O8pwGFov1dYnWl968fonrV07msKmQcGSW2RR1+xmzp9Sw7PZT09Zuv4n4
1JdlUs22VRMzqUnnSS3NYVG586JyclEZFvWzwaIK5KNKzYi+KI+ycD+T19Ut
glP2+JWhI7Ab0Y5qpPrq5wBb+gJsaips1pqbMtiUmnSjX2nB2dNpPHv6EB8/
jpV6t8Nisea56Hzo7dt34vzoGsLdqtENE4UzmESoV52VXj9yUtWzU9TtR9kp
WkOh+SzZbIpzU2w2u3SutfTvWLkUrd+qx05Lrs9isVjF0Juhd7h89Ta6owPy
2hzrfsjMahZmUopkT8SgfIanzKO8sUxXHx1/TZaPKvX+ONfEpvYfacH63Q58
v1yfeSS5yNqjWLZp9tjUqpxuvwVrjuKHlUdkp2DBXr85yqem5E8+h8GmqM9v
xRF8v4J6Do/IuV8rtzRgX1Wz/Hcq9f+VL24rkzLmUNaJ2yZfFN3xQVy7eRcj
wyPMpFgs1lcpnU29kJmKU8d7oaXcMr+kKi1QVXPm1GzyqdxuP+JTXmNOzmT9
fl+CSa38BJP6eRImNdnMqBweVW/lUQuy50eVmg99cR5l6Ue0cj9x66xdDG/T
KnS17EOiu2ae56RmyYXYlNietXQQp0/G8fwZsykWizVzUf7yw9gYrt24i44e
LTO7wBGIy16/aEqTOadiHzdQt19cUdGT1tAeHc9O0XoJrZFwrx+bzS6V85iU
S7dP7KOu3byDd++GxXkXZ9dZLNbM9W54BOcuXUegLZm3H5qYSaXgbtG7+SSX
CmWzqEI8yu5P5vEoMwOalY1yln4fPBUftXfjYE0I63c58MMKvVfve3G7YM0R
lG0s/sypXD61bHMN/n/23gQ8rvSs9yTdpEk6T8IkQwgkgdwAkwkXuEBuIBeY
ADfcEMgECLnJTQIZmDCEpLvt9r7vS9u9d7vbbi/at1JVqUr7WotqP0ebJVmS
LdvyItuyJMu2ZMuyFsvd/znvV+eUTi2SZbfKR8v7e57/I1tVqk1Vn059v3rf
d+3uVKzaEZ49RX7q2U1HRf3WtH7KaCc1535Lc1NHI26KsnxLCjbvTcMbR4pw
NLvK8OfKYztuiKqxdqtxIb/Ii7rjp3C17zpGR3kuA8MwixtyUyMjd9Dd3YXW
RnJTFjGfRjiiSF+/ZM2c0vyUL1yjJSvXJ5er9VPW6edPJclNBZzpqLC9ggKq
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
VSrXT3E4Cz+6WRD0OeeSaglNrafRf+0G+yiGYZIKzavzBk8k7N2nr92Mr5WK
91DxPsohwj5q7pKSW4ND6eV48S0LNuzNxPNbab7TVL+85VuOYvXOFKzfk4JN
VD81h45qq76f3wvhfn4054rqplZqbkr09Tsm/FTEUW2K91OxdVOxMdRPrdP6
+VFN2hE8R/38dmRjzZ5crNmr1k0p9/flgwU4klVp+HOCjhssxT7l2EHGiY4z
GL4zYvSywjAMs2ShGotL3efQ2uiCTHve1C+MQv8OmCFJRWFnJBxVaI79lNbP
r1bUTQUCZSgpOQJr/n6Y83bAnLtFyaZw8igblaiOKmcD8rPXh/1U5hpdVk/V
UulrplJj6qVS9DHeCxmbFTClrIElcxecZe8Y72A4CZI95aaon1/IGuOmitHR
JuHGjT6jlxSGYRY5VDt16/YwGppPitqpnIJasZeSba2FvdKPKncInkBy/RT1
9vNJ4dlTTrV+qtQpo7BKgqU0iLzCKT81XX8/o98TczicR4zOSVlLfHAHmnGm
6xKG79wxenlkGGYJ0Nx6Wll7/FHrUrhvcHytVGxdVLyTiq+NYieVvBzOrMAr
hwqwcW9GuEdepM4n3N+PnBXVNNFMqM375sZP6d0U9fNbu0fnpqh2attUXz+a
O/UcOarNx6LqqCJ+Sj9/Kjaz6fWXTGel9vP76Tp11tTWdKzclY21L4Td1Kpd
WVi/JxOvHio07PdPr1N6zZVWSzjZeRbDw3f4sywMwzAGQ+swzZ4auXMLV3su
4ESzX3VT2WE/5TOF/VSIeodVKKnW1VG9X0el9fPzweerRHlZFiym12DO2wdz
7i4lVDO1Neyn8iibVT+lc1Q566dqp7Rk6vv8rVZrpnTzpWIdVZSvMtoRPeak
rkFB7l74ao7B70hFwMU9++ZtPFP9/EIB5XUpFai9L6kPZhnqlNdnZ2cjBgev
G72sMAyzyHn33fcwMnIXXee64fQ1wVRIffTC+y85Ni+KqoNw+ZJfOxWpn1Li
DMqo9sooc8nK9cuwloWQa/fN3N9vHuyRcDicWYZ8Mr1u8x1ivbEU+9HUclLU
cTIMwySb8fEJtHeeR2FFAJlxtVKOGCelealwYuujRBL06+PPziQ/NHuK6qeo
dmfVtmPCT/2Hzk89s/Ewlm9NEf32yB9Rn79N77OGKtLPb1/YeVFPP5o3tVpz
U9vDdVPU12+ZFs1RqX5K76YSJdZPzeimkuGotJopCvXz20T9/DKwek8O1u7L
xZoXqKdfJra9lIM3jhQZ8rsvKPaipe0MBoduYeLePXZSDMMw8whakyfGx3B7
6CauXunCyRMhNAQLo/uH+S1qj78i1VE51Xqn9+OnQggG/aipKYbF9DbMua8o
eVHJC0p2q25qG8x5WrbGOKoNMb39dI4qM3be1Cy81FLp75e2AaWWfXCVvY3a
yqPGOxfO7L2U9noU9YyFav/LsJtqaHCg62w7RkdHjV5SGIZZAtCMhdG7o+g8
cxH2Mp94z0d7LdTbz1rmR1WtBH+SvZS+hsqrxBWSUe2TUebW+yl/eO9nutlT
82CfhMPhzJCYvn2lNSFc6bmKe/fuGb0MMgyzBCAn1X3pquhhnJEfv0ZpXkrz
TFNzpdhJzcdQb78jWVV442gRdr6SizU7U/HcxsNqzc8h4XnIA9EMqudVR0U9
+Dbo6qge5Km26rJFrZnapOvpJ2qndieYOSX8VGq0n9LXTmlzp2KzPn4W1az8
VLL6+W2gfn6pWLkzS9RLrX8xR7iptbszsePlHLyVUvxYftd0zFBcGUBH50Vc
6b2GO3fuit4PDMMwzPyE9pgmJiYwePM6rnSfwqm2ABql0ug9cVFDZYEU0vbE
NT+lzaKaba1UCKFQCG53NUqL82DOfVPJ6zo3tU91Uztgzts+FdPWcCJuaqPq
ptZORd/fL0PX10+rmVqKfip1JczpG1FRsA9VRa+zj1qI0V6D2uswMmuqMlzL
KFehucWLK1cuiFkw9HpmGIZJJvS5lrHxCfT20QzwJjE/gWYj0Ne8Qi9s5QHU
+CT4HkPtVKTHn3Jdbqqf8ssoF35KEn7KVBQQzmy6njm8J8ThzMOoTiq7wIUK
h4S2k124dXtEOCk+zmEYJtnQHnZv3wAcnvpp1yl9rZTeS+n79el79iU8DjF6
rV2ieTutFK8esmPvG2Zs3peFFVuPCjel1VCRB3pu01Es33IMK3ekYC31+duT
io17w3VUW/ZNn80x0bzUhkRuSjdzivr6Rfkpfe2Urq9fOIdF4txUVP3Uobgk
300pt0W5rc9tTcNK6uH3UjY2vERuKhtr92Ri5ytZYtYUOcJk/F5zlGOGKncD
jp84K2bjjo6OcX0UwzDMAoPe7w0O3sDF8yfR0eJEk1QC2Wue2henmo0g9fiz
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
mDiuXR8Ucwap75fhe+kcDmfOQq/pHHsA5nIJRU4Z1YFoLxWiOVNyA9pOnTV6
GWIYhmGSxED/RYQ8JuP30Bd4HtZLkWPRzkf/Jq8T+/Pl9rfFecnvaB5qpnz9
a1+Z8Xoor+5bFTmN+hHqT9u49sf43K9/atrLp9vxMJevP418Gvmu6e7Hr332
kyixHoi7/M1r/034q9nM7nriiSe4BksfmjEVskCSS5U4Rd++aC8lQZaD6Dzd
bvQyxDAMwzAMwzAME8fVvhvItjqRNg/20Tkcztwmu8CH/LIQ7A4ZlT4ZgZj9
Cn9IRuOJU0YvQwzDMEwSoDnYvVfOGL9/vgjyfrzUdKHLpPN++lf/91l5Gcr+
3c/PeD0zeakHhfxQacGBWV/+bO6jPj/47l9HXXbmsd2zdlLa7WMvFR0pYFaO
54ohyTXKV1/CXn6nTrWJtYBhGIZhGIZhGGa+QO9RLl7qM3zvnMPhJCdZVi9M
pSHYqmWUeWW4QvG9/OpbO3i/gmEYZhFy88YAOlqDhu+dL4bMlZd66oM/H+nl
R7396Ly/8Z9+VZz20Y88jR/94Jt4Zd8qpB7ajt3bnxH98PQ//zdf/9MZr2c2
Xorqjqg336c++fG40579j+/N+vKnu4+/8qn/TfQejK2d+qBy3301aZGf/953
/kfU6dSnr6LwIN54aS1+4/Ofjjrtm9/4M+zc8lPDnwfzLjRjKlSkeilvXL1U
eMbUcVy71od3333X6CWJYRiGYRiGYRhGcHNwCHJDu+F75xwOJzlJN7uRVxwU
XqrEI6MmzktJCDa1oK+vn90UwzDMIqP36kUcr6syfu98EWQuvNRf/9WfwFVx
VLgZ/Zwm8jA7Nv8HPFUpcZfz4p7noy7jt7/4+Rmv50Fe6tc/+8sotr4pTqdZ
U7/+a9F9/f7hW38x68tPdB9XPvdDBN2Z4vStG/497vRC8+uRn/8d5b5o3yf/
pq+FosdD/3Mrnv0nw58D8zLUyy9YAEmuUI7rPAm9VEODLHr58XEewzAMwzAM
wzDzhStX+1HlrjN875zD4SQpNGPK5oelUkJxbbyXogSU7wXqWjA2PmH0ksQw
DMPMIZe7T6HObzN+73wR5P16Kfq/35n+0NdryX4p6nI+8fGPzng9M3kpqscq
s70V9fM0U0p/Hqpzmu3lx572kx//Y9TPBpwZojZMfx6qA9NOJ0emff/ppz8U
9fgcObAl6ueW/ez7hj8H5mXIS4lefmVKahP08aMZU1Qz1YDJyUmjlySGYRiG
YRiGYRhB1/nLsBZ7jd8753A4yYnJKXr50YypIqeMyoAMfwIv5QrWY3Rs3Ogl
iWEYhplDus+1IuTJNX7vfBHk/Xqpl/aumPHyPdWpeHnvSjGD6b//+Zfwe7/z
m2LuVGwfv4//4kdmvJ6ZvNQXfvPX4q53787nos7z+7/3W7O+/JlO0/KZT38y
6jwHX98YOe1rf/HlqNOe++n/EjVczrIj+Mof/27UaVRTZvRzYF7Gk42QPx9S
iGZMOZXjumDCmqnGRgm3bg1xzRTDMAzDMAzDMPOCjtPdyLQ4jd8753A4yYnJ
iQxLrejlZ6+RUeGXUStJCEV5KQnOUD1uDPJ+BcMwzGJhYnwMXadl4/fNF0ne
r5dK5Gy0WHNexid/6RcTzmqKzVx7KZpllUwv9Vu/8ZlpvVRsj0LKk08+IaL/
3kc+8mHUlLxj+HNg3oZmTAVtkOQq5bjOn9BL1ddLuNh9DmNjo0YvTQzDMAzD
MAzDLHHGJybQ1HrW+H1zDoeT1KTnu5Br96OgSkaZL9zLL6j3UhJ5KRlnui7g
7l3er2AYhlkM9PZcQmtDjfF75oskyfJSlUUH8YmPfyzusn/hqadErdGvfTa6
3mgxeSlL9ssP9HBPPPEE10rNmGyEPDmQAhZIcrnayy/WS4V7+bWfaMTIyLDR
SxPDMAzDMAzDMEucnqt9cHgbDd8z53A4SYzJgTTq5Vfgg7lcRrFbRjXNk4rZ
rwhKMuobWzE0dNvopYlhGIaZA853taMhVDwP9s0XR5LlpV7YuSzqfDQD6vCb
mxF0Z4rT7abXFq2Xol6Feg/3oV94KvL/X/zY0/jG1/+bcFdG/+7nd7LDM6b8
NGOqRIkroZcSvfzkWgzfHjR6aWIYhmEYhmEYZonTeeYCiioDxu+bczic5MXk
EL38Mq0emEpDKHTIqAzK8CXYs3B6ZQzcGDJ6aWIYhmHmgNMdMiSveR7smy+O
JMtL/egH34w637/96z9EnZ6f9eKi9FL0eH7gAx+IfP873/6acHGVRW/DVXHU
8N/3wkm2OmPKpBzLFakzpkIJvVSd7MZt9lIMwzAMwzAMwxhMY3Mn8mxu4/fN
l3CO5VRj/xtZ2Lz7beVrNlJyawy/TZxFmNgZUwEZnlD0jClKtUfGNfZSDMMw
i4JTJzyiv5fx++aLI8nyUj/58T9Gne93vvh5+B1p4jRb3qv49c/+8qL0UkXm
N6K+T46KLu9v/vpP8I9//5f44fe+gWd+8j3s3/28cFVG//7nb7LD8ZkgheyQ
5JppvZQse9lLMQzDMAzDMAxjOIG6DmTkz4M98yWYI1kV+Obf/xOeePLJqPfk
v/Lpz7Gb4sx9hJdyI7coAFu1jDK/DHfMjClKjb8OAzfZSzEMwyxk3nvvPYzc
GUZbU/U82DNfPEmWl3p578q4y/3wh38BX/itX4uqJ1psXory2//n5+LuX6I8
9dQHsexn3zf8OTA/o3opbx6koA2SXKUc0wWmcVN+DAz04/79SaOXKYZhGIZh
GIZhlih3Rkbg8B43fr98jvLGkQL8zd99H3/8p38Vl//rL/8Wf/edH+GZFdtx
KK3E8NtKoduU6H037T8cTC02/PZxFllMTqSbXcix+1FQJaPUJ8OVYMaUIyDj
Sl8/Jid5v4JhGGahcv/+fVy8cAaNUtE82DNfPEmWl/I706PmLD0oi8lL7du1
fNb3m7J353OGPw/mX1Qv5cmFFLBAkiuFf0rspQI4f/4sRkbuGL1MMQzDMAzD
MAyzRDl3oRvFVSHj98vnKN/7p5/M6v3sz//8B/H33/1X0T/PqNtK/fqeeOKJ
aW/j2ylFhj+enEUWkxNp+U5k2bywVsko8cpwJvRSEk6e6cLt28NGL1EMwzDM
I0Je6kznCdQHbPNgz3zxpLYyBU8//SFxrPbBD/48nlJiy31l2vP/+Z/9QeS8
dNx39O2t0563zP4WvvW3X42rj3r6wx/CxtX/L37279+NXNbnfv1Ts76e9CM7
xffoNDrPn3zl9+Kum86vv96/+ss/mvXlz+Y+fuWPfzdy2XSezGO7xfetOS+L
OqipY/Qn8fwzP8DGtT/GqmU/wje/8WfK6U9FPR50fUY/D+ZfNC+VA8mneSnf
tL38Ojs7cOsW9/JjGIZhGIZhGMYY2k+dhb3Mb/x++RzlG//39x7q85Z/8F//
1LDb+h/LNkf3JvmFD2HtllewZc9B/Phn6w1/LDmLMCanSJa1FtZKGSUeGTVB
Gf6Y/Qp/SMaJ9lO4wb38GIZhFizUo6vjRB3q/JZ5sGe+uBJ0Z6Km9DBcFUcR
cGY88PzivOVH4atJm9XlVxYdRMqh7aLuiJwXXZ/+styVxxJe70zXQ9+j0xxl
R6a9Xm91KqqKD057npkufzb3kc5D9Wb683zvO1+POh5eu+Jf4n7uuZ9+P+o8
n/n0Jw1/Dsy/aF6KZkzlQ5JLlWM6zzReSkJbWwsGB28YvUwxDMMwDMMwDLNE
aWzpgKXYa/x++Rwl1ks9/fRH8ftf+hP89u9+CR/56C8mdFPPrtxhyG2Nre36
6n//W8MfP85ijjMckxOZ1lrkl0korpVRHZThS7Bf0dTSiv6B60YvUQzDMMwj
cn/yHk4c90L2mufBnjmHkzhf/tJvRx0P//j/+fu488S6q6/9xZcNv93zK9mI
9lImSHLxjF6qqakOAwN9Ri9TDMMwDMMwDMMsQd57DwhILciz1c6DPfO5SayX
0tdDpeTW4Ec/XhHnpchZPehy32+/v2M5VXHfozlY+tvxrW//80Ne5tzfpvd7
fY96m45mP9xtmevHg54bD3v+h/0Z4zPlpTIsbpiKJRS7ZVQFZXgS7FcEpAZc
7uH9CoZhmIXK5OQ9NNfVQPLkzX5P2/D9dc5Sy3e+/bWo42HqJfhf//CL+OH3
voEf/eCb+OIXPhd37L59038YfrvnV7Kj481TjuXsSlzTeqm6ugD6+nuNXqYY
hmEYhmEYhlmCvPfee3B6G5Fldc28n23SxfC99Zkzk5fSQh5Kfx6qo4o9zzsZ
ZfjuD38iaq0++rGPi/fIn/ilX8Ef/tFXhdtK5EBefDNbXN//8cXfFz/3ytsm
0ZfvVz/7n8TPP/XUL+Anz23Cv/z7KvzRf/tL/NInfzXqdvzypz4rvk/ZtPNA
3OXvfTVduKzf+S9/jKc/8jFxmb/48U/iv/zhV/B33/kRDhy1P/Jtmu68b6UU
ijlcn//N/yxmATz11IeU6/8yNmx/PXId2184jC/90Z+Ly6LzfObXPo+vff3b
CW8P5UhWhahR+9Ov/jU+/olP4cknfz4ya4BuF93H1w9bZ3VfDqYV4x//14/F
95548knxuNBpz6/bO+PzhH7uH5T7Rffl/2fvPaDjKK/+//NiW2BzgBf+EEog
CYQfIQQIhIQSAiSUQHhJAIcAocShY8DGxr33KluualavW9R71662ujfcwRUb
G3Bv2Djh+5/7zMxqZnZWWgnba1n3c873yNopOyuzw/r56N6r/izp672/fwxD
x8w2PYb+Th557K/46Y2/ENdMsw5uuvlX+NMTz0p/NykR/2+/9TR7qVRrA7IL
PSio9aPCLXspr2G9wuFZiK07dkX6NsUwDMO0k1OnTmKpv0TMm2lxPduhhL0U
JwKh2VdRytyrcPLcM3+M+DWfezF4KUc2fB47fP5q6TOdx9RL0eO7dn0h5tAx
DMMwDMMwDMOcTchLldcuRJol9Fp2CiWXUqd8lR+L/Bp7+73UE0+/oNunW1SU
bvuYKYm4+tobWvw38f/7xR3Ci2iP+2ToVN0+dC3kWrSPPfbkc7jp5tta/Tf3
X3u+Hjgv1eW80qsPunbt1uIx1LOwz8AJ7boms33JvxndmXZeNT3XP//1YdD5
1JDHi56v/xnNjLOGPKfu76RbFEZOjG3xtbz+dv8W/55efPU90/9GBo+KET6v
pefX9nakWi76+zDOINeG/m7oeiL933/4XqoeWfku5FX5Ue72o9Hng8fopbw+
fLZ1G7777rtI36oYhmGYNkKf8U58ewxLPPaW17MdmaHDnopzlkKztB64744W
P2vd+JNrMWLQW2HN8+p8MfFSLht8/grpM507hJfyYevWLTh+/Fikb1cMwzAM
wzAMw3QiaL2Cfj+uoMLbspPKUZ2UWSK9zt4+L/Wnx/+m2+eaa38a2DYrIU/U
/YTz+5q33XFPi97ELH+Wru+WW3/d6n5UA6Se97l/vBHW9VDo3/MTopPbfE3h
7tvWPP6Xnrqf0ft9RoZ9LNVdaXsNtvX6yJfNiLXqnn/GfItwXq0dSzVb6jFU
ixbuc5rVuZ070XgpC82YcsBW6UeZy486rx8uw1qFU8qqdeuxf/+BSN+uGIZh
mDby3cmT+HLndixyWUKvY7fkpNhNcSKQ0rw5mDVtIEYNfQeD+/XCuFG9kTB3
BAotMfA0pEf8+s7taL1UFrxOC3z+MukzXVOIXn5ebNy4HgcP8uc8hmEYhmEY
hmHOHqdOncKuL3fDVuwyd1K5Lfmoc9dNtealqLdc1IUX6fa578HHA9sfe+p5
3bYbfnaz6FNHx/X+eJTo3abdPmD49LC8SfcePcRXchz/fm+g6DVnvA6qL6LH
KWqtEHkUY53UJZdeIXoM/vvdgeLajc915933t/maWtqXetZRvzt1f7NQrRb1
FzTWTpED0rqljz4ZF9hG/RR7vfMJBo+aKWqYqEee8bzUu7C110LPSY7QrAaq
58tv6f7+qXegcR/q3ffSq73x8KPPBH7War0a1cSpfQYp5P1eeq236DM4ZVaG
+O9Ley7q6xfp90A4XipFmTFlLfOhuNGPGo8fTYb1iiavD5+u28BeimEYpgPy
7fHj2PLZOixsMvNSYTop9lIcTgeK0UvlwucvkT7TOUN6qbVrVmPvN19F+nbF
MAzDMAzDMEwn4sTJk9j02RZYCp2tOqnUDuylbrntLsxOyBcOgZwIzXAyeok3
3hskjiXXoPUqNK/I2IfuEUOt1RN/+XuL3oQ81qARM2THFGtFbEpJYH+qydHu
q/ohbYyejGYgUS887T7PPBdczzN1Tlabr8lsX6olU2c90Xwn+pkY93noT38R
ve5oH/pZGrdrf4bzk4vxj1fewdipiUGvlfoVXnOdfrZ1/yFTWvz50t+nen6a
GfWja643XNvTgePJMRmPN/b6mzY3G3/4418CM6bo71e7P/19aPefGWcLOif9
9xbp90G4Xiq3NLSX8nh9WLnqU+zZzesVDMMwHY1jx45i3Zpl8Dtzg9evg/xT
libspTicjhlDLz9njvR5rkhKYwgvJX3OW7kcu3fzLFGGYRiGYRiGYc4ex49/
ixWr1iInv9HES+ndE/X8kmNSQxXxtfaWvVRroZod8iF0LNXsGLcZz/9+31Ft
qk36eNCkkNcajpf62c9/2WL9D4VquYy+aOCI6DZfk3Hf7j0uDjgpNVTLpd2H
vld/fpTEjEpdfRHFOCeqpRjrv954f3CL12d0dOSZtPtQnZe6jX4m2m0XXdQD
8enlLV6PsefiUJM+fdRvsL2v9+xH46Ws9cgt9qG43o9qj1/07dOuVXilLFm2
Att37Iz07YphGIZpI0ePHMKq5R74HDnBa9chnZSJm2IvxeF0kGjrpSiql2oI
6aWWLVuEnV9si/TtimEYhmEYhmGYTsSxY8fhXbgcWXkNQWvX5k5KyXnkpX58
w02iT556LPXXM+5D9VPamNUThfIm117/sxavNRwvZez1N2R0jOm5qN+gdj/q
8dfWazLuSz8f4z7G+q2/vdAraB9jPz2zmUuTZqYJh3T/H54QPfiuvf5GXH7F
Vehm6JOo1rKFe31Gb3jzLbcHtv3r7f4hnVWoUH1aW/+b+LD/2Ii/D0Kn2Uul
Kl6qqM7cS1H8i5bisy3bI327YhiGYdrIkcMHsHRhHXyO7OC16xadlNFLRXqt
ncPhhBetk6Jkw+dXvZTH1EstXuTF9m2fR/p2xTAMwzAMwzBMJ+LI0WOocyxE
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
jtFLZSt9O+uk97PH1EstWujG1q3spRiGYRiGYRiGOXuQl6qo8SDdJvf0Ii9F
PfrsZbKXojqpsno/yhvkFNfKNVQ0a4rcFDksqpkiL8Uzps5cps3JDlpP6DfE
vBYp3Dz3jzfCXrsg/zQhOll3/BVXXRP28R/0G6M7lr1UpKP3UtkFHhTU+lDt
9sNpsl7R5FmIT9d/HunbFcMwDNNGjhw+gGWLG+FzZMtr1sJLqbOlypQaKVqv
rpe/CjdVoZk1lS/6+dFxXmc2e6lzPK7aFLzZ61lcdunFIT+TdenSBc8+84iY
/xTp6+WciZh5qULpfdwg5kiZeakli73YsY0/5zEMwzAMwzAMc/Y4cvQ4Gl2L
kWGvF+vVspfyCu+k1kqRj6p0+FHRKDsqclXkrPLKfGLWFPXzo+PYS5259B8y
JWhdQTtTimqfyO182H+saYaPn6c734z5lqA6qUsuvQIv/PMd/PvdgbjvwceD
nu/Ou+/XneOa634qHu/e42I8+cyLoqaKnufdj4aLc2mPpfNpj2UvFelo+vhJ
79vcYh+K6vyo9ph7KY9vEdZv3BLp2xXDMAzTRo4dPYxPV/rhc+TIa9ZNar2U
OluqWnZSvkY5wk1VK9tKm2dNUT8/clNUMxXxdXdOa3HXpSE1YSwmjPkQwwa+
iaED38CMKZ+IWVL15YkRvz7OmYzWSUlx5sge2ucM6aWWL1+MXTu3R/p2xTAM
wzAMwzBMJ+LYseNYuGQlsvIaxHo11T3lFroDXor695GTqm6SQ26KHqNt5Kao
3x/VV2UXNAk3RbUXyeymTnteeq23vvdK9x667WMmJ7RaszRlVmZgf+OsKpor
NTPOqjvnM8+9FnSOqXOyAtupXuvt3kMQl1YWdL3kwrTH/fTGX+i2s5eKZJqd
FL1XU63Se77Eh+JGcy/llbJw8TJs3roj0rcrhmEYpo0cP34MG9avhN+ZK69Z
N+XA51W9VIVcHyXqKJxKGpSefpWaWVNKzZSba6Y4nHM/hnop4aXKpPdwU0gv
tWrVCuzZ82Wkb1cMwzAMwzAMw3Qivv32BFav2YDcAodYs6aaJ+rNRzOkhJeq
96PK6UeNWw79meqnSkL08+OaqTMTqkfSepxLL7tCt334uLmteqkRmpopoxfq
+fJbQc85J7EAF3Tpottv4IjosK534oxU3XEXX3KZbjt7qUhH8ce5cr2UpUz2
UrUeP1xBtVI+LF2xEl/s3B3p2xXDMAzTRk58exxbt2zEwiarvGYtvJRd8VKV
soMStVK0Zu2S4lBqpqoUL1Uiz5nya+dMsZficM7dGOulcmUH7XObOilyVRs3
rsfBgwcifbtiGIZhGIZhGKYTcfLkd9i8ZTusRU1ivZq8EvXlIy9VXC07KKqT
ovXqeinVLn3NFO2n1kypc6bYS53+vP5Wv6B5T/Hp5YHtM+NsiIq6EBdccIFI
a14q6sKLdNuGjI4xfd4bfnazbj/q8afdTtfQZ8B4PP5UT9z92z/gpptvE3On
jH382Euda9F4Kek9a63wocQpv8fdhvUKp9eH1es2YP8BXq9gGIbpaHz33XfY
vfsLLHIpXsqZDZ/XptRBVSk9/BzKmrVHqZmqV3r5VQT38mMvxeGc49F6qSz4
pPe+/F73hPBSbmzfvlXcKxiGYRiGYRiGYc4Wp06dwp49X8Fe4hLr1aqXojqo
khrZQdW45PXqRq/sp6ivH9VRqb387GV+WIq8yMrX9PKL+Lr7+ZVBI2cEeaZx
05JC7p+QXhHSS1EdlHEb1TeZnefmX9yu2+/FV98LbJsUkybqtlqr02IvdS5G
8VLSezXN1gh7lR9lTX40SO9xj2G9ot7tx4bN23Dy5MlI364YhmGYNvKf//wH
Bw/sw2K3TV6zDnipEmW2VIOmv5dX8VMNcn8/UU9FXqpI7uXHM6Y4nA4S1UtJ
73e3rRUv5RTummEYhmEYhmEY5mzyn//8F4ePHEV+mUesV+u8VJ3ct69WcVIO
WqP2yo+V1ftRXNPcy89S7BXHZdod7KXOQGj2k9H1PPrEcyH3b8lLUY0T1Vtp
t42eFG96HpoLpauXek+ul5qdkI9LLr086DmioqJw5VXX4sqrr2MvdU5H9lIp
0ns1w+5EHnkptx/10nvcWC9F9ZKfbdsZ6VsVwzAM005OfXcCS7x2eb1a56Vq
lB5+Ls3cGa/sqQK9/MqU2qqC5hlTjmxl3TvSa+8cDsc8mtlS3nzlvR7KS9Xj
yy+3R/o2xTAMwzAMwzBMJ+S/33+PwgqfWK/Weinq1Udr0nUe2Uk5pdDXOqVm
imZMUc2UPGPKixz2Umc0PXpcEtTLb+zURNN9W/JSFPJE2m3vfDgs+BwZFbjw
ou66/QaPkvv99f54lO7x7j0uFtuSsmvE9qlzsthLnetRZktlUd9O6tnp9qNR
en97DesVlQ1ebNzKv0fLMAzTUTl16jssX1QDn0OudfK5rRov5VDWq72ae79H
mTNVq/Ty08yYcluE2+JefhzOuRyjl6o1vMebs3ChG3v27Ir0bYphGIZhGIZh
mE7I999/j3rnEmTa64VTojlReeU+2UtRDz+vXzgplxJau6bHy+qbZ0xZS3zI
KXQLL0Vui2dMnf68/cHQINdErqrvoIlB+7bmpW659de6bbfcdlfAKakhV2U8
x4xYq9j25DMv6h7/a8/XdMdOiE5hL3WuR/FS2dL7toB6drpl/2xcr2j0LMLW
HbxewTAM01H5z39OYe3qRVjoyhM+SZ43U6zxUsb1aq9SQ9WgzJkqU2ZM2eHz
WMRaN3upzh1ndTIG9H0dLzz/OF576S9Iih0d8WviaKN6qVzpfVyozJEz91JL
Fnvw1VdfRvo2xTAMwzAMwzBMJ2XJijWwFTuFT8q0N+q8FM2caZL+3eJRainI
UdG8KernR/tQLz9bqQ+5RR7htNJtDeylzkDIG/3yV3ebzm+67Y7f4W9//xde
f6sfer3zCe68+/4WvdTLr38YtP3BR54U9VfT5maLfn1du3bTbb/n/kcCx//t
hV66bT+76RdIzKgU26bMysSPrr6evdS5HvJS0ns1u9iDwlo/Kj3mXsrlXYwd
O3dH+hbFMAzDtBOaMbV1yyYs9RXLa9VNFsVLVYfwUqqbcir9/CqV/fNkL9WU
06lmTBVaY4R/efKJ+1tN7KxhEb/es5FpEz/WfY778XVXRfyaONpkyu5YvNdL
lDly5l5q+TI/vvmaP+cxDMMwDMMwDBMZPt+yHcVVXrFWnaH1Uk3ybCmX5t8v
NH/G4fWh1u1HRaM8Z4pqpmjGVFZ+kzg+1XIOrLufh5kck46oCy8ydVOtReul
qJ7q8iuuCvvYCy64QPgm9fg+A8YHz5aSruv6n9wcNLuKvdQ5Gum9nmZrRG6p
D0X1flR55LrIoDWLhUvxxa49kb5FMQzDMO3kv//9L/Z+8xVWLKqQ16ubcuHz
F7XipShuef4U1VWJmqkCMZvK68rtVF7qzV7Phv156aW/PxHx6/2hsWRMFX4t
bvZwFNtnm+7T69VngnpL15cnRvzaOWoy5Z6dojayrMX3+epVy7B/39eRvk0x
DMMwDMMwDNNJ+WbvPlQ1LJG9lK0RtlKvmB+leim34d8wVD9FdVTafn50TLYy
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
85ZFfP2fwzkXk2KpQ2ZeE3KLfWK2VIXTL97v2vtGVYMXK9d+HulbMcMwDHOG
+fb4MaxZvQT+Jrn/ns9TrKwRt+dzp0teS/bkhzf3pYOl/0ev6fxHz2cfDfvY
6RP7oUf3i3THX3xxd7z7Zk9RU/XLW28MPK6dr0QhX0OPd+vWVcynSpw3Muj8
993b3A+P9klfMF7vU+rTRP894zVQqNfeh++9iKaaFN0xrtoUvNXrOXE+7f5R
Ud2QmTxR7JOaMFZs76bMyHrgvjtMXz/17rvu2v8v6LnJ19Hjav2VMafjtZ8e
H5WC2tK5qMifiuKcMbCTX0ruF1wXpZ0Vlaa6KOOsKDMX9QN9lGkPv7khZ0vl
59tRU1MVhmcyuibj41rXpPVNLUX1UI2aNGhi7PGnzqJSa6i0jsrET+nqp8hP
5QQ7qkaTe5K0zd9kx/JF1di2eTV2fbEZ+/Z+Jd0jj0f6Ns0wDMMwDMN0Ak6e
/A7f7N2PdRu2osm7CkWV7ua6qBzVRSm1UXaH0qeP5kV5UVjV3KNPdVHqnCjy
Ow7F/5xuF2X0Tm5NtLVPAe/klX1Tg5JGZYaV+j1dL9VO1CqpdHqwIKcA0xNy
MCUuGzOSLIjLMrgoxUclZshOKuCllNop4aZSZDc1OdaOMTOtGDo5W8ybGjQx
CwMnBPupviNTRJ+/D7X1U4qfel/4KfM5VO8Pno9+IxMwalomps61YVZCoXQ9
lRF3ARzOuZJUaz2y8l3ILfWJ2VI1bn9g/pwat3cRNm3eEelbMsMwDHOG+e67
k/hix1Ys9tjlGVPuPGXGVHtrJxrkNWOa/3Ie1kxR7VFV8Xw0VC5o87Hkn/Jz
ZmDmlE+QmzZFfK/1RlQrRPOgzI6lx+vLE4PckXEfOkdL+1BK8+aImqK50YNh
yZiquw6z0POS66H9U+LHoLEySbedno/2qS1LaPVnQD+3jKQJiJ7cX5zTeK4z
/drbEvo7cVYloq5sDqoKo1GQNTJ4dlSgNupjQ23UYOGj9C7K2KfvNHioIC81
EdbsqbDaZkmJhc2WJmZJ6b1UBsrKCuFwNITwTKprMqtpchrck9YvNSDIL4mY
Paa6J9U/tZRqJWp/v3Ilap8/wxwqdQaVWj/lVvwU9fhrMnNUwX/3PocFi7wl
WLPSjR1b12H/3i9x9MhhMYeKYRiGYRiGYU4XNDvqxImT2H/gADZ9vgOehauQ
X+rSreOqtVEZ9kZk5TuRW+SGrdSL/Ao/CpXaKOGjGv2oVnr0aV2UOivqdPgn
Y889o3NSvZM2Rt9E69AUulaKeMyjeaxJ7jdIKW/wSq+3GtEJVkyYm4UpsbmI
SbYjPlPvoMg/xaU2z5nShnr6UWYn26Tz2DFxLs2asmDYlGwMnZwl+vrJfioz
uH5qhFo/Jc+gMvb3M6ufEn5q0Hx8PCIeIyalYuoc8lNFooaK5lBF2gtwOJGK
6OEn3ceyi7ywlvvFbKk6t76HH73/12zYjMNHjkb69swwDMOcYehz8LFjx7Bi
cS18TrkHls9XqqxNt+czq1OubfDmBddMnSduinN+hzyduzYFdWXzUGKZAGty
fxMX1UdxUZr6qICPamlm1BlwUbpaqYmw5qg9/OKEg5K9lFX5aoHFkozqmiJ4
vI0av9Rk4pjqDd6orjk6t6RuV3vv1Wj+rP2+xmRblUmqQ2yv1ET1U2b1U+r8
KUN/P/JT6gwqujeF4adEHNlY5CnCxvUrcOjgXpw88a2YzccwDMMwDMMw7YX+
Hf7dd6dw8NARbNm6Ey7fMjE3yriGS7OjZB/VFOjVRz5KOzdKzIxyy+7H4Ts9
M6OMNVChap7qvbJvMjonrXfSuiaq5SJ/RrOu6NrVuVficUfz4+TZKNSLsLDK
jVlJBRg/KwfjpEyNtWI2+SaNc5qnzJOam2QPhL7XPjZrgV14qcnz7RgbQ/38
sjFsajaGTsnS+6nxmfhkXIbsp0aTn0oR/f2Mvf16U+1UoL9fsJtS51B9ODQW
A0bHY8KMTMxeUIjEzCokZddE3BFwOGc7qZZ6ZCg9/GzSfazUIbtr7b2nzr0I
277Yzf/mZhiG6SR8//332LR+ORZ5CpRefvnKunN7PsN6lHXrInkNmL0Up4PF
Wb1A+Chb6kBYyT8ZnRT5qLT+sKSTixpgmBs13OCjzrCLCkR6noxxspeyqF4q
XvFSOUqyRay2ZNTVF5nUKhm9kbZ/XoXBC1Ua9tG6Im1CHVsRYv/yMPYpM0mp
xk8VNddOteSnXOoMqnB6jmbCJ/r85WHd6kXYt/frSN+2GYZhGIZhmA4M/W7o
5q3bUedcLNwTOajA+m1urejXl0l1BWJ2lBf2Mh8KKmUfRSF3E5gbpdRGudrh
otQaKGP9k3HeU4MUtebJrK5JdUpa31Sm+CX1e3JM5NIoVOOlvhb6M0XdRlG3
qYnPKMfE2VaMjM7G2BgLpsXZMXuBHXOUzE60Y1aCPrMT5MfV0GPR8c1eatjU
nEA/P3JSQ8hNTczGoAnNbuqTsenoP1rp7TdKrp36UKmdoropUTslevvFN9dP
mfipdxU/NWTcAkyZnYM4nj/F6Wwhz25tUHr4+ZFXJd07pHtIk+F+tGjpKnz1
zf5I36IZhmGYswR5qd27d2LFokqxLutzWeX1YNHbqz29/KjuokzTy4/dFOfc
DvXsqy+LRVHOWBRkDoUt9RO5P59xdlTARxlnR6k+avQZ9FHjDBmrPNcY+Xkz
pK/Z0n7WaUofvwTYbOlSMpWQo0pBcXEGHI7CMJyPtg6pWPmzMaUh9jUeU6rZ
1+iRjOfT7qfd12x/Y9Tn1fb2y2v2Uzo3ZWnu72esnQp1n5K2L5Tuj8sXlmPT
ukXYv2+f+F1XhmEYhmEYhmkN+v3/w4ePYOOmLahxLIW9xIVMQ40U9euj2VEB
H1Xa7KOM9VFqvz6nUtfU1vonXQ2UFDHnyWOY8eQOrnfS1jSRa1J9k9Y1qaG5
V4Wa7wuk7+n1UM1XXrkc+rMa2lZosk+qtQ6T5uYLdzR8ag7GzbYjOtaOmQl2
xEiZGS9nRlxz6PuYhObQ99FxspcaE2PHsKm5spNSXJQaclKUAVo3RX39Rje7
qY9GLMCHwzV9/Qxuymz+FD3We0gc+o5IxNDxKZg8K5v7+nE6T6gfqa0R2YUe
0cOvULpn1Ev3F61Ld0j3nI2bNuMI9/BjGIbpVNDva61d1Sivyzpz4PMWtdNL
UVxyLYWvUJyLvRTnXI27LgU1JbNRZpuIomzD/KjA7CjFRxlmR5nXR53Ofn1a
/2RwUCLqzKoR8nVkSn/Olfa3qV4qXngoecZUmqiTstrmoaY2Cy53vuJutCk0
iTqzKU+pPzKmQLNfQfP+uu0FmvOF85xFJn6r2OS4IpN9zc7bQu0UuamWevuF
vF9lYZE7D5+uaMTmTauw9+vdOHniRKRv4wzDMAzDMMw5yqHDR7B+4xbUu1ag
qNKDdFu9fr02MD+qCblFHmV+lC9kvz7VR5n169POgXJp6qAC/slk5hP5pxrF
P1U79X311Lono3tS/VGzQ/KJui7qNUih12CMtcQnQs7NIr1O8VUTa4l+X/Xx
zDwnps4rFL6I3NHwqbmYNNeG6bE2REuZPp9ixfR5SubLj9G2gKuKtYv9J8+z
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
zebTzufTzunTuij1bL4vdVAJkZ8Xex9m1Qw/2x4x6hl+5XBY9qKr+TDGB+t0
f0arloiZf6o9VVpfxV2TfX6H5bGrovl387mp+c4z1etiburURD9u3byi93FP
EARBEARBfCFTU9M4d+EqGttGI+5hozkpB5tfJc/tY06JuSbFSfWK6dF4KK2D
UjpRiotikVyU1I1S96K0najFuKdoe53iOczHsD1Tu/KMfMfU5vRKJOYurTPF
wv5earERO8X3x+bvKe5JcUebgv9codr/VBk10dxUZMR/n6rqTaln+Wk7U6mK
lwp9jC1p5cjdW4/yuk7dnwWFMl+UvVLWJi8aWgU09Qno9QR4R4rdE3rYDL/x
E7h84y7ev3+v97FOEARBxBFzs+9w5etJnPC6VJ2psZh0pvjuFz7Pj9wUZXkZ
H6hFX9thNFuz4axNXKAjpXZSKcGeVMhJKTP4tA4q2ow+bSdKvS9K6UapZvQF
d0V9QSdK66AiXFuC9H7rU+SuVJ7clSpXeamjcDfsR1/Hcd2fkz6xIOp+qrF5
OlXq31+ob7Wgm/rMzqngaxHP1DEHTvpacPHsCF6+fE5z/QiCIAiCIOIcNvP+
6bPvMeI9i4bmUZgcqjtYuzS3jzsp9S6p9kgnxfwT81ARnSjNbD7FQbGeleKh
WC9KmdNnU+2LUnyUNJ/vMx2oOLizXm6Ymyo82IDtWTXc3WzLqkJa8dK8VLaY
jBIjkgqNSMiWO1OqLlOov6TpMYXN2ovuqT6fKHumlJl+yseT3ZT67yRkip9v
YS1KDllRY+3T/XlQKOpwR8/PQ3YW+uAQz6828awb8oVm+LE9esLp83wWKkEQ
BEGoYZ2pqam3OHeyh+9tEcYbIfh7luGl/JLXCrD30ST1FKLtadH9LpuyVjLa
W41udymaLOnhPSllxh3vSGnn9kVzUlmI3A21lBl9yZp9UYvoRn3OP82XWmmG
n9PKZviJr9NWyGf2qbtSTus+9LQdg2egVvdnFReJmPmncVRhbimKn9J6q7C/
G6U7Nd98Us1urMCYE5fOe3D728t48/ql3kc/QRAEQRAEEYV372Zw/eYdDIyd
gjXKLinmhCKcVIfspFSz+zoHJQ+ldVFaHxWazxe5L4q5KCuf06fdF7V+PVS0
VJi6kVZk5t5mC+9MGZY8yy9T7kyxPVPbMmt4P+orlTP6keKMUhRfFLkHStkF
pbxdOBo3pf1YKjf1oxRNZ0rub23NqMKuPANKjzSg0tyt+/OgUJSwrpTJJZ6H
TeO8K+USz7SusQBG5ftB5qa6RgP45tq3ePv2rd7HO0EQBBGnXPnmFCZ8zfxe
VvC1LsNLsfjEDEMIdEIYd3Lftei7XApFjm/IhMHO4+h0lcDNnNB8HSnWJ1qU
k4rmoDIiEn1Gn2Zn1Jd0o5bqpNj75F2pZDht6WJyxRwQcyzMS9nNJRjorND9
ecVX5ulQRcQW7qY+l2heatFuivkxByYDXbh5/QK5KYIgCIIgiDjj5au3uPjN
DXT1CzA5B0N3r/LcPuaGWGcpvCfl505K2SfV1ic5qPb+KC4qzEeFulH21sid
Ucx9LX5Wn/730yud/P02bMuQ9kwxT7PUWX6Km0opMmJnrjG4u2peX5SsdVSq
blOUPtVno/k70d2U3JviXqqKh3W7duXVoOhQA47V0lw/iv6RzsWh4Aw/e7t4
1g0G0O8NwCsI8IkZZLulRk/g4ePv9T7eCYIgiDjmxYtnuHR2SNqJwjpTQt8y
9kxp5vl5HbRrirLo+IbNGB8wYrCzDM3MxUSd27czNLcvqpNKVzmpyC7U/Pui
ou2M0s7pW6FuVDQvxT6uhXWlMuWu1BHVDD/mp/ah1XkQo701uj+3uM6o1lNF
cVXzeqhoM/y+1E2F/53JQCduXD2LVy+f4cOH93xWDEEQBEEQBKEPbM4yc1Ln
L92As2Uk4u6VeaFoToo5JXenwD2TMr9P7aG0c/qYv2IJ60e1RPqosG7UQjuj
4uBuerVy1NCOzN313N2wvU278g3ILFn6PL80Ns+vwIjt2QZsSa/WeKPySDcV
xVNFy7wzABcIc1ER7z/opqrkVPO3CZmVKDjQgGPGDprrR9E1/Gxk56LbA1uL
n3elOj0BjPqlntSYP4D24QlcunIDb95O6X3MEwRBEHEM2z9489pZTHibpHl+
/mYIgmcZbsov/X02z8/vVs3zs2nucuPgzpoSN2FOaqyvBj3N++GqS43uamrV
HSnFSSlz9tIWcFLaPpR2Z9QCPop9zJXoRC3kpNjHFF+D05oGpy1bzB4xZaGu
lPUo7JYC3pXyDpl0f3ZrI7I/WrBL9TkPNY+XWug8C/s4SkfLjtMTPXj+/RPx
/J0TT2FyUwRBEARBEKsNc1LfP3+JicmLEU6KeaGFnFSjyknN56GUOX2sVyXt
jZJ8lHpWn4XP6hulbtQCYQ6m+LATW9OluXvbMquRViQ5ppjO80vVzPObz03N
k69i5aaSQ3P9NqVKXmpzuhQ2yzBztxllNW18/5bez4ayAaN0SBtH5K6UeBb2
BdDnDcAjCBiX90p1j5zA0+9f0I5lgiAI4rM8ffwAF8+OyJ0pJwRhQJ7Jt5xd
U0MQAu0QfM7onSlyUxRVhrsr0e4ogLN2p8bTKLukdqh2SS3kpLRz+ebrREXZ
G7VYHxVrFxX2+TL3Jr6G+hS5K5Uv75U6LnupMrgaDqDFuRfjtFdqGVnsvL8Y
uKkR9Tw/qY8leBw4IbTj2dMH/GcDCIIgCIIgiNWD3ZU+evQYnf0TMDvDnY/a
SfF9Uo2jUZ2U4qHcKg8luSjZQ7VF7o3i4T5qVLU7it3zDpCHWiCHqlqRXmyW
O1NVy+5MZcjz/HbkGrAlQ9uZWoabWoKfiuql5O6UtMeqSvycQ25qK/dyJhw3
tpOboqx6+Aw/8XysbxyDrcUHl3j2tQ0HMOyTZvixt73ekzh17jLezczqfdQT
BEEQa4DZ2VncvXURAY9T7ky1yp2p5eyaGocQ6BffVwv84w6Nl6J5fhQprCfV
23oIrQ05cDEfE9VJKT2pRJWTSg7ukoqcy/c5H6XyUPP6qChOaiV9lHpOoSlJ
nuGXI3eljgd3SjmtB9FkL8VITw3/2un9/NZ+os35my8LOKlFuyllVmAD/B4H
zp0axPWrZ/H8+VO9vw0QBEEQBEFsCGbn5nD/wSN09AVgdg2F37fO15NqCTkp
5qDUs/mUXlSEi2pmLsrDe1HqblR9mI9SnJScOLh3jsdUW3qx95ib94U2pVYi
IZu5GcOS90wxN5Uuz/NLyDZw16XdAbVUNxV0SovM5+YGBndOMS+VUYMtYhKy
asTPvw5FBy0or6OdU5TVirJXaoTP8LOLZ12zeI72+KSu1BjbKeUJYMh3Dk+f
fU9dKYIgCGLRsM7UmZODUmfK64AgjCxzzxTLqDzPrylKZ4rc1EYP2yXV07QX
TZbM8F1SQRf0OSeVivC5fNosMKePvS/motj7VXzUfLujVtpHKamV92bVJ8Np
yxBTIOawaq9UGVzW/Wh1HtD92a27LNpNfSbz7ZriUfemGqQz0ePkvamrl0+S
myIIgiAIglhhZmZmcOfeQ/SNTHIfpNy3hjkp3gUYCXNSzDUx96R0oqQI4fui
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
xt/uzK1D9p56HKps0f15UeIvyvw+vlfKNYqGVj+c3QG0DATQNhJAU38AfSMn
cff+Y/4zAQRBEASxWrB7z8ePHuD86WEI440QvGyuVE8M5vlFc1OO+d3UCLmp
eAvrSvU07YWzLvkLnJTaS2lcVFQntUM1s28tze3TOKnaRLkrxeb35cldqf38
rb0+H90th+HpN+r+TCnxEPm8Y+femOym2Dy/QLMUoQkBbwt3U6w3RRAEQRAE
sZFg96LnL12Hq3U08m41Slcq5KSieShtN0rzfuLgzpiycKotvThQ3oS0IhPv
TG1Jr8IOtmuqZHm9KRb2PribypfdVFpkbyropuLBS4nZlFqFrZkGPs9vV6EV
ycU2JBZYsT2nFgUH7Lxjpvczo8RPgk7KMcS7UtYmLxydUleqdTCAlv4Amnr8
uP7tPUxPv9P7+CcIgiA2IDMzM7h3+xrOTvbxeXuCj7mpgRVwUy2afVMqN0Ve
Ku7S1ViKRlOK5F6iOqkoO6U+G42TUnyU3o5pWU6Kfe674LCwrlS2mGIxe7mT
ctny0WwvxVi/QffnSYmzKE5+rIGfi5KbapEiNOHkRBeePbmv97cHgiAIgiCI
VeX0uStwt3tQp+ox1dqjz+8zq7zUZ52UxmvpfV9MWXyYm9p73I2UgjrujVi3
aVe+AZnLdFOsN5UhJlV2U5+d6aezm1Jez6Y0aZ7fzrx6JBXZkFxiQ2KRBSlF
ZhQfatD9eVHiI2FOysnc/RjsbQIaewJoHpB6Ui19ExgPXMDUFDkpgiAIQj9m
Zt7h9s0LOOl3S3tPfC5511Ss3NQIhEAPd1OsHzDvvim974op8A2ZuJNym1Oj
O6MFu1KfSYSTWkMz+8K+BurPfRcc5mQ4bZliCuSu1G64xF83OQow1F0F7xDN
76NECT/3xPPPI5+5vDPVJsXfjEsXBTx7+lDvbw8EQRAEQRArztzce5w5dwXN
nV6YHNr71YEwJxXWlZL9VPR+VPi8PnJSazfMTe055sa2TMkbbc2oRkqBAdkx
cFNs3xTbW8XdVGY0N1UeH24qpTxs19S27DrelUrebRNjxa6ievHzMGNvmYN6
Uxs8ofNSPA+5k5Ln93UFeFfK3SumJ4D+sbN48uQpze8jCIIgdOfNm9e4cfWs
dE/K3BTbOcV80rK9lLo3xdxUI3//87op8lO6ZXzAiN6WA9F7Utqu0Jd4qdp1
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
k0rYuE7KIH9OdWx+H+tKZchdqSz+60ZbLrqaDmJ8oJZ/XfV+tpQ1nnnn+fVJ
Z2SgG5OnRnDr1lW+C5AgCIIgCGIt8eHDBzx99hIdfQJMjs/ctTYsxkvpfydM
0S/Vlj7JTRXX8d4Uc1Pbs2uQUhA7N6XsnGJuameukfeytPumIhzVarop9jrY
nql0ZZ6fBal7rMg+IrupvWak7zbjQIVb/Hr16v7MKLGO3JVyDsHcOAprs9SV
YmFOqmtwEpev3uKz4D99+qT3twCCIAiC+CJmZ2fw8MFtnJnog8B+hp/3ptql
/VCxdlPCkOym3PCP26W72fm6U+SmlhxPvwHdTfvgXGh2X7Su1KKyDp0Uc3ds
fp81jc/sk5IOlzUbHY37MNZn0P2ZUtZR+BlnC83zYzNUWWdKGJa7pb04f96P
R48e6P3tgSAIgiAIYtGwO9GXr96go9cLs3Pws/et5KQoiwlzLQcrW5BebMLW
jKqgm0pdATeVzNxUnuSmNqdVRfVTq+6mVJ2pzRlsnl8dkoqtyDxoRW4Z81MW
7qYyio0or+sUv2bUmVo/kfZKSTulRmBxe/heKdaXYk6qvW8CF76+jjdvp/Q+
/gmCIAhiyczMTOP+3Zs4M9HD902F3FQse1OCyk11ie+/GYLPGfJT5KZilqHO
Y3DVJS9ift2XeKl1tk8q6KTYTqkkOK2p8l4pyUk5LRloc5ViqKtK9+dJWWcZ
Vc3z89j5OSjN8+uTz9whBMRfX7ro1/tbA0EQBEEQxKJhd6MXLl1dlJNi+ZyX
0v9OmBIvYfPpDlY0I73YjG2Z1UE3lRajfVOKm8ooMSKlSHZTWTXYkh4vbop1
piqxKb0aWzIN4uurR0qphXem8o5ZkXXIguTieuw95kSluUv350WJRRQnNQhz
o+ykmn3cS1nFt842LybPXsHzFy/1PvoJgiAIYtl8+PAed25fx9kTvSE3JbTL
+6b8MXZTw7wTwOdX+d18ntXCc/3i4C55jWSwswwttmzJuSzKSUXzUgnzR3ef
tJJOKoO/ddSnoamhWPxaVuj+PCnrNNp5fkKTeB52yj3VMd6bOnmyDzeuX+Kd
VoIgCIIgiHjn/sOnaGwfX/S964JeSvc7YUo85kB5E3dTSm8qIbsG6UUr46Z2
5Rv5+9+SUR2xcypi79SqdKYq+OvYLL6ebVm1SCy0IH2/FXllVhSWS24qc48Z
Rwztuj8nSgyiOCmX2kn5+Ft7ixdjvrN4/PS53sc+QRAEQcQU5qZOT/RCYD/H
73WukJvyS++T71NRdk5pe1Pkpr40oz3V6HAWwWlcYKfUZ73UendS21VOKjnc
SVnT4KhPFX8/F8Pdlbo/T8o6T9BNKZ2pFrkzNcYTYG7qxAAePLiDmZl3en9r
IAiCIAiCmJcnT19gPHBh0XeuNL+PstRIvSkT3ze1Jb0aO3MNfIZdrGb6sWSK
SdPunIripr5aRTfFPx6b55dehS0ZBmzPMyNltxU5R6worrSioNyK1FIzCg/Z
UUZuam1HdlIm7qTG+U4pnqZxNLSMo3doAi9fvdX72CcIgiCImPPh/Xvcu3MD
p0/0c08U3puK5Uw/vxzWneoR37ZC8Lvg9zRo3BT5qcXEO2RCT9NeuM1pi3Qz
Wu+0UZxUQrAn5bCkSE7Kmi7+mvkoMaZcjPRUwzds1v2ZUtZ7VPP8WGfK3yie
hW2Sr+e9Ug8/Gy+cD+D77x/zPeIEQRAEQRDxxszMLM5dvI6GpuFF3bky77Tg
/D7yUpQFUmHuxr7jbu6mmKthborvmyqMrZvKYjundkvdqUTenTLwjhaf6zef
m1phR8U+Hu9MpUt7phKLLMg4IDmp3ZVWZB8W/7nUhNIyJ6rEr5Pez4qyhKic
VL3bA2uTF5amcd6Zsrd6MOiZxNTUND5+/Kj30U8QBEEQK8LMu2l8d+8mzihu
yueCIHSuwL4pxU+xuVX9YjqkuX7MTUV0p8hPLZShznI0WzO+zM98Lno7pJXq
SZmS4KhP4V0p7qPEXzvMaXDb8jHUVUlOirJKkXfo8c5Ug/wzAGyeX7d81kq9
0kCgBzdvXsLbt6/1/tZAEARBEAQRwYOHjzHoOfVFd6+Sm4rup3S/F6bEddiu
qfK6Lu6m0orq+A4olp250ky/WLopPtdPTGqxEUkFRuzIMWBrZk1UPxXhplbC
T/F5fuLHTavie6a255qRVGJFzmEr9lTJbupgPfIOWHCgokn3Z0X5stQGndQw
6hvHJB8lhv3a0erBuHAez56/xKdPn/Q+9gmCIAhiRXk3PYX7d2/IM/0cKjc1
skJuSpnr1yV+rCY+QzC6n1K7KSV63y/rG9+wCc22XDhrFzG/b6M7qbpdfH4f
91GWFP5rlyUTrY4S9Hcc0/1ZUjZgwjpTLlVnSp6dGujDiUAv7t25Rv8NQhAE
QRBEXMH+t8nkmW/gaB5Z+l2sJnrfDVPiP8xNVZgkN5WYa8CW9EpszajmbirW
vals1Vy/ZDbXL8+IhCyDtHcqojsVxU+t0Dy/zenV2JpVi5359UjbK+2YYm6q
SHybvteE3H1WGOLgWVEWGcVJOYdhdo3yrhRP4xjcnT4Ik5fw8NEzvY98giAI
glg1Zmfe4e7t6zgz0YMA2zXF4m9X/Sx/rN3UuOS9Ar3i2zZp79S4YxFuKg7u
lnWKd6gOAx3H0GhKjk1XSm9/tCJOKkHlpKSulNSRSoKzPh1tzlIMdVXp/iwp
GzgRnakuVT91nJ+Jly5O4OmTR3p/WyAIgiAIguAwJ3X33gN0DQRQRz0nyiqH
ualKczcKDzYguaAW2zKreW+KzfRLKzQiqyT2c/0ySqS5frvyjdjOulMZ1dic
VhWxd2o13BTbM7U1U3wduSYklViQfcSKPZWSm8pl8/z2mFF6pIF/nfR+VpTP
ReqK1ilOqnGMxyzG1e7FxOmv8fTZC72PfIIgCIJYdT5+/IDbt67hzIkeCONO
+L12CP5mafZezN2Uujs1IN3Nih9LclPavVPkplg8fTVoaciHk3mXpTqbde+l
mJNKlOf3JUthPan6NLQ69mC4m5wURefws4x1psTz1eeUvDw7A4N7+EZw8sQw
bt64pPe3BIIgCIIgCA7bbzIunEND09K7UhTKcsPc1H6+b8rMvRSbsbctswYp
hYaYu6kcpTulzPXLlbpTzE1tYm4qdZXclPj++J6pDLZnqhY7C6TOFOtK7WXz
/MS3OYfqkbPXjPK6TnJTcR3ZSTmG+E4p5qUkNzUKe4sH/onzePHild7HPUEQ
BEHox6dPuHP7Ok5NdEtOiLspNwRhSIxvBdyUIL/fUT7Diu+dEpqkuX60byqY
8X4jelsOwFmbtDyntJ69FHNSbL6hSe5KsRl+vCeVgo7Gw/D01+r+HCmU4J4p
dsbx81XpTCn+n52Hwzh/TsDz75+KRzLtuSUIgiAIQj/m3r/H/QeP0NTpRZ1D
73tdCmUABytbkF5Ux50Q80Rszl5SgYF7pFi7KdadSheTUmzELr53ysi7U8wV
rZabYh9nU3o13zOVkGvCriIrco5Knal9VVYUH7Mgc189dh+xc3en9/OhRIk9
upNiYU7K4zuF6el3eh/3BEEQBKE7c7MzePr4AS5f9KvcVLP8M/3eFepNKbP9
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
KMX6XJ/Mn8g0N0dzdTSfV1LrRWmdF+UNqisavahsUl2lPPtWOTUrv1c2a59p
v+vjZJfVq6Zt0U/aNu1DnzsslOYJ8yuIW3mVY/KK99tVTuUyOJX8Hrv+Drs+
H2jqEdJOTlV6Xj3KlX03eZZj5ZpN2LptN/YfOCTqHl6s/h8sFovV20TvRxxX
7pu79uzFmk+2YcmKjWh0LUNhhRNpuXV+91+dQSUJBlWv5eY2Kvf2ZhN/opiU
X+4RMUFnTRQz9DhCMSlQXPKLSTZxidbVY5w1JhlxqcoXlygmkYlVqZxKiUsF
elzS8qu0mKTyKl9NwM70rqL4nVfajJqmRYIxrd+4XVzTtsNHRF+qjtTsXYXE
zMBz2dYag8ym2OzL1RKXSqdc0kZkKffLYuWeViPyo8zPDY1uD5av/eSCczJZ
LBaLxWKxWD1PR9paO55rbkg2m/kUuwe7uToO/3zjBXzpphsC8qirrroKLzz3
uOi7Fezj7V1W7g1NafC4C5VnyXrRT8rtdqPZ6UR9fQOqq2tRWlaBgqJSZOb7
z/eR9f5POosidpNe0KwxKLd4DzxPm+vTGZSYm6v3orJRncercXpR61J+Kq5T
XO9Wa9YLK8+3jR6f9c8Me3ym9ch1bnVbtN1qlzZvaJkfJOvzg/KcIDEqmVOZ
3193m1iVlVFZ5wMDzQkmZdWIOVSndzlWrduE3a0H0NZ2BKdOnRZ1qFgsFoul
irg9sahjx6g+32Fs37EXq9ZuQnVDi4g9djFJ7f/ky4dSGZRTY1AeLS/XazAo
nT9VNKgxotqpxRCXGptETLLEG1NcChCTTHHJ5dtutdOfXckxiWKknPtrjkta
jUCqC1ik5vqKGrX6uxNSTpX13YlA709QLytietUNC9GydA02bdmBfQfacPTY
cdGfy/ruBOX81jqXBZzHjksLwKU60cuLzWb3NJu5VEJWPTKU/xcXKveqKuXe
1mjNl1K8ZNVqHD5yNEhRg8VisVgsFot1MUTPhW0Hd3c8z2zlUiY+xYyK3TPt
rElAfNQETB4/ACOH/BMjhvwDs6Z/IHpJ1ZY6gn58vdPK/aBR5VJuTx3cbhfq
GxpRUlqO1IwcRMWmItSRhJCoZMyNzEJMaqXUX12d91Pn/JxibozmymjeTK9T
RLxHzPXp75hr75fXutWa9PrcXrNkl2ZrXRA7u7X3NJ3Sevqfm7VnY31ukOYE
iVfRvnUGRtbfbdffZbe+ux4on4pqLOn1lVJzzYwqUav3p7Kq6nbn4OLEfGAt
GpyLsGHzNrS1HcXpM2fFPCxnUbFYrCtVOo8iXr9330EsXrYaxRVOwfXt7qN6
XKJ3JNT3I1xGryedQdE9nRgU8R96L0K//9do8UGPF01STHJ2U1zSt6e/X6G/
Q1GnxSQ9LlVJzIqO05TnWyXXAdTzqbxq7yqJUaXaMKpESx3a9uIS5VIVljdj
0dJVaG3dL/J6Kffhs8/V9yZaW/eirHphgJjWHo9iNsVmX342c6n4jFqkKfea
AuW+VOny51JOtweLli1X7hP7uB4Ai8VisVgsVi/S0SOHsWHdkvbnmAMxKc6f
YrPZJmv3AupV58xHY2MZioqLkZCchYiYNIQ5UhWnIDQqWXEK5kVlC8biy4ly
ibkwmvMjXqO/d05sp6LRwqC0+b5Gbb5Pn6/raH6vO+y28KomOe+K5gaJWSmm
46x2+eYDS+v96/75zwV61B4gBS5zbypLHxBTXyqbZ36an6P3/qkOE/X/aHQt
xqZPt+LcOa6BwmKxrkydPn0Gu/e0wtuyQrmn1gveRDHId9/UOVSduOcSi1Hf
j3BrOVHa+xE6h2qyZ1D6uxHOTnKn7o5L+jsUclwSMUlxjZTvS+fgV49Wqvmn
vjehxiW6DiIu5Zt7U1njEl2/+AD19ehaE5+i2oclVW4sWbYG+/YfEO9LbNm6
HUWVHttYJrOneOZSbHYvsJVL1SCtwI38AFzK7fagZfFSbNmynbkUi8VisVgs
Vi/S4bZDWLe6xX6O2Y8/pWhmLsVms/3dXB2PqqJw5GXMRkpqGBKS4xEdn4pw
R6rgUGTiUiqfUj6LzkZqXpPKoso8og9HYaWvLp/Ooqq1WnxUz6jJ7Zvr030p
5vwCMSn9fXXrHKBcb6nWbX5nXa+rVKZxKutcoD4PmFXk0XKo3AafSskJwKgy
aox31q3P/zQXmEL96UucqGlajOWr1uPAwbZghx8Wi8W6qFJr9R3Hxs1b4V64
CpV1i5Bf5kZ6XoPvHimzKK13oc6i8sqoXqzHXJevUb2X12gxifqe6Hm5wYhJ
dkyqvZgkGJWWT1VtYVR6vT+dUenvTfjyerX3JgrdRm6v/N6ELaPKsK/zR3wq
I78RJUrsc3pXoLKmSfSYtI6zsid9m2reMPeaYrMvX/u4FDk134W8Kg8qnCrj
t97nFrQswifrNzGXYrFYLBaLxepFOnRgL1YsabSfZ7ZlUin2fKoHzImz2exL
b1ddIpqqYlFZGIac1NlIjJ2K6IgJCI/8GKFREYoTDBYVHpOGiJh0RMVmIJIc
n4ncUqfRI6qsEyzqUszvWdmTPNfXEYOqk/pRyfWUalw2famk3h/6++p6PyqR
P2WZCyQ+ZTcXSPOASbY1lWzmAjNrtPypZVi9bjN27W7FyZOn8Pnn3IOKxWL1
DlF9uENtbdiwcRsa3StQXOlGWm69X24U5Uv5WJRL9IrKLdN6F2osSvQtbNJy
daW+UDKLCkZcsotJ1rhU38m4ZPSl0vokGnyq1p9P6Xm9eo0/uT9ioPcmTDHJ
EpfoO0nNqUOIIwcfh2Tio/kZmO/IhyOpXBlbHYBJ1fjysphLsdmXsc1cKle5
15Q1q3W5rfdB74KFWL5qHXMpFovFYrFYrF6kfXt3YvGCSv/55g6ZFHMpNvtK
trM2AfUV0SgvCEVu+hwkx01FRMg4hMwZg5C5YxAaMRVhjnCERScKHhUZkwFH
XAai4zMRm5iFmMQMxCSnorjGabCoGolF6XWQurs2n5xn5bLYtv6R29xnvl6a
36uVcqFk7lQt/a5b7zki96OvaDDnTun1lKz5UzQPmBPgXfVUPz4VYC7QMheQ
mFmN7MJG1DYtwqq1m7Btxx60tR3GmTNngx2WWCwWq8uiucqzZ89i7/6D+GTj
dnhaVqOowmW678VZcqPS8puVe6rb6Bdl6hVlZVEeX83Y7mZR1rjk9HQck+in
zshMfaUszEm2HJPknlNGTNLelZBzp+Qaf1Y+ZcqhkvlUR7VnbfjU2I+S8P6o
SAweE4Ux0xMwfX4m5kblIyKhRCz3Y1I2XCr4c+xsNrtLlv79puZpXKrJnku5
PQvQsnQVPmcuxWKxWCwWi9VrtK91BxZ5y8xzzgHr9wVgUsyl2Owrxnp+VFVx
BHLTZiEuagJC5ow2eJRgUvPGIjxyGiJiwhEZmwJHfCZiErIEj4pLykJCShbi
U9IUx6OyyWn05bhYPTnand+zuF56l1yfy6uR5vPE3J7Lf15Pn9PTeZPpz5a5
Pnm+z+pibQ5Qz50S84Dl5l4f2TbvqvvnT/nzKbs5ATEXkFOLkioXFi5ZhW07
duPY8RNifpffSWWxWD1dlOtJPP3wkWPYsm03GlxLTHX69DlPuhfSvZHuk+kF
TsFURB/DCi+KqtR7Mt2j7VhUd78j4fa0U3PPbc+c9HcgrJwp4HsQnYxLckwK
GJdqLP2nKnxxSedT2QafUuJSB3zK7p2JEVMS0H94BP49JBz9hobhvZHhGDYx
GlPmpCIkpghRlD+VZuZT1jp+QZ9jZ7PZXbP07zclpxk5FR6UKveuOpvnAKdy
D3QvWqnc8/n/piwWi8VisVi9RXt2boKnIcs899zVXCnmUmz2FWHKkaotcyAv
fRZiI3UeNdrgUqFzxyJs3jiEh4xHZPR0OOLDEZOYjNikLMQnZyEhNQtJaVlI
ziCnIzkzEXUuZ7fN+ck5UPpcX5PHV8+InnPt5vcC5TXp83YyV7K6Pcakz/PJ
83363F57pnk/nUnJ1uv7ye+qy/lT4l313OaA84DWeTy7OYLsoiZ4Fi7Hjp27
cebsWX7+Z7FYPVLEzYlJnThxEtu270Kze4nIn5HvZ6JWn8ajfH2jPOI+WmDp
ZVjt1OrdaYyoO96PsObl6jGp0S4uBchtMmJSs68PVHvu6N2HUhsG1VFc0mOS
NS5RTDLqzlrzpwrdAfOn5Jikx6WhE+PRb1i44FKGh4bjbcUfjo/ClDkpCI0t
NNXzYy7FZl/mlv79JuU0IbvCHZBLNSr3w0bPMv5/KYvFYrFYLFYv0p5dxKUy
zfPPfkwqlbkUm30F21kTL/KjclJnwBE2HhEhYxE6V2JSc8cgbP445fPxiAyd
iKjwSYiO/RixCeGIT04y8aiUzCykZSnOzEBGVjqaXc7zmueT85+s/Z7qpXk+
o7d7s39fJxNbqg/MkALN2cnvj4v5Osucnf65GFNtM6cn2cqgrHN+xKIEj5J+
qvOAaq+PjEKPuc8HzQNKbMqoo2SZz7POEVCvj6TsWmQWNMHlXYY9e/aJ3CkW
i8XqKaJUTuJRmz7dhtqmxUjLaxS9ouS5Trrfid5Ruf48iu7JZVrfKNHLUMuN
aj5PFqXHpfZ6EFpr7NnV0bN758Ealzp6r8EUb6xxSYpJRTYxqaALMckUl0rl
9yW8tjVnA9b20+rxDZ0Ub+RLmblUBPoNi8CAEVEYMiEGU+ekIjKh1I9JcX8p
9uXgqMQy/PVv7+JXT7+AZ/7vZYyaGBL0YwqK03XXGGwqKbsRWWVuFCv3v9qA
+VLLmUuxWCwWi8Vi9SIF5lISg2pM9Zl7TLHZV4ybq+NQURiKrJQZiHdMRlTY
OIRIPCpU8Kixoq9UZOgElUdFTEZs1GTExU1HfHIoEtOSDB6VmpWFdMUZijOz
MpGdnQGXyxWw14arg7k+Ud/IZeml4fTPdzK9O071iDp4B9w0B1dunofTrc/P
GdxImqPTLY+V853knCd9Pk8ea5rzK/WNox4ool6SZNF/vtgmb6qDGkr+75ub
5wzos7TcelTWtWDJ8k/Qund/sMMVi8W6wvXZZ5+h7fARrN+4BTVNS5Ff5kJK
Tp3pvmXwqLwmlUcVu5X7qcfIj6J4IPKjtNhBtfKaOpGza+3/JMckU/6TxJ5q
tJgkGFSTf/28UrlOXgf5skZcKvfV0AsUl4wYUh44JlnjksyY5Lhkx6HkcYFi
km1ckmKSHJcoFn04gfKlIvH2sAjBoihP6u1h4drvqt8ZHolBY6MxeloCps9L
F7X9rLEsGHPsEz5y4GePPIWf/uLJLvvDUTOCzwguI/+j3zDba/1z5bPHnngO
f379HXww8mPMjsgM+rHa+d0PJuK//uu/DN962x1BP6ag2cKlErMakFHiCsil
mpV7q3MR50uxWCwWi8Vi9Sbt2bkB7oY083x0e1yqPTbVA+bRe7rLC0Lx+l+f
xTNP/9zPzz/7GP75xguYNuFdUSst2MfKvnJN+VHEo7JTZyExdgqiQseZavYJ
HkU9pAweNRHREZMQQzzKMRnxMZORmDANSakhSMlMFDwqzeBRWcgSzkROTgac
Lpdt/b32+JPOoKzvmhv1i2otvTAC1cIro/4iHn/eU0zv1qvzmdTHKUv5SfNr
mUVuzR7xmWx1uToHZx6jbtO0D2nOTh2njRHjfO+cG72ktH5SWUW+/fj2p9vX
b6ozbKqztf0SM2uQU9SEetdSrPlkC3buasW5c58FO3SxWKwrTMSjPtmwVYkR
K1FU6VbuYb77ldw/ingU3QPp/kv3dz0/Sq/Xp/ePavC0X68vEIPSe0DVSzm5
NVLtvfbeiwgYlwzuo8YKlfvIcUmNM/rPrGI9HvgcKCb5Ypen03FJLJfGtBeX
rDHJF5fc5rikxKQ0LSbZ1fX7YHw8+g2P9LGpYeEiT8rgVNrvau5UJD4YF40J
M1MxIywboXFFQeVSr7za38QauuJfPfV88PnAJXJYXCFGTpiPoaNnYfTkMESn
VHRp/cjEUnzxqqs6fW0fefw3mBOZHfTzlv3s838xHeMXvvAFcV2CfVxBs8Sl
EjLrkF7sQpFyz6yxeVegWbnvOhcvxalTp4MdjlgsFovFYrFY3aTdOz6xzEnb
MKmmNJ8NNmXlU8ylOuN3+73SqWepPtdcjX/94/ein0+wj5l95dhVl4j6ihgU
54QgKXYywuaNkWr1qTyKHD6feNR4RIVNhCNiEqIjJyGWeFT0ZCQo6yXETUZS
0jSkps9HWlaClCMlOxNZOZmoa2rym++T3zeX5/rkfu0dzfURfxJzfGKez22a
27MyHJ3j6CaeY7U+l6bbbow+Tv9d356+D2OeTtqvavXzzEK3MSdonuOzW4fs
NB231aZjpznAnAYbPtW5vlNUaymzoAE1jS3Y+OkOtLUdwdlz54IdwlgsVi8W
1es7p9xnWvcexKKl65Bf5jTdl/ReQ3Q/o/uczqOIpVAMoJhAMYL4EMUQiinE
kxo11uSS8qDsOJTMoOosfQll/qQzKLs6sDJ/ktmTePehxGMwJDkm6b2ZuiMm
qTbHpfR8V4dxyRSTLHHJ4E42Mam9uGQ9dplNfTgxEe+MiEJ/jU0Rf+pn/K79
eZjMrSKV8RH4YJwD42ckY66jEJGJZYhJrbrkc+sv//Vf582lnvzN74PPBi6R
H/3Vb03n/re3Bndp/ZDo/C5f3z59rsWrf38/6Oeuu9/7Y03Hd/MttwX9mIJq
E5eqRVqRE4XKPbTahkuJ+/XiJTh8+EiwQxOLxWKxWCwWqxv0n/98jt3b11nm
ppP986RkLuXHp5hLdcWvvfLbLj1PPfbog0E/ZvaV4eaaeNSURiEndRYi5o8x
5UcJJjVP5VGih1TYBDi0HKnYqEmIc0wSOVKCR8VPRnLiZKQkT0Na+jxkZMUb
TCpDq+OXLvKnMpGek4GS6mqj74b1fXO9z4Z1ns8016fVI8ot971f7l8/qFlY
zIflyHWE6v16MJ2Pk7LrxDb07ei/i30IHqTaOo8of2bMF+pzggVuf2aWp75v
3vH8o2WOMrdZ1E9KyfWxKfW860RPFvvcqcBzCFQ3y7toFXbt2YuTp07j888/
D3Y4Y7FYvUxUs+/4iZPYuXsvypR7fmKm7z6k8yhxn1Xuo3Sfs/aQ0mv2iR5S
Tl8PqSaNPQXMhdJydGvd9u9GWHOgbHs1VfgYlFzfTq5pp8Ylp4nPXKy4JFuO
S9aYZMe55LhkOF+OS+3Eo9z24pK+r0ZxXEMnJWHAyGi8MzIK/YlPjYhE/+FR
KpsaHqnyKolT6flTxKdo2eCx0aK2X2hsERzJFZeUT30w4iPceNMtim82fN31
ff3+T3993xtMY8h///eQ4LOBS+RfPPpr0/V49e/vdWl9Oy71tXvuw33f+gFu
vuV2kXsU6Hlq4LBpQT9/cnh8MV54+e/iWjz/xzcwbmpk0I8pqJa4VDxxqUIf
l7Kr49e0cInInWWxWCwWi8ViXf46duwotm5abp6fNmr4SUyqOd1smU0xl+qS
rVzqphv74tFf/BA//fF3cMvNN9o+S02b+F7Qj5vd+12UPRdxURPNPGqOyqPU
HlLjjZp9lCMVE6nzqElIiJ2ExLjJSE6YjJTEyUhNmoy05KlIS5+L9Kx4UcNP
N9X0SyFnZiA1Ow0FldUmDmXM90n9Nqw1+OReSzKDClS7jrgL8ZdEvcd6hk2/
9G50vDZnqtfLM/afZZ4n1P9snidU5wrluT7Tu+WBLOYzAzMw8zZ88592faes
52OeR6gx5hHySpqxdPlaJZYcx3/+w/X+WSxW9+nw4aPwLFgmaonK9yC1D0mt
uI8JHlWg1qWj2ncd1exrsmNQ1BNKsR+HstTik/tAyQwqr0Lut2TureRXU9WS
ryreC7Dt93fx45Iak8xxyce0fHFJj0mpUlzyjyntxCU9JuUEZmAxqdUYOikR
746KxoBRxKYceGeEQ82fEjlUmqU/yzlUbxuOwJDxUZgRmilyp4I53z7fkef3
//mxUyO6tI3olMoL5mtdrZV3fvuo7NS4i8GlqLeXvjwivhhjJofjG/d+x28c
ccPO1Muj6x2MnLuOjul81ulp52HrAFyqxpZLKffvliVoO8JcisVisVgsFqs3
6OjRI9gSiEsZuVLEojLgdtqwKeZSXbaVS8n5UFRDbdigN/yepYhZdbRdWrez
Nf9oLDkY59+V4zzfGobOmq6t19XxvcnUR6qyMBTJcVPhCBtvqttn9JCiHKlQ
PUdKrdkXQzlS0ZOQQEwqbhIS4yepOVLEpDQulZo8Fanpc5GaFYeUzCzVGVlI
JqdnISk9U/k9HTkl1UbtI2vdo3xjvs9j1DuSc6Da759UY9Soi8+oFr6Yc34d
zgmKY6ixtTpHaJkP1DlTdoOpR3wgJ5vWk/O0GnyWl2Xb1fQLzKasjEqdG6ba
fo2orGvBytXrceLEySBHNRaLdbnr8JEjWLlmA4oqPSI3U8/dlHtI0T2MeE+7
OVIuX45Ug4VDGXVinV5UNbffE6qoxseh5P6Eeh4U9W7KKDTzJzkv1xyTzLVT
e2pckmOSOS41muJSezHJLy7ZxSQtLhHXoHypd0fFmLnUSIfxu8GkDDbly6Hy
5U5FKJ9FYOAYB0ZNjceMsKygzbefD5eaNicRL/zxDdx7/wO47rq+Rv5P3743
4rvffyhgzs9H85Lxwx//Av/zrR/gBz96GDND0zFk9EzccefXxTaolt2/Bow0
xtP1/sfbQ/H9B3+OW279Mq65pg9uuPFL+M73foKf/PyXJtsdc0RCCf74l3+J
fVHOF+2DtvPgTx7Fa/8Y6Mep6DPa1jV9+piux1fvusfYz+//9I8Or2lHXEo3
5cs9/tTzfmN/87tXbLdLPa8ef/J3+No99+Oqq65WrlcffOPe7+JXT7+AKbPi
TGMnz4wT503X+tvffRAvvmx/3NTXis6Lcrnu+84P8ae//lt8Tt+N/vm3H/gR
/vz6ANv1qQcXcbyv3vUN0VPr6quvEblhVDMyNKbggs+jx9jCpVKJS9UGypfy
oGnhYuzZ0xrsMMVisVgsFovF6gZ1yKX0XCmnZOZSF+T2uJRu4lDyGMqj0pe9
3//PeOhH38ZDD34Lg997DfXlMfjj759Snj2uEc+F37rva6Iem4k91CZg9NA3
8dxvH8V937xLeVa5SjyrfPtb94jP5nz0YbvHnJs6E3948Uk88J1voO/11wl/
856v4slf/gRPP/FTw3979bkLOs6GihgMePsVPPbID5VzvkmM+8qXb8UTjz8k
eF0gTkWfTxjTT+xLzzm7+uqrcO83voq/v/48ygvCLmh8bzTxqJqSSORnzEFC
9GSEU92+ueaafWqO1Dg1RyrMlyMVSzlS0XqO1CQkCSY1STAp3clJ5ClISZuL
5Ix4jUMpTstCYqrqhNRMxelIySmzyYey41DqnJ8812fkQGVewDvnNN+pOVb6
GchxNmOMbaTLtu7Lutw3Lt40Tyi/z17nX8spUz3njmo2+epB+WxeZp5T1K+n
zKY6cy1pXjMpuxZ5JU4sXrYWh9oOBzewsVisy05UC/TkiZPYtmMXnAtWIrfY
qdzTffdYvYcU3beoHhzFBMpHCtRHipgU5T9RHlSd1htK7lkoc6jO9Sr0mntB
6bX48rQ6fNmNfvfRznD+QDHJFFe6LS7Z7c8+JslxyS4m2calDmoJmusUmmNS
eHwpPpiQIJgU1fIbMMqhmn4f6RC2ZVTDff2oDDY1lHKowpV1IjF0Yiymz88I
St5IV7kUcYv26tDp/snDv/Jbl+oIymOe+b+X8cUvftHcx+qZFw22Qzyos/XE
//Dnt0z7Gj/dgdvvuKvddf7n/u8J/qKvc9fX7+1wP9f37dvhNe0slyKHxxX5
1VIkxiOPIX71u5deb/e6Ew96XeqDNXj4dNNyWnd2hD///Osb75nGEZuy+66s
x0Q5X088/WK714qu/4WeR4+xxKXilHtNamEzCpT7cZVyz7ZyKafgUouwY+eu
YIcsFovFYrFYLFY36NChA9i0frF5zpr4ksiVStNypdLhcWYIm9gUc6nzcme4
1F//9BvTGGJI+jJiQ/rn9PuPfnif37NHaV6oMT43bRZ+8L2Onwd/8+uHUVUU
4Xcso4b8E1dd9cUO1yfTM7DOjrp6nMmxU/C1u29vd/sPfv8+FGbNMx1fU1Vc
h+f30gtPnPf43ujGylgU5cxHWuJ0xERMMPeQknOkLH2kDCYVY2ZSSQmTkCw8
WflddaLwFCQlz0ViWrzGoRSnZCE+WXVcUiZikzIQm1Jk4lD07rkdh7LP66k2
MZ3OOFb2RXnGlq3vy/K5day0vpn5BLZdLSYxD5hVf16W5xK7yqZ05xQ1wdOy
Gtt37sWJEyeCHeJYLNZloHPnzmH/gUNoWfoJKusWIjW33nQ/9O8j5RLxwlq3
T2ZSNRKDsvYtNLEoC4fKr/T1hVLjktvSq9DXDypgTLqQuHTR5n6tMamDuGRZ
3xqXrDEiUN3azsal+dGFGDwuzmBPgkVpNf3elaxyqmgfm9JzpnQuNdRsyp36
YFw0ps7NVPZRAEdy+SWbb+8ql7rlti93mhW9M2i8aV0r67Dzr//vZTH2Rz95
rNP7Ictcam5Ujsi96sx63/nej4317vmmf109qylfq6Nr2hUuRX7plTdNYymH
SGaUv3vptU5fB8pF0o/Byvz+/rZ/j7D7v/ugaQxxI7vvysqliCl25njknKnz
OY8eYyuXKmhGQa3KpVw2XMrJXIrFYrFYLBar12jP7p1Yv2aBed7aJlfK48ow
zFzqwtwZLkW5SfKYe+6+w1gm855AriwKF2PpJ+U2dfZZ5Zmnf246jsToSZ1m
Uurznj2X6ug4ywtCcd21fTq1j5899IDpGN947XcdrkO5XOc7vjfZWZuIquJI
FGTOQWykpY+UlCMVHuKr20e9pKhuX2yUtZeUWruPuBT9FH+Om4wE2bFTkJA4
GwkpsYhPyUKcYFFZiE3MQgw5IRPR8RlwJBWK/iD+vaH85/wuqGZRsJ+9L/S5
PS0wszLPB/q/sy7zpvaWd8ymzO/k272DT+/HV9a2YP3GrTh85KjIg2CxWCw7
HTt+Elu37Ya7ZZXpnqff4/QcKdFzT6/bV+w26vbJvaSIOxF/sjIo4lWdq81n
n6dr1OWzvB/RLf2ggh1bztNx6eaarv4xqaZTMUn3PEcBBo2NNfKgVDYlcanR
MaqtbMrgUjqLCtds5lPvDI/A2OkJmBWRg4iE0ktyjbrKpb78la+JMdf3vQHP
PPcnvDdkMkZNCsW/3x0leiOZ/i/8yFOmddvjUpSHpHKR10Rej7zspi/dgtHK
PqgO4PN/+JtpGbGX37/yT3w8P9XYz5O/+b1pDOVBjZsaKc61/8Cx4j06efmH
o2aI9f721mBR+47Yk7z8y3d8TXxOfunPb3Z4TbvKpQbbXJeP5qeIZZTPRZxK
/5xyjV55rb+ovzd9bpKoiyivR/Xw9O1S/UN5GR2/9bu3sivKM7P7rmQuNWVW
vN96N99ym/huqM7hnXf73quLTCy94PPoEbZyqfxm5NfYcymXW3ELcykWi8Vi
sVis3iI/LmVTw0/wKHcmc6luckdciljN9deb30X8zdO/MJYH4j19rrnaqJFH
NfNorDXvSmzr1w9jzPC30O+tP+K2W7/ktzw+aoKxr5dfesq0jOr0leWHYe7H
Q/CNe75iWvbsM49gwui3z+s4X/nD06Yx9997t2BilL81dcK7uNbynBs6e7ix
H2uO1eRx74h6gEXZ8zF+1L9FbtQbUn3Bro7vLSZeWF0ShbhIcw8pnUmZcqSk
un0Gk4q2MKk4ta8U/Vk4hpZPNhxHjlacMBtxybGI1XlUQhai47PgiM+EIy4T
UbEZiIjLs+0Hf35zfiorCfpz9kW0WpfJWkvPnlFZHWi5URNRyr2y1qHScwHk
+UhxPFY2JXIb1Lp+3pYVONR2FOfOfYb//Oc/wQ55LBarh4h49enTZ7F81UZk
FjT43eesOVK+un0qQyKmRDX3jDyppsD9oURtPikvSudRvj5RXmQVe2xrxsr1
6i4kJl3JcamjmESeG1WAgcSlhmtcaoSaM/XuKMWjo/GezqUEm4pRuZSo6aeO
F/lSQyPw76Hhwn5sSllObGrIeAemzUtHZFL5Ra/t11UuNWj4NLzVf7jo3WRd
NmDwBNN2qH+QvNyOSxEjoh5FtHxWeKaoa2flNNRjSt8GXY+bbr7VWEZ13+Rr
RJxDZibU82hmWLrpOKw9nZ7+7R9My6lfkrz81b+/16Vr2lUuNfHjGL/xw8fN
Ecvo2OTPibnJ61oZHnleVK5Y9tY7I8wMT7kWdH31dfu9N8a0nHLhAn1XMpei
3lDyMvo+KEdN/o7oO/uVcp31zy7kPHqEZS6V3jGXcot8qd3BDmEsFovFYrFY
rG5Qu1xKzpViLtVttnIp6nFE/Yyoh9PHUwbi7jv/2/85dsS/jPXteM+vn3wY
tWUOUaMuL322GFecM9/vnbu33/yD6VioJt5NN5prrz//7GPG8u9+y1d//tZb
bjL1dyKGI6838J2/mrbd2eOkWn7ycVLvq8Jsc62+l158wrSdv7z8jPjcVZdo
WpdYV3u9obo6vre4uTpOuc4hiI+a6Oshpdmo2xeiM6nx5l5SGpNK0JiUH4uK
Vk25VLGOyYZjhKcgOm42YhJjES14lMai4jIQGas4Jh3hMWmYG5EielN0fs6v
98/xdcWmfiASP9KvZ+A6gOZ32jszdyh/R+ZjMHMpMvWvptyp7KImbNqyA6dP
nwl2yGOxWD1AxKiPHTsOb8sqZBU0mu7ndA9JEPcOmUk5BTfKKVNzmwor1fp7
ZXX2uVCBekT58qK8gm/RNvUafVYWldSl9yOuDPbUtZhkjUvVphhijUcfh2bh
vdHRav7TiEiJTek5UyqPktmU3Guq33C1jp/gUkN0NqVzqUjBpcg0boCy/eGT
4hAWW3RR2VRXuVR7pjwaeTvWmnd2XGrg0Kl+2+k/cJxpzF//9q5p+X3f+oGJ
tUSnVBrLho2dY1r32w/8yG/7/d4faxpDeUXy8kvNpSbNCMyl5HMlj7Cpb2ft
wzVmSrjx3Vqfsd79YKKx3k8f/pVpGeWqBfquZC51730PmJZR3lNH1+RCzqNH
WOJS8aKOn9PgUk4LlxL9pha0YP2GTcEOYywWi8VisVisblBALmXNlfJkqdb4
lMGmTHyKuBSzqY5s5VId+ac//o7gKfr6Vt5Df26uiffbz/yZQ03jqE4eMSHr
OGtdO8oX0pfJjKxv3+tM+4maP9r8PNbvFdN2O3uckfNG+Z2vdcyUCQNMY/73
4R8Yy75yx/8zLfvKl2/FpHH9RQ8lu+vf1fGXu+vLHchJnYXo8AmmPCniUUbd
PqmXFNXtszIpkSclmf4cZ7AodVwMOXIyojU7NEfFzIIjPhaOuAyRGxUZk4EI
jUeFO9IQ5kjF3Mi0dnpx9IBn5svM7fe4b79nVWcsb8u8XwuXytDrcNWiqNKD
BYtXYeeu1mCHPRaLFUSdPXsWu/a0orx2EdJyGwSv0O8hct0+Xy8pt4lJFUh5
UroDsag8nUOVerX6fHoPQ4+vj6FeO1bK1+24r17w7/OXmzuKSbMicvH+mBiR
99RPq81HuVMD9F5TI/UeU1q+lFbPj9iUzqXaZVM6l9I8YGQUhk2Mw6RZSQiP
989P6g6fD5ei2mzvfTgJT/3mJTz40P/iG/d+R+TaWOv4dcSl7rjz67bbJ4Yj
j/vvL9+J8dOixLKBw6aJ97X0ZV+75z7TutRDyXo+xGZkW5dTnT55G5eaS30w
8mO/8ZQ7Rsv63nBTl8+H8tb0bX//wZ+Zlj3y+DPi86ikMr96hvo1tvuuZC6l
11zUTXUcO7omF3oeQbe1jl9Bc7tcyt2yCFu3bgt2KGOxWCwWi8VidYPa5VIi
V4qYlGJvtmqJTfnlTtF6zKU6dFe41H3fvEvUl5PXt/IeyrGy28+wQW+YxlFe
lt242dM/MI370k19jWVPPP6Q+Tnm7T+httSBmpIo/Oyn5nf6qLbf+Rwn1RTs
6vOU3G/r9b8+a3vtqK8WMTeqOyjvr6vjL1cTy6woDEVG8sdwhI8395GSmZSl
l5SJSTl8+VAiJyrankdRrb9oZT2H5ihy+CRlmxMR6ZiFyLgYWx4V5kgRnhuV
wXN+F9F29ZXUucDqAO6ITVUHZFPy3II6ttbIm8oqbEKjaxl27W7lmn4s1hWo
I0ePYe0nn6KyrkXkahr3qPTAvaSIJeXqTErrJ1Wscahim9p8djlRWUVuvxp9
omdUbqNf7Vh7HhX8+3hvszUuzY7Mw/ujo0WfKJ0x+fpMOXw5U1qulMymBmj1
/Aw2RfX8hvjY1L9tuBSNe2dEJAaOcWDyrFSExhZ1+zl2lUtNnZMg+j115vmg
Iy4lsw7Z0SkVYpl1e9dc49/j1drv6bkXX+3084tu6j8lb+NSc6nX3xpsPs8+
fcTnEfHFXT4XspyDRjUX5WXXXnc9HMkVoqeW/Pktt37ZdEyBvqvQmAK//U2b
k9ju9eiO8wi6rXX8CppRUBugjp/GpbiOH4vFYrFYLFbvUEAuZc2V8uZo1tgU
sSo5d6opXcqZCv6cfE92R1yKOAxxlwlj+pnypHRbec+saYNt9/PqK+beUnKP
Ktnhc8w10qmOnr7fjya/73d8V131RWHT8/EN14teUOdznP94/fl2r4edqf+U
vj7lgP3we/cFHHvjDX0RGz7uvMdfjm6ujhf1EZPjpiAiZKwfk6K6fZ1hUnYc
ypcbJfGocNVU/y9Sc4SyzYhQxZEzER7jkFhUqolJhTqSMT8qm+f/LrK7l035
b8u3rxoLm1K5lO70/CbUNy/Bxs07cIrr+rFYV4z2H2zD0hXrUVjuMt2X4rW6
fQaTygnMpIg9EYey5kVZeZSeGyVq9BXoeVFONS8qp1HKjaoVfIxzo4IUk6S4
NDsiT9Txo3yntzU21V+wo6iAXIryp1Q25VDzpoZrbGpYpGBR/mwqwqjl10+M
VT14bDTGz0gRPa668xy7wqWo38+NN93sN57ybm697Q7ceru5p+v5cinyzx95
KuD/gXX/z/3fEwxLXu+lV940H9u11+Geb34noO+9/wG8M2i8aRuXkktRjcY7
7jTXr9NzwOjcrO+9UY5Ze+fz0188ibC4QtP3a93GsLGz8dRvXzJ99tyLr5mO
K9B3FW7DmMZNi2z3enTHeQTdNvlShbVeVOt1+yQ73YpbFmNP695ghzQWi8Vi
sVgsVjeotXU31q9d6JvTlrmUO0PKlcpTnKs5xy93SuRMMZfqlK1civjNvBlD
ETFvlOi55KxJaHf9zvKeN9940TTusUd+aDuO8pzkcV+66QZjWVbyDL9nJDuO
Zs2V6spx9v/Xy6Zx119/Lb733W8GNDGlaRPfM3OYmngMHfSG6IFld4z0eV15
9HmPv1xMPJF6dxGTig4fh1C5l1QgJhVqZlLEnGIdknUOZWVRem6UwaMmiG0R
iwpXthseMh5h5IgZCIt2mFiUzKRCHUnK83F+8J+LryAHYlQXasGk5P0EYFMJ
WXWiftemLbtw4sQpfP7558EOhSwW6yKI0iI/++wztB0+BvfCVcq/+zrTPUJn
UklSnpSpdl+pj0lZbXAoKTcqu8S+Z5S1Tl/HfaOCf5++0jw7MhfvjXKYGBLx
JR+XcggW9Z7UX2qAwaUs9fyG6fX8JDal8ykTm/LxKcqdGjElEfNjiv14zPm6
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
oYo0y2zKyqXSmEt1wpeKS5FHD32zU882uok3yesTH+rMen36XIN3+71y3sdp
rTkob5c40lVXmZ9z4yLHi/UqCsNMn1NfKMp7opqD8ueUg0Xsqavjg/13pSM3
V8eLc6I8qYiQsX69pPz6SYVo/aTCVCbliLDkRtnW6PNnUWFabpSZR41WedQc
zfS7sk77XCoRoY44xKR2Ty8Hds+3HZuivIasombUNLXg0y07cPIUzzewWJer
6D32VWs3objS6/dvnxiR6CeVbe4nRflOOpPSuZR/bpSaF5Wer+VG5ep5UVYW
VWvqHxXsex67c7bjUv2p75PoLRVt1PB7X8qXEr2mdC5FtfioV5TcW2qoVrcv
EJeysinKmSIuJfpWOTB4nAPjPk48bzbVFS5FuVlUs62z/18/Xy5FDOO/v3xn
p/dzx51fN/K2yMR2fvSTxzq9vrXGHuXw9L3BvrfrjTfd3PHfk5iCLj3XUJ7Z
+0MmB9ze0DGzcO1113dqW3TedtsIxOpuvuU22/EdfVeU13T11de0eyy0XM6H
6o7zCJ4lLqXcwzNLXChu8KLGhks1Uh2/luX4/HOu/cxisVgsFovVW7R7xye+
uW6dS1FvKaOvFHGoYs1FNlwqE+7mDLEec6mOfSm5lLMmAb9+8uFOPac89sgP
Re0+ef1pE9/r0vPflAkDzus4Kefniccf6vR+9Jwuyn9qr36GbuphdT7je7KJ
SVGeWrJyLUKsdfvaZVK+XCmfJ6osKgCPMtXq01mUiUeNlo5B5lITEBoxi7kU
22RbNpXdiIyCJlTWE5vaiZMnTwU7NLJYrC6I+kkdPXYcy1dtCJgnRbyI2FGy
VrtPZ1Kip1Sxx+BQqt1GzygTj9Lyo+x5FO2nmvOiLkP7calhEWpvKb1+32iV
Sb0/VmNTWh0/YlbmXCm9r1QHPMrCpv6tsSlRy4+2OUrdNtX0G/tRIuZHF3bY
f8lq4gZUp07nCGRr/pFsqnn3yOPP+OVHEW+gGnd6jTfazu133GVad8zkcPH/
W51nfPf7D9nu4/Gnnjdt+9sP/EjUt3v17++LnkV3fd2/36pdzs97Qybj1tvu
aJcHvfTKm7bXjLZ3x533+K3z8/99ulPXlWr12e2T+kdRfhlxF6rt968BIztV
i5Fq3D36q2cDsiD6nPKtxk+Lsl2fcrhuuvlWYyz9pO/wz68PsB3fme9qyqx4
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
UnJNP2V7lCcl2NSYOMXxyj7jMPajJMyNujzZ1I9/9niHPVZ9+VTXYtKMmKAf
M7u328elKG8+q9yNkkYv6ixMSudSrkXMpVgsFovFYrF6k/a17sAib7k6/21w
qVyNPVF+VKXiasU1EpsqlnpMWbgU1QLsAfP47AtzfNQE9NF6YHXGLz73y6Af
c291Q2UMCrLmIiZivNrXqSMmpfWU0rmUuT7f+IB5UQaLMnpIdSZHqj0uNQWh
UaGK4+25VHgCZsyLRHRKeQ94LmYH1WIeu1ZjU01Izm0WTs13oqK2BZu37MDJ
k1y37UJFfYCOHTuOTzZsxoqV6+BtWYHyGi8yCpqRnkcsoE7kPyVmqf16/L8n
lQUJjphZa8qJ0S2zBDnPRecSOmPQf8rWuYPMHvR9BOIQdDx0rCoDqRXnQM7I
b0JeqVPkdy1ethrbtu/kHKpu1J7W/aImY3peoNp96veRZKnf58uJ8rEoNS+K
/v6ZeZT+d8L69yLo9yv2RfHoaYkYMCJSsCFiS5QHRX2kBJcarzKpDycpnqgy
KmJVtIzGiHp+IxzoN7wbuJTmtw02FYMBo+Pw3tgEwaYGjYvDuI+TMc+RF/Rr
1lU7ksrxu5deQ98bbgr4//kvXnUVHv3Vs6InUbCPl30l2MelUnKdyKn0oKzJ
i3obLuV0e+FdvJK5FIvFYrFYLFYv0qGD+7ByabMxB06MSa3RV6S4TGVRnjrF
9YprNU5Vpi3PU3tMMZfqlY4JH4eHf/Y9U59kq++5+w6MHvomnDUJQT/e3mjK
kyrKnofYyAl+/aRkLkU5VDqTknOlbJlUBzzKyI/qEpOy41LTERoVpjghMJea
G8Vcii0cp7Ep0WtK1PJzIiXPKfhUZcMibN6yk9lUF0XXq3Xvfny6ZTuWr9qA
qoYloj5iXokT2YVNyMhvEAzK/rvwMSedMalcoUmrw+b09Qgqcos+QdQjKKvY
Jaz2DXIju4Q+U2z8ro0vchs9hdLymy29hJosvKLBxK5MeTPa8cbZ/J0iXpWc
UyvyeQrK3ahuXIJG13K0LF2L9Ru3YNfuVhw61CZ4HatzomvVdviI6BWWFoBJ
GX9vdCZFf3eofp/EpUzfscQurTyKc6SuHI+fkYx3R0WZudQYNS+KavcRjxoy
SbWJTem9ppTxRs7U0IgL5lKipp9yHP2HO/COljMl2JTiQeMpbyoRITGFl2Wd
O8pTHzM5HP3eG4O/vTUYryt+f+gU0UsqLO7y7aHFvtxcA7m/VGqeC3lVXpQ3
e9Fgw6XcngVYvGwNPud3TFgsFovFYrF6jQ63HcK61S3GPLjKpfK0nKhyNU9K
MKlGxQ1a3lSl1GtKGevOgrs5A+7GNOZSvdDFOfMx9+MhGDviXxg26A1MHNsf
USGjkZ8xR/Q8Cvbx9VbTtS3JnY8ExyRbJmVwKZlJiVypcfb5Ue3V6+tyzb4O
uBRtN+JjhEZFKk4KUMcvGTNDk7mOH9uwj03Vi3p+qfluYcGm6qmm33ZRl41l
L6rLR8xg2/ZdWPvJFngXr0Vt8xKUVXuRU9xse7313Ced+/jqrTUKXpRR6ERm
kcqacsvcyCv3IL/CjYJKj2Yviqr9XVjlFcvop93vuvMV55W7xbZzyzzIKVX5
lbDGs4hf6XXfdJZh5NRoxy4YhiXXyu7vWGJmDTILGlBU6UJVwyI0upZh2apN
+HTrTuzbf1D0pmLZi/LNjp84KfLs0nL9mZR/Tylz/b5AzNE+R0rNueIcqSvH
U+ak4f0xDoNLUW0+o7fUBDVXauhkxVNUNkX5U6LXlMam5Hp+3ZUzZWZTMYJL
vT8uCe+NU36OjcPoqXEIiS26LNkUmx1c+5hUrBY70gqU/1vUeFHp8udSotfU
wkWiTi/nPrNYLBaLxWL1Hh0/dhSbN6z0zYc3pyv//8vT+khVqDlSgkk1K25S
GZVgUxXamAK17p8rE+4m5lJsdne5piQSyfHT/DmRTf0+PU9KzZUa58eiTDlS
Nj2kLpxJ2XGpGQiNcgTgUskIiUzGnIgMxPB8DluymNvOJEbSKPKl0go9SCvw
IFX5vby2BRs2bQ122Owxolo2Z86cwaG2w9i+cx8+2bhD5AJV1HqRXdjgV4sv
EDegHCjKf9L5E7Eh4kQycyqu8aK0zovyBtUVjaormxQ3e1GlWf9dfK4vb/KN
pZ+0fpmyrbJ6dZvkklp1HzrTMvhVBXErr3I8yjmVeETuVUahy8jXMnJvpJ5E
dr2IAtYBVJycXYPSKjec3uVYtXYzduzaK/ptHT9xQvSmYqk6deqU6PdGtR5t
/90GYlI6gzLc4JcjlZTtX8uRmdSV5Y9DszBobIxRQ4/q8hFvopwo6ilFLIqY
1LCp6k/iVHrO1EC9nh/lTI1Qc6a6hUsZbCpS2a5Drec3LhGDJiQLPkU5VMSm
5kcXBP36sdmXn31ciu71aUpsL6hVuVSjDZdasHiJiEHMpVgsFovFYrF6j06f
OoWd2zb45sOJS7lzNeZUqdXwIx7l0tykfmbtNeXJgdvJtfzY7As15UkJJhU3
DeHzx9owqdG2PaXsOJSJRUk8SmZS51+3rx02NW8cQiNmIzQqRjAofy6ViFCH
8nl0HmJSq3rAszG7x5jmJ8T8dh0SsxuRku8y2BTl0NQ0LcaGjVuuWF5AddRO
nzkj8lYOHjqMrdt2w72A+vw0+F1LuxyW1Dw1D0qvsUc5SpQDpecz6fyJmBFx
JWJM1U7VtS4v6txe1LvVd5n1n7LFZ26PMPWHsJrWr3Fp23T5WFZls5lbCXZV
r/KqQin/ihiVzqlySr3IKvYo5+LRagL6WJXcy8rHOqo7rAeXmFmN7MJGNLuX
YPW6jWjdewDHjp/E6dNnruh6fyeUv2/r1m9BdlGz3/VT/45Vm/LuZC5l7TMm
9yDTeVSg/mJBvx+xL5lnR+Thg/GxEpeKEnX8BJeiGn6TYzFsSixGTFN/ipyp
CWrvqYF2faa6o5afwaYixDb7j4jGgDFxGDg+CYMmpAg2RTlbYz9KwNyo/KBf
Qzb78rMvXyqj2I1CJe5XKf83aLZwqSbl/xQty1di/4GDzKVYLBaLxWKxepHO
nj2DPbs2++bFm9IkLqX3lqJcKbdmp5Y/Vetfz8+TpfaZYi7FZp+XiUnVlUeL
PCk7JmVwqXk2XMqwPYcK0+v1dVvdvna4VMh4hEbMQWhUrG0NP+o5FRadhKik
UuWZlLkU22wfS6H5bbWeX3qhB+lFHsFRapsXY8fOPSJX6ErT8eMnsH7DZlQ3
LERqjn/eim66foINUF+fvGbBbbJLVKaTX6EyHmI+xH6IAel5TVXEn9xe1Gmc
id5ZblJMc0ROxS7tvWW3Te8H67vNLm09l2Sn9lmTtu0GjVXVaiZmJbiVSz0W
nVfRMdLxinwqiVPlV9hzKrVvlROpuWZGZdejqr2/iynKNab8s7WfbMSxY8ev
yPmwM2fOYv3G7SiocNv+W/XLlcqq93EpGxalfw+qzX2kmElduaZeTUMmxhtc
qr/OpcZrNfymxGL41FiMnKb+JE4l1/J7T6rl1/1cSq3n1294lLL9aLw7Jl7k
TA2emIKB4xPxwYQ4TJiZzHlTbHaXrXKpBCUeZJa6UKTE+mq3P5eqV/5PsGjV
OvFeDovFYrFYLBar9+jcuXPY17oN7oYUdW68MRUed7aWB1Wl9ZZyakzKo/1s
1ur5VZtzprzZas6Uvi02m91pE5OqLXMgJ3WmYEgd9ZSSuZSfrXlRFh7V/XlS
Fi4VNgmhkXMDcqmQyDiERif2gOdhdk+13msqgXpN5TaLfKn0Ii/Si9UeRE2e
5dh/sO2KyJuivlEHlHNtWboKRZVeZBQ0ilpq8drcfVx6tchX0ftDqXX5XIJF
Ud07Ynl6TT6ZQxH70XOg9Bwneie5WeJP7bGnC/X/z957gDdSn9v/N5RNAk/g
wj/5AQmk3VxCeifh5qaQQEIaSUi4SQgJIaFs9Vave2/rXmQVW3KR5N7Luq17
kbQLS+8sdWkBAgtsgy05/3m/o5FnVNztsXff8zzn8dqaGUljeSV9PzrnVdhV
MFYl7JpkVnRbiVFRnkrJUfk4FTEqVZ5K6fybzFFN+Pr+HEH6/jSMqibwcUjs
pLZlBC07J9AzsAf33Peo6Pk7HXTs2DE8+9xL6B28O+jfqJpJBeNSoXiUsr16
LhgzqdPb5spuRKRUBnAp4k6UjVKyUsSl6Ku6y883YyrGKnf5KTOmFopL+bOp
aJvo8yMutTlZZlPbksvFjKwSe7fu55LNXjmW/r+X/u+nfHxdlwsd0nN8v/c1
gfr1woD0/L/3oSf0fkpksVgsFovFYi2C3j7wOtwjjXANOeAaroJ7ot7LmnZ5
udSEH5ciTjUcOGfK0yjtW8tdfmz2HDzUXYrmmlyYCmfBpApCZaPiAjjUpBea
RflxKboOUxoMlsKQXCq/uAx5RuZS7KmtsKnK+mE4mydEXqqm0yOyUzQH6YFH
nsbb7xzS+yl0wUWZnKNH38VLL/8T9z64D8MTD6JvaC/qWkd8M6MUHlBZNyDW
/Im5EH9R5kO19MgsSj0XilgUZZGUrr0RlzbPNJMc1EIyKX8upWZTGj7l7QdU
8lQiRzU6yajEjCrvfCpf319PYM+fYFTKTKrGUIxKxUeCPCblnr9RDIzdg/sf
2ocXpd/RqSp6HL78yqvoHbpLut+B3X3TcampWJR6hhTx1XLmUWzJUel2mf+o
uVSit8MvTeZR0V77MlPeGVNhosvPqpoxZVq4GVMhZk1Rn9/mFIVNVSAi1Y4c
YxP3E7PZszB1N9Pnjxqk1y2d0nP7gPe1gfo1Q/+IC3c/8LjeT4ssFovFYrFY
rEXQO2+9gd0THXLOSbJ7XM2lRlVMSuFSEyG6/JrgnqhjLsVmz9LjAxVoayhA
SXF8SCZV5D9XqsCfR8Vqu/r8eNTCZ6Om4FJm4lJFksuCcqk8gw25xeW6vxdm
L3N716orBHsZQVXLBGo6PKjzsqm69nE89uT+UyYzRffj4KHDeG7/y7jngX3o
H71bsCj1ORHnQ9XRR111de0Ki/L4clHEanq886GI5QxOyCxq1K+PbynZk+Ix
dyCHGnYHcii1/bv+1B1/ykwqhVFp+JQqP0WMqr5d5lPKHCrKlglGpcr2qGcd
hcrvKHOoqFPy8X37xe/s7XcOnjKPxZMn/40jR99F/8jd0uNswO8xqM1KaTr8
pujp8+dRarYVjAGyTz8nZldhXZRZ8B/q4lO4VHjKZIdfjNf0b2JV25TMlGbG
FHEp86JwKZo1pbCp9bFl2JTkwNaUKplNxVdga2IZTBVdzKbY7Bla4VKNvW7s
HJN7hP1fn4y6duPBx/bp/dTIYrFYLBaLxVoEHTr4Nh64Zxzu4WrBk9zjdXB7
2r1cSpktpX59qLCpQbnrz9Pl3b4JblcdXKNKlx+zKTZ7Jm6uzUOpMSGQGwVl
UrGhs1EBTCpmMh+16EzKa7o95h0wWAySy4PnpQxlyC2u0P29MHv5u8zHpgbh
aBxFNeVeOj2o20mdfi70Du3Fvmf26/00Oi8Ry3jrnUN44aVX8cDDT6GzbwIV
tdpzoKz907p/VdMoakU2yiW4i5KLIi5DjEbp6BMsyst9lFzUYrEnhT+p50oF
ZU6uSeak8Cc1c1K4064gJhbl41EqJqVYYVNKz1/7rkA+RRkqdcdfbduEj1HJ
+Sk5Q6XO+Ex2/AXyKcr50Jyvjt5x3P/Qk3jpldfw1tsHV/zsM8oh9krn0NEw
IDiU77FYHYpJDfjxqKnzUT7exxkptsoZhfXYHG/1deYRZxI9fl4uRTmpWK+j
1X1+SfIcKuJYMpeSZ0wtOJdSMlMKm4oqxYb4CmxOdmBbahW2UHYqqRLRaWUo
LuvQ/Xyy2SvBxKXoc0dNXi41FOS1xrhrDx55/Gm9nxpZLBaLxWKxWIugo0cO
4+knH8Hu0doZcimFTY16u/xUM6bcyoypKiwll+prN+EvN/0c/3vVV3y+9kff
RnzUHWJuz0yOEbntVlxz9ZWaY9zy519irL9cd27BPnXd3lCAcksyDAXTMCn/
rJQ/i5pqftRSMal8hUtlwmAxhuZSxRXIMzp1fy/MXgFW1rBp/bt+CM7mcTFj
qr7bgzrKwex0Y3D8Pjy//yW9n0pnrZMnT+K9Y8fE7Cj3XQ+htmVIc9/luVH9
8twoXzaK5mu5fdko4i/EYXwsyjXJopRs1ELloqadB+WfeZKscCY1a+qbijeN
BvIm5WfqbFT3kGxfj5+flflTIjul4lN03uT8lNzxJ3r+2tyaDBV1IvrPRdLw
qRCPVUdDP9q6pddMe+6XHo8v4siRozh2/Lj4Pa8kvfHmW9Lj8UHpvvdrmJTy
mFQzKXVWSmZT2nyU0osYLCOl+/8t7GXnXHMLIlIq5BlTgktZA7hUnNexQfr8
KDNFM6bWRslcivjRYnApOTMlWbqOddHExOzYmurEtvQq8XVzYjmSsp0osrbp
fk7Z7GVtek6RniuqpefhZum5untcfg3j//rDs/tuPLnvWb2fHlksFovFYrFY
iyCaa/3PV17EnrE6L5eq9fbyTcWlFDY1rMpM6TdjKnzTLfiP//iPoN4W9pdp
94+NuC3k/vmZ23RnF+xTw73tRhRlb0d2+mYYciPQ21aMCmsKjP4zpaaYKxU6
G6Uzk1Juc2E8DOZsGCxmyRVBuJQdhWYHCksa9H8/zF4ZVvIZSp9fK2Wm3Gjo
9qC+i+Yo7Ybrrofx1ltvr5getePHT+D1f70J1+770NA+Jtbz1Wv1NEfK3jAI
Z9OId26UW2R9iKsQYyHmQnyGeI4yM2pkgTiUwp9CMaghrwdV+SYfdxqX7d+z
p840KVZ/36ViTJ0KV+qXv9LPxGVDgcyJMlHCfap/q6zwKLXpHCr5qUlG5UJd
u0uc60k+NQJH43AAmwrFV2SOuEvath/OxiE07xzHAw89Lj0u39H74TZjEUt7
9PFnUdc6HPRv0Z9LaRlUiHxUwDnbJdYidf9/hb3sbCjrQOwOh49LrY8uFTko
4k6RaXJ/X5zKvj4/ykwly5mpsFjvjKkIizjGgnOpoH1+5diUZMfWNCfCM5zY
kupAeEoFMgrrYKrYqft5ZbOXrb2v7ejzRq3S83rPRCCXotciu+++F88+94Le
T5EsFovFYrFYrEUQreO9/dabuNvVLPfvjdVKrwNbvVxqfAou5fb2+Q1550x1
TM6YGpU7AZeKTd38x5+H5EoXfeSCaTNTn/j4RSH3T01cpzvPYJ8a/vUvvq95
bP39r7+GqSguNOPxy0rNhEvpxqTEbZau35AEgzkHBkuJ5MogXKocRmsNzJWd
+r8fZq8MqzNTdYOwiz4/OTPV2OtBE+WG+u8SPWo0n2k551PeffddPP/CyyIf
1Sbd7uqmIcEy6H4q+SjiIJM8yoUmwd4m81EiQ+SdG6WeGTUbHhVs9pM/fxpR
9+yps01jk116/qxJ4UtdKobU4WVIGo60K/jPgnGk1r7J7ZVtgm6n2r61T8uh
BIvy8ig1kxLeOZmfEv1+0nmvaZlAtTc7Jff7DWn76QJ4S+DjlroY69tG0TNw
Fx54eB8OvPW23g+/KUWs9JnnXkLv4N0h/xbVHX5zZVLBzhWbTTZXdiE+q0rm
UuEm0ce3KT40l/Lv89tCfX7xNpGzEl1+izFjKlSfX1wFNqc4EL7DiYgsJ7am
2hGzw45sYyNKHD26n1s2e1maepql59W6nW60Dcl56lG/1yv0OmfvAw/hn/98
Te+nSRaLxWKxWCzWIunE8WO47+4huIflrJN7olHOQQnuNN0aF7GrAW+fXzPc
rvrJGVOCSy0+m5qKS5EthTEh9y0zJ0y5L3Mp9kL5lz/7nuaxdcNvrp0ye6Rh
Tss1I6WZLSXdFmMKDJZ8yVaRjQrGpcxldfq/F2avLPvWwwc0fX6NxBr6POJr
U5cLTz61X2Q+lpOIk9Fteunlf2Lv/U+ge+Au1DRrO/t8PKoxkEcRi6EMEXEf
hUfNJh81Xf5JmflE/GnQL/ukzjwp3ClYZmk6VuRjQ14upHyvdnNPEGbUpd0n
4FhBttUcU7UN5c0UE4fyt+j1882dcqGmZRzV0uNskk1NZqcqAzrqdk3Jp1q6
xnHXvY/ghRdfweHDR3DixPJjp5TfGxi7d8q/Q21Wqj9kX1+wXJmYTaX3/yPs
ZW1/LrUm0oJN8VaEp8jsyZ9LKWwqSunzS7Zhc6INYXHynCnaf9G4lLiN8u1c
HWHBuhgbNibKmanIbCe2ZzqxNaUSMTscyLO06n5u2ezlaPq8ET2/NvS40Ul9
xK5ALkWvTx596mkckZ47WSwWi8VisVinpk6cOI7HHrkHe8Yb5S6/MYVLTZeX
8p81tVNmU5SZUrr8liAzNR2X+u31Pwy57+9/e82CcKnB7tI53fbx/gr0d1ow
tqts1vsOdJWI/Zear9B10nUv5nlRe6jbOmXmjS6jbeZy7NG+snnPEKPrH+6Z
/vpnzKX8slIFOdHIyYoIwqNiAnmUXkwqT+nwS4fBUii5TLIjgEvlGUpRVFKt
+3th9sq0wqZEn1/LBOq73Wjp94i5BLWCK4xh/4uv4d///rfeT6tCR4++i5de
eQ33P/wUBkbvFvko7X3xnx/lQkOnO6CvT+FRyvyosSl4VLA5UGr+NOTlT+oM
lJJ/UjModadeh1+WaZIjuQU/U0yzr+j2+5s4m3C7S2SSfN9r7PayIXkbxcrP
6Th0/Em2pBxbu428nYpDdXq026mOHcw+LqXq9KtqGhXMkNjUJJ/yywfVTJ2d
om68XcN34cFH9uHFl1/FkSPLZ42N2Klr94PS43Mw+N+eii9puZQfi6rxY1Eh
zgebHczWqj6kF9ZjQ7TMkyjvRL18xJuC5aXUfX4iM5USmJkSM6YWm035+vzK
sCnJgcgsJ6JzqdPPgU2J5YhIrRT3Te/zy2YvN9PrOXotR7n3ndJrkaEgr22G
Xbvx9PMvLOssPIvFYrFYLBZrfqIuvxf3P4t7PB0yRxqtk2dGTTlfKtSsqU7p
302iD9CXmVpkNuXPpX74va9rvv/A+1dhuNcWsB+xhA98YJVvu3M++AFc+Y3P
z4hLEZe5/dbfiu3PPeeDYtvzzzsH377yi1h35x8E7wi2H11nYuxq/OgH35S2
Pxfve9/7xL709eKL/hO/+82P0VqXH3RfYlcx4f/AFz//aXzwg+/33cZLLr4Q
f/jdtWhrKNBsf8vNv8KXvvBf+NxnP4HvfufLaG8oDDjmLX/+5eQ2V30Fnc1F
vstW3/Z7cV1fuOJTWHP7jeI+UxfdGWecIa73o5f8fwE8Zi7npakqW2xPt+Gb
X/8cmmtyxSymv0q37TOf/pg4N2eeeYa4nbkZW3z7VViS8P3vflW67ExxPXT+
rvvJVQHnwd/G/Cj84rrv4tOfvETcFzo2XQ/9rLI0Oeg+/ueCfkazx37y46vw
oXPPEbfxsks/gut//n10tRRr9t20/iZxbi84/1zNY4t+h5+74tPCP7762xou
FRe1Gld+80vSPh+SbqP8GDnrrDNx+Wc+jlv++pvlwaH8WRpxKUumZIPIRQVm
pRzINZShsKRe9/fC7BVqb59fuWA5Y6hplzNTNJegxcumBsfvwwsvvarrcyp1
oh08dAT7nnkBvYO7NfdB3YNGjIO4h8KjKN9D3IdySJRNIk60S8WjgnX2+Xfx
jag6+JQcVL8/g5omAxXAoKgzcadbw4JkjuPycRzRf9c6LliO2tSJJ9iO8KjI
H01+L7u6ZWxyn4DLvMeRjq9cl8KPasR1yq71Xa7lWQrn8t1OcVu1+waz+vZU
q9mUX3ZK018XZO6U/+/e2TgoHhNP7Hseb71zCO++957uj9VHHtuH5s7xkLc7
GJcKzIoF5qN0//+CveKcZWzE5vhS34wp4ktbp+FSSmZqe5o8Z2qzmDNlE3Om
iG0tKpsKl28nZabWRlsRFl+JralOROVMsqktSXbEZ1bCbO/W/fyy2cvG3g4/
eh1Hr9+6xgNnS5HHXHeJ/mMWi8VisVgs1qkr+gzSm2++gfvv6vZyqRq4Pe2z
5FITKjYl7TtRrxuXuuPvNwTMjEpP2hCwHzEn9TaUnfrfq74yLZciHkJMZqqc
1eWfuQwNzizNfsSFPvLh86fcj0ycxFQQreVZvTZ87opPTbkfcRX1Pv63sdQQ
G3BfPnrxhzXbUK+hchlxIOXnV1z+CXzlS58JuM6Wurx5n5ei7O2abYjjEGsL
dQziepvX3+xjev4mDlbn2BFwX4mJEesKtR+ZOBXxM/991eeC/n3b334b8hgf
vvA8wdqUfek+T/c7P/vss3yM5x+3/m7K20iOj1m7fJiU4FKxKCpKhMGSLdko
uSIIl6pEobkKRht32rDnaGVtvG4AlWIO0xhqO10iL9U+7EFTnwctvbtxz4P7
8M7Bg7o8n1JW69XXXsfIxL1wNGjX+WkNn3I2Co8iRtLQ4RY9c0pnHzEiZYbU
wMQkj5pQZaHG/LNQxKEkD0oe8HIoMQtq3MughlUZKL95T/4MqokYVJffzCXB
gCZZE7ElmoHlUGWIFFZjbxj0zWKSv5+czRTMtL3soaAWx/byIPl6RwXfUnOu
yZ+PBTAsdfZpkjWNB7AxfwfjZ8r1OabhU9NmhWqot3EAPQO78dQzz4lePz0y
fseOHcfLr7yKtp4JVNaFYFKqvzs1lwrKojgfxZ6nc03NCE+y+bJI66NLRQZq
Ki4V550zJbr8UuQuv41xNmlfK9ZEWCa51KKxKXnO1OrIEqyTrnNTgl3wqOi8
STa1LcWOHFMTLMym2GzZ0vMFvY6r2yl/tqhnQu4nVq8vjLvc2LP3ful5imdL
sVgsFovFYp3KovWQo0eP4KF7+2WWNFotvR5skTnTjLiUYmJTQ3B7euB2NWu7
/BaRTflzqTv/8TuRaVH/jHI1/vtd9e0vBXCb6bgUZWFWrVo1LWdQ+IW6f86f
g01l4jsjqozXX26auqsw2H1cSC4Vykq+aj7nxZ9LLYQpN+V/X//2l+tnvH9B
VnhILjUTU2ffbPal3B7xnbTEjSIXNd3227f+Q38WpXZBHIqKk2Gw5Eo2h+BS
VhhtdShx8LoMe+4uUzJTdYOopD4/msfU7REzs8mNvcRi7sETT+1f0udRyh0f
OPA2Hn7sSXT0ugVrUa/R+2ZINY16O/vcgv1QFknT2Tc6OUNKYVKjfgzKx6Gm
yEKpc1AKg/LPQMlzlyZzUDKDUvJCMptxNsocRs2cppoptNBWeI+WZSnMakjD
xQS70vCrsaD8yseVprF6n+D7D8+ATQXLEMnfE5tqaB/D0PhevPrav3D8+PEl
fcy+9fZBuO96cGomVa3NQzGTYi+mC0rbEJth982YoszTpgQbtqdOzaV8XX6p
cpffxmBdfouZmfLOmRJ9fjFl2JzsQESWEzH5MpvaluZEbKb0etfWofs5ZrOX
g8VzoPQc2uB9/dY7EThbil7fPPTYEzjw1ttL+tzIYrFYLBaLxdJHjz04Afdw
reBJ7okGuD27Zsml3N6ZVAOS2+Ear9FyqUViU8G4VL0jS/MzysF0txp8+7TV
F2gyKRd95HzBSqbjUv7zqKh7rqo8TfTZ5e3YKroA1Zdnpm707ZuVukn8jK6X
et0Sou+AzRgvWNDNf/hZAHuwW1N8+378ssD81/hAhei7S09cj699+XL88fc/
WRIuRb2I1EFH92NXp2Xe5yUUl1p19lnifvn336lNl139/a8HsBz6ffd7bxuZ
cl1K359y+bawv6Cvw4yOxkL89NrvaPanXj81Owt1Lqi77xtfu8LXbRjs+uMi
bxe3kXob1dtcdNGF4v6Rr//lj+Ss1N9+p70d/3UZ0pM3IT8nClHb78A1P74K
55zzQSQnbNCfRalNHX5Gmi1VILlEZKP8uVSR0QhLeYPu74XZK9+CS9UOoKJ+
CPbGUdEDQ1mp9hEP2gY9aO4ldvMA3njzrSXJobxz8BAef/JZ9A7uFX1oyjq/
/wwpOSM1IeYpBctIEVsacE0yKQ2DmphkULvUWShVH5/CooJ28fkYlMvbvzch
rGSIREbIy6CItSgMSNNTN21WZvE8G3ZlV/OqxmENQ9J6SLutv0Mxqwbv8fy4
1IzYlJpPee9XVeMgdo3sxYOPPIl/vXFg0R+vpCOHj+Lxfc+jvnV4Sp5UVu3H
pZhJsRfRJY4eZBQ1+jjSmkgLNsZZEZ48NZeKU7r8UuUuP2JZG2JtWBtVInr2
fFxqUfv8zFgdUYI1UaXYQH1+aTKTiit0IjLbga0p5dJ9q4epYqfu55nN1tv0
Gs4pve6gLua24eBcqlP6+TP7X8Z7OvfdslgsFovFYrGWRk88chc8o40iM+Ue
oxlT3d4M1Gy4FHnUu2+jtstvCbkU/fyzn/m45ucRm//m24e62tSX/f2WX4uf
T8WldjYbNPyB+vb8Zxn96cafavb/zS9/6LuMZi9t3nBz0I45MrEc9b47UsLE
z4mP+HOPzqaiac/LYnCp6679Hwx1WwUTU+ZVzfe8BONSn/7UR30ckbjRqlVn
B2xDmaTx/gqxDXEu/8urK9JDXj/N41Lfvu7W4oDuPPWcr2Dngn6XyuXBsnC1
dvn3PNpnQ1VFGr797S9rLr/hN9cG8B3iU+ptvvfdb2hnSS2n7j5fh5/kogQY
zDtgsBRJtkm2B3Cp7AILjLYm3d8Ls1e+fZyCMlP1w6LPj7pgiEl1jspf2wd2
w7XnARx9991FY1PvvXcML778Ku6+9zG097oDbqM8Q0rOSFEGaco5Ul4mNejN
QZGpx29AyUMFmwulykK1qTr5WnqVPJQyD8qFOqXPrnl8MvPj697zcpUgDKp8
ShbhnaUU5Pv5eE7cSrGKVVV6WZXSFThln6DwNJwqhP37Cv1Z3kxuP2WnmneO
Y8zzIJ55Xl6HW6zHLWX7nn72BbT1jM/ob20m1vv/BPap41xzK9ZFyiyJ5kNt
iCnFtiS5q28qLuXr8kuWu/zC4mxYF+03Y2qxM1Pb5czU2igbNiVWIiLTibgC
JxKKnIjKdki3rwyZhnqUOnt1P89stp6m2VJVbRNootdC0usa+uzNhD+Xkl7n
vPTqG4vyPMhisVgsFovFWn564fmnce/uHpkfjSgzpkbnlpkSWauWIFxq4dlU
KC61ad2fND//whWf8nEef2ZTU5ExLZcyF0RrLvvm164Qx1Lbn49Qlmam9+P6
n38/JEejXI76MppTRTmcwe7SJeNS9P1Yf3nAMeZ7Xvy51LnnflD0Aqqv49of
XanZhjoYiY0pl9N1nHOONpNlyI3wXU7Xp76MbrP/bfyvT30sYJtQ5+L2W3+r
uX3i+v0yYca8SIztKpfuSyFMRXG48pva3shgXOrWv90QwLeuvPJLiAy/fXky
KcGlYlFkSPLOliqWXC7Z4celHMgpKoexjGdLsRfGcpcfrf8PwV4/gupWt/jc
La1vCDY14EHv8N14/oUXF/yztkpn375nXsCukbtF3sV3u9QZKe8cKeJBxIYa
d8rZJf/ePso+URZqYIpePvV8qHa/PFRzzySHUnr5lLlQvixUk3YekmBQfvxp
9jzI73eyUL/fml3i2LL7Vf9WWb1t9aSV34E6Z1UxTc5KzloNBPQEzszB52jN
hU2R6XZ0Sr9T4kZvvHkAx4+fWNDHLunNAwcwsfvBmf2dMZNiL7HzS9uwNcEq
5kuJLj+aMZVoQ1Ta1FxKYVOUmdqizJiKsYrM1ZJnpiJLsSG2AltSnIjKcSLJ
KPOpiB0VSJK+Lyxp1v08s9l6mmZLKVn3Tum1zrBLnqGpXk8YnrgLr/1raTLE
LBaLxWKxWCz9deDAm3j0gVF5rX24SnpN2OTt5JttZsolz5lyd8A1WqNlU0vI
pai7zX+Nn/r9rMVxmp9d/l+X+Y41FZeKjbgt4HjT+aKPXBBwe2sqM7D2jhtx
7Y++LXgJdfRdeMGHRG+det/tm27x7RNqNhLNdKIskJJdWkwulZEcFvT8z/e8
+HMpykpN9zumeVv+21D3nnqb/Mxtvsv8O/Rm4sTY1SHPhbqHULE/18rJ2CJ6
DkuKEwRTmgmXos6+YNkw8qUfvQj/uPV3+nMofxfE+s2WqvTjUg7BqgottTBX
dur+Xph9angyMzUg1jccjaOo63Sjpd+DnWMedI170DG0G30je3HgrYML8hxJ
+RWaAURdaxOee+FoGAy4TXJGatg3R4rYkLq3j3JN/kxKsZpD9QxPPSNKcKid
HjGjqr5jkkPV+DjU5FwohZPMr4fPjwetMM+kGzDYLKvpHXr74Gxq+ttGzLC+
dQSjrnvw2utvCg66kLrr3ifgbBya/pyFOG9BOwnZ7AWysXwnErOrBEsiLkUz
ojbF2xCROj2Xik2X+VV4ig2bVV1+lJlaGi5lEtclMlPRVmxMqER4hhOxBU4k
G52IL3QgKrMSqfl1up9nNlsvyxnhEdRIr12ad8mv10Zd2rWEMen7vfc9JL1+
e2dBn/9YLBaLxWKxWMtXx469h6efvBfukVq5y2+iVnptSH18Y3PgUt4uP1e9
mFe1mF1+obgU+ctf/ExAzuW31/9Q87NN62+aEZe6NQQbmsrEnNS3lXjKTPdV
cynKRX3z658LuS1ldUyqfM9icKlgLGYhzstMuJQ/l/vrn38ZsM0Vl2t7EBUu
Rb2Ds719ZJrhNZtz8cXPf1q7f+J61DmyfPxmWi7l7em77R+/18zC8jfNo8rP
jtKfRykWs6VSYbDke2dL+Xf42ZFfXAJTWQt317AX1L48TN2gNzPlQmOvW+Sl
el0yn2rqduOhx54WM6Dmq3fffRf7nt6P9p5xVNRqb4t6jpSaSal7+9r9mJSP
Qam7+bwcSs2ifP183lxUo5dHEYsS3Xy++VAjvplJahY1Vw6l9+93KR4/wRhV
hV+WSna/73wGXqbkrQY0/YHqy/2ZoOa21ATyH+V6RibuwT9ffX0BXuHJeubZ
F9AuPZZme35O18cIe+ltsfcg29joyzitibAgLM6K7SnTcykyzaGK9Pb5bYz3
dvlFLEGXn5pNRVhEZmp9bDm2pDhEZirFKLOp6Bw7YjKdyDE1wlrVp/v5ZrOX
2oJLNY6iVnod0yq9zume8GBMtY4w4XJj18RuPPXsczhy5MiCPf+xWCwWi8Vi
sZa/Xtr/FO5yd8r8aLRaZJ7c7pG5d/l5WsRx9OJSxHbUl517zgc1eRSaKaTO
Gk3FpSjj5M+Cvvqly0OaslDq/f1nWpFpLhN18lFma6q8FJlmKUVv+zsuvug/
g/KK8z50Dvo6zCG5lNmPWy0Ul5rveVlsLkXnzX8+F53vqW7jdT+5SjqXpnlx
qbio21FSHD8zLuU3QyouajW++Y3PB9xuxb++/kf68yjhWHm2lEmZLWUN6PAr
MtuRVWCBhbNS7EWwvIY/gIr6ITiaxlDb6ULrgLzOQXO0qc+vf3wvnnnuRcGV
5qqjR9/FQ48+jdbuCVTW92uun/iBmEvkZVLyLCk3Gim/pZolRcyJ2NNMGJRi
LYuSZ0XVemdF+XJRSj+fXzfftPmnZfD7Wy6eKkc1lRVeNRMHsKma/qDXL1wr
u7p5GJ19u/HgI0/hyJGjc378njx5EgcPHkL/yN0BOb+ZnBNmUuylMn1+Jb+k
DWsjzaLLTz1jaiZcSmFTNGtqq7RPWKxVZK40XX6LxaX8+vzWRkvX781MxRc5
kWpyIrHIgegsO+Iz7TDY2vjzOuzTzvSajeaCNnTJ80Dptdq4JitFncy78dob
BxY8L8xisVgsFovFWt5681+v4ZEHXPJaO2Wm3M2SB+fApbxdfp5Ob5efY9HY
1FRcqrO5SLCnUNkTyiCpjzUVl6J/a/adxewosv+MqBtvuAZ97ZPs43e/+fGU
XEoxzTIqyokQ1+9/f9TddZ/4+EWay/x7+GhW1AXna/vt5sKl5nteFptLkT/2
Ue25txTGzOo2zoVLbdt4i4bh+HOpALaUH2jq9fvVL36As/2YJXX66c+kYiZn
S5mzvLOlKoJwKQeyi+yw2Lt0fy/MPgXtXcMvp8xUwwiqWlyo73ajfdiDPum5
iNY72gc88Ox9eE65kxMnT+LV1/6Fu+59HC1dE5qclJJpUZiU/ywpdU6KGJTa
Yk6Ul0O1+TEo6vxTOJTCorTZqMmOPppvRDmd0CyK+dOsH09eZhSKyZTX7poV
u/K3ZjZTKDal2p5+v63dLtx972N4/vkXcezY8Vk/jt999z08+vhTqGkZmfG5
4JlSbL1sruzGtkQr1kTIXX7rokqwNXHmXEqZNSX6/BJpzlSpyF0tSWaKTB2E
vsxUGTYlORCZ7URysRNpZicSCqXvMyqRlueU7iu/NmKfPhaf5akflF6rjYuZ
oPRajeZqTqjWEEa9nyk6dJizUiwWi8VisVinm44cOYznnn7Iy6UccE/US68R
e+X805y6/HrgHle6/JyLwqam4lLkb33j8yG5VHzUHTPmUsRs1JdR11pLbd6M
biPlmPyvm/rl1Nv84rrvzohLqfnUV76k7SmMCf9HyPv961/+YJJJ7SrDj37w
zYDbNBcuNZ/zslRc6rvf+bLmst//9ppF51LrVv9Rw3Cu+rb2NnzrG1+cgveo
LH2/fs2fNftSJk13JuXr8EuBwZIj2RRktpT0fUkZDNYmlDp7dH8/zD41rWSm
Kr2ZqZoOF1p2yZmpAen5qGOY8khuPPDIPhw/PvPP3tJa/vMvvIIx9/0it6K+
Pv+c1CSTcgcwKcpCKZmojl2BuagWPxZV366aF+VlUdUiGzUymY3SzIwKxRCY
Sc3/sRVqNtUCsim/x7I/l1LYVF3rCHoH9+DJp/bj8CzW62gu2oED76C1awyV
dXNjSmW+c6H/74R96pu6/BIy7VgXJc+FWhtpweZ4OQc1Uy5Fs6YiJW9Lkfv8
aM6Uhkstep+fkpmyYkNcBbamORFXKHOpVKMTUTl2bEsqRUFpG/f5sU8bixmK
9cOobptAc588W2rEbw3B5aZ5U/fiyJG5Z9xZLBaLxWKxWCtTJ0+ewKuvPAfP
aLO83j5aA7er09vlNxsuRZ6A29MvfW2Fa6zWy6WcS86lYiNuC8qkiJ+oe++m
41I04+n8887RXH75Zy5DZWmyYES0zfhABezWFKy5/UZ8+8ovoqVO5jPDvbaA
TjYlv0T7rl8d2PGncCliSHS9v/r59+AsS/Xdnl2dFnz6k5do9inICvdd/svr
/jfgmH+68afYFvYXfPYzHw96TubCpeZzXpaKS23ecLPmMsrQ0W0Z6CrxbdPT
VowdKWGCD66+7ffz5lJ33v5/Gobz059ofx+rVq3C7357LW695QbceMNPxDY3
/OYafPjC8/DnP/4SOTu2+/a9+U+/0ux72aUX68+kyEWJMJjSvLOlLAFZqUJT
BfKKy1Di6OZ1F/YiWl7Hp8/g2hvlOVMN3W50jHgwKD0X9bvos7du9I3sxZP7
npvB8+BJHDl8FM8+9xJ29rkEg1CuS+l5Iy40HZMi9tQehEMpVmejaF8fi2qR
WZTo6GsMzqKm7FjT/fdxajoUnxJf1RbMyt+huZSWTfXLj2cfmxqQXee19O+m
jjE8+sRzOHjoCE6cODnt45nmc9DjvpxzTuwVYuq2yzW3ICy21DdjamOcFVGz
4FLqPr8t3swUdQIuCZcSbMo7ZyqqFOvjyrE52YGobAdSip3YYSE25cC2dAfi
dlSgsKRV93POZi+F6flPzJbqcMmzpcb9slLS67XRPffghRdfwXHu8GOxWCwW
i8U6LXXgwOt44J5heb19pApuV6u3y2+2XMol8yxPF9wTDYuWmZqOS/W2G4PO
6bnm6isDjjUVlyInxtwZlOdQz9r5550bcD3qmU6f+fTHAvb71McvwbnnfjDo
MRUuRbdf/XPq3vvcZz+B969a5cfZzhBsRbm+rNRNQY87lefCpeZ7XpaCS432
lQV0+SmmuVwf+ID2XH7Dr4twTlzqNi2X+stN1we9fvL7379KbHP1D76l+X1e
9JELcOEF5wU+dn90lf5Mijr8iqnDLxMGS6Fkm4ZJEaMqMFYix1ApvRdlJsVe
ZPsyU8NyZqrdjeZdHvS6PBiiPr9xDzqHd2P3vY9O+fxH2ZKDBw/jwUeeRGO7
tvNMyUgRH3IoTKppzDdPqqFTZk0tXialyUR5O/oUFhWUR7UG4VH1Co/iWT/L
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
sanGKa/nY5d9WnP5J//rc77LPvPZL+K3f/i74GLBjv/hiz6KnOLakPuTw7al
hLzuv9y2GRddclnI20+MzP88FZW2SLf5UzOe3fW7P96m+zrFkrumH0m5tdia
bMdm7zyPJIM8Z564VGFJFTIMDiTlVWlnSnm5lOyRyXxUo7qvbzCgr49nSLH1
co6xGVvirSKPQWyKclPEpQSfii3H1sQypEmPc+4GY69EW+zd2FFUjzURZsGR
NsSUYHvy3LhUrHfO1BbKTMWU+mWmFplNhSuZKavo8tuS4kRMrtwrq3zOh+ZN
JWRTZoq5FHvlml4PVdYPw9kygdpOD5r7PKKzb8y7HjDmou/3YP8LL+O9997T
e6mDxWKxWCwWi7WMdfjwYTz3zCNwD1cLjuR2tXkzU3PhUt4+P0+/9LUV7vFa
kcPizBR7JZiYVF+HCaXGBBjylwEzWpKsVByKDEkwmNK8HX7FmrlSRZZyFJqt
KCxphDXE5/Hnw6WC+Se/uFFsu3pD7Iy5DDEcdZZrNlxqJr7muhum3H8qLjWd
icvlGOs0x6cM1myOcbpxKYujByl5NdgcT2uPNmxKsGNbWpVYA8w2S4/dkioU
S84zVSG1qAbGik7BmgSTahwNYFGytRmpoDOkmEmxl9imip1IzKkWWRLKYwg2
FVWKdTFlYu17o/TYD4uvwNbEcqTnV8HM/WDsFWbiqYXWdtG9R+xobaQFWxKs
c+JS5GjJ4SlKZsqiyUz52NRidflJxyd2TLyYuvy2ZzqRXOhEvqpjNq3Ajh3F
dWIOpt7nns2ei8u9PcrU4Vff7UHHiAdDLg8mvGsBwxMe9IzcjXffO6b3MgeL
xWKxWCwWawXowIHXsHuiU/TuuSfqpdeU/fPgUuQRuD09cLuaOTPFXjEe7rWi
wZkJY+FpkpUSXCrBm5XaAYOlQLJNw6Xyi63IKy6Z8v3pQnGpD55zjvj6qxtu
Ftuu35Lku4y6+G65fQu2x+VKzsMPfvyrgP1Tc8pDXs9MudQFF34EX/jyNwOy
U2eddbboFAy1/0y4FPEn6v47/4KPBFx2wx//4ds/11Svuey88y9ETLJB9ANe
/7u/BhyTsl6ZhVW6r1MslS32HuQYm7AxtlR8vl7M84ivxOYUJyJ2OJFulrNS
xKUKLdXINFUjvaBacCX17CjFSmffZEZqQJiZFHs5OFt6rIcnlWm7wiIsWBMl
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
PB3Gwlj92dFiZ6UK1VmpTBgsxT4mRV8LjEYUmkvm9L71D39eg/e9730+TvSD
a64PuW1silH08ynbfuHL35zy2Gs2xuG8Cz6s4TB0XZ/74teRllchjqMca+2m
hBlfD7EzhW3RdpEJBQHX/fkvfct3nbRNfJp5RvvP5D7S9nQ/lON/49s/8F1G
5099f+m+/u2Obfjz38LwqxtuxmWf/EwAm1LftpXuLGMTtidPM1snBJein9Ga
PH02nTIi8QVOZJgm1//ImUWVSC2oEvOr9L6vbLa/c82tWB9lnuMauNzltzqi
RGQ0wrxr4TTXJirHIf1b+rtItSMtv0b3+8lmT2fqnDTYOrAhplSwo3VRFmxN
mF9mKlrV57c2qkSwKW1uauHZlPJ5ia0pVYjKdiLJ4ESOWfu8lJRTjjxLC0pn
ONeTzV5si/6+2gE5K9VAWakJMVeqc8SDIZecl+oecaNz8B7OSbFYLBaLxWKx
Flz//ve/cfjwITz+6H3YPVYnZ6ZcnXC7R+fJpVzyMUSfX5M4LnGvgD4/zk2x
F9lju8pQVpKiPzdaiqxUkTcrJeZK5XqzUnYvl7KgwFyKopKGOb9/NVV0oris
Dcbyjmm3tdi7xLYG68w+G0z8IDWnDJsi0hERnw9jWfvksSq7Ql7vdNdTZG0R
l9N2oa6btiksaQ66zVT7z+Q+0m0vsDRptsk11Wl41bkfOh8mv/tGs7fOXrVK
w6VWh8XpvoaxEKYOs4iUiqmZVAgupfxsTaQFYQmVCE+XP5ueatSu/+UYHcgw
VEu/v1aetcNeVqY16R2GxnllM5Q5U2siS8W8tU1JDkRkOcTfQmS2A1tT7dgu
/Y3l8xo4ewWYHqPUP7khRmZIYbGliEidO5eK9fb5bU22ISwuOJta6FlTdFzi
xJTjpfwidfll+X1eIr3IjhxzA2cZ2cvGor+vblDOSjWNoZayUgMe9E54MCC9
n+8Z82DX+F489sQzOHnypN7LFiwWi8VisVisU1D0+ad33j6Ae/f0wj1aB/dY
A9yu7nnOmVLY1BDcnk7peAqbCjJritkUe5E83l+B9oY8lJzyHX7erJQhAQYj
ZaWyvFmpMi+TsiHPUIxC6d8lU/AZ9tKYuJuaN61a9QHkmuo122TkOwK4VOKO
uWXdlpMt9h4xV4c+Gz8TJiWvwWu/Fz/bbvZ2JjlFTiSl2Ck9vifX//LNTmQZ
q6Tz2sDr8uxl5YLSVsRkVM67N0zOTFmwhvr8YsvFvDX6W4jNl9nUtlQ7YtPK
UFzWwWyWveydX9KCyNQKkZdaG2nBprhSwZcWos8vLFaeNeXr81sMNkWfl4gq
EYx4+w4H4grlmVJFquclmjmVbayFwcYzptj6W52VsjeMoqp1QsyV2jnmwYBL
ZlNdI7vhufdRHDp8RO/lChaLxWKxWCzWKSz6DNT+557APbu74BqthXu8aQH6
/FzyrCmPdBzPTrhdjXCN1fhxKe70Yy+eR/vK4LClnNodfsSkNFmpNBgs+aq5
UhWCURWYrDDamnR/H8zehZzi2oCOvg+ddyGuvOpq/PI3N+O7P/hpwFyt8y/4
yIrnK3T788ytWBMxTX9ZEA4VzNSZtCXF4etMUn8uXWSmDHbEZ1Vwlx97WTnT
0CjW3Oe/Du7t84u0iJzGxgR5PZy4FK2JRxGbSi5HjrEJllNsNh371DP9P51V
3IjwpHJfn9/2ZNuCsKnNiTZsiLEK3rVa0+e3sGyKOPFGyvFmyH+HmX55KWJU
KbkVyDI26n6+2WxNVqp5HHU7XWKuVK/Lg37pfXznsBuD7nvx9LMv6L1MwWKx
WCwWi8U6DXT06BHse2wv9rhaZDblavb2+c0nN6X0+fVLXzvgnmiYgk3pzzHY
p5aHe22wFMfDkL8M+NGicyllrhRlpYySy71cyoxCsxFGWx1KHLw2uVxMs6b8
2VQor1r1fiRnWXW/zfN1gbUd4Uk2Of+0AFxqXYwNm5Opv8yJhEJ5lof6s+k5
xXbEZFXAwlyKvYycklcn1sYXIp9B6+vUT7YmskT6eygTfw/EaYlLxRU6EJll
R2RaBfJLZtanymbraWJTKXm1WB9l8fX5RabOj03RrKnwFBs2JdiwPrp0ss/P
vx92QbiUdJvjK7EtXc4uphc7ke/3eYmUvApkGufep8xmL4S1WakRVLe5RFaq
c8yDPpopNeFB+6AH9z60D+8cPKj3EgWLxWKxWCwW6zTR66++gocfGIObuNRY
HdzunZLHFiA3NeZlU+1wTwTr82M2xV5Yj/eXo7vVgOKCUzkrFSMzqULKSiXB
YE6HwVIg2SqYVJH0tdCciwJLNSyVPM9gObnE3o1f3XAzzjn3vJA86owzz8T3
rv65mLul9+2dr4ts7UjMrpJnSi0El5K2WxtVik2Jldi+w4m4AifSzdouv1yT
A/H5dhRaW1d81ox9ari4vBMxGY6F6Q1TZ6Yi5MwUzVyjNXGaM5VgoE4/B8LT
K5GSXwODrV33+89mT+c8Syui0ioFu6U5gluSrIhOmzuXIkdJ3pZiw8Y4qzxr
avvisCn6W6R5b9SpGZUj53iz/bhUWpEdGcY6Ma9T73PNPk1d04+y2n6U1w34
slL1XXJWqsflQZ9kmjE1NHEP9r/4T72XJlgsFovFYrFYp5H+/e+T+OcrL+C+
uwcFN3JP1Ht50sQ82ZTby6aoG7BtctbUMM+aYi+Oh7pLUe/ccepmpfLVWalE
GIwpMFgoK2XyzpUqRaGpEJl52bBU8nrkcnWpswexKUas3hCLv962GX+RHBae
KmZJFZedGjMoiAllFDVgY2zJjHMg0zEpZQ1wQ1w5wtOrEJvnRLLJiQLV+l+B
mT6v7pCuu5rnzLOXhamnbFti2QJyKcm0vq7KTG1KsiMiU85MJRmJUTkQk1mJ
TEO94OF6nwM2eypT5yTNIFwXKbMj4kjhSdZ5ZaZo38g0G7Ym2xAWZ8WaCItm
zpRs4/zZVLhJ/B1SbjGScrxFTuwwa7lUlkl6TjJUIdfMXX5sPdwvuFSwrBTN
laIOv44RD+q73Hhs3ws4cvSo3ksTLBaLxWKxWKzTTIcPH8JzzzwKz3grXCPV
cE80wu0emGefn7rTr1f62iq6Aun42twUsyn2wnhXpxkVpcmnMJeK1WalLJmS
C71ZKSsKTTRTqgiWylZYqzgrwtbP1CEWlWaf3Vr7DLiU0uVHn02nfEiyUcul
BJsyOZCUXY7isg7dzwObnZJbg7CYGfLZGf+tmLx9fhasiSrFhrgK8TdBPWKp
ZvnvIjKzAvHZ1CnGfX7s5W1rVR8MZZ1IyqkWj2tiSJvi5T6/+WSmxKwp6Rhb
kmzYEGud7PNb4FlTdLyNCcSGHYgvDORS1DWbWWhHRmGN7ueafTpayUrJc6Wq
RFbKjbYhj+ju2znuQWOPB/c/vA8H3npHzJ9msVgsFovFYrGWUidOnMA7b7+J
p/c9ADflmcZq4HZ1wu0eWYDMlEs+jqdHOmYL3OO1cI36synu9GPP373tJpiL
4vTnR4vGpGInmZQpDQZLnmSLyEkZLAYUmgwoMNuXwXtg9unsUmcfErKqsC7K
vLBMymtah9+cXCnW4BOLA2dMFZodiNlRgSIbcym2/o7NcMhdlgvFpZS18HCT
6CZbHVEiWC1lpiivQXmpNOlvIi7fgSjp7yA5t4o7LdnL3vQYLShtw5Z4K9ZE
mrE+ugRbE62ImWefH82a2p5qw+ZEG9bHlArm5d/pN282Je27PrYc4Rl2uV/W
pO2XJWcU2JGcz1yKvfSW50r1o6J+EI7GUdS0u9G8y4POUTkvRf19bX0evPr6
m2I9gMVisVgsFovF0kP0WvTtt97APbu75DlT45SZ6pE8vkBsahhuj3RsVxNc
4zUym+JOP/YCurvNeGpmpfz7+0ypMFiyJRdJLpFsRIGxAAWmUhhPkR449sp1
fkkLtiWVL3xWSuFSkSUIS6jA9kyn77PpBX6fTU81OJBtqud5HmzdHUm5wQWY
YxOSTUWYxdw1kZlKqUJ0jrwunu5lUzFZTtEfRpkUvc8Fmz2VSxw9SMuvRVhs
qWBTYTGlCE+aH5eK9bKp8BQbNiXYsC5aYVMLmJuiHG+0FVtSHeLzEsnFgTOm
so0OpBdXSc9Vzfy3yF4yl6nnSjUMo6plAvVdHpGV6hzzoF36unNoLx55/Fm8
+94xvZciWCwWi8VisVinuY4dew9P73sEd7nkeVAi3yRmTc23z09hUwPS8ToF
mwqem2I2xZ6bh3utaK7J1Z8hLVZWKj8ORQXxKCpOhsFM/X35gkeRC015yCs2
oaikXvf3wGx2dHol1kbOMCs1p84kM9bHlmEbzZjKdyLN5ESe/xqgidYBa7nL
j62rqc9y60LOlgpYDzeJvwd5zpQNYQmV2JbhRKLBiQyzE6lGJ2Lz7IjdYUeJ
gzNT7OVt4jWmii5EpVViXZRF8KONsaWInmdmSsyaSp+cNbUuqiTIvKnQn4WY
ielvcFOiHRFZ0t8fzZjye07KN9OcKZox1cA9y+ylMTEp71ypyvohOJrGUNvp
QUu/Bx2jMpvqGNyD3fc8pvfyA4vFYrFYLBaLJUSd0gcPvoOH7nfBM94osyl3
+wJlptze4wzKuSl3M9wTtTKXYjbFnqf7OkyorkzXnyEtJpMSWSnq78sVvX0G
ixlFlgLkFOai2Mr9MGx9TT1MuZYWsY545yLlQ5SMiPhseooTUbnyLJ1c/xlT
Zid2FFWhyMqzddj6mNbYMwprxd/D4nEpJTNlwdooq+gS25zsQHSeA2lGeW08
uciB7el2pOXXiDV/vc8Lmz2dc4yN2JZYJrKA66JLsCXRKtjSfGdNEZuiWVNh
cXJuyjdvKnz+uSniw2HxlQjPcCKu0IkMS+CMqZz/n733gI6jPtf/fzeAQ5wD
OXDgAjfwB3IJ3BBIKJeEQBJuAuQm3MAFUkiAJHBT3Lst2eq9a1W2q25R77Ll
bll1VxiDQwstdEILYNNssA08/3m/M7Oand2VVvauRrLf55znyN4pO/rujnbn
+5nnfemcrGziuprsaXGgfl+LUr+vxy/6SPUOykyqfbMfO32P4Z9vv2P09AOL
xWKxWCwWixUQsan33tuLvz3SLzgR5Zr8vu4YZabU3NROhU11yWyK+02xj9Kb
e8xwVWcZz5FiyqSSNfX70jT1+yokW1DpKIOpsgj22hZUN2w2/BqYfXzbWr8R
a3NcWJAYv6yUOhdPPaaWZ3rke9Opx1SYOcDsknqU2jsNHxf28WniUhnFXixJ
csT5fNBmpmqxLN2NNQWeQGYj30aZKQ/W5tah1NYJp2eT4WPDZk9k4jb5la1Y
lV4j2BH1mqIeUUfLpkRuKlfOTS1LU9hUQozYlLQdceFVuV4kl8k93ip1n0sl
FjcyilycXWTH3SqT0tbva+kbQ9e2MfT0j6Fzix/bhh7Cs8+/wj2lWCwWi8Vi
sVgzTvQd9c03XsJje3YIXuQfbYHf3yd5OMa5qU2CTVEuazw31cBsij1l97ZX
wGlJM54lxZpJUVaqQl+/r0L8rHSUoMxaA4eLa5WxjTX1BSm2dsZ3/l3DpeZr
ekylm70otIf2mc8srkWJrcPwsWEfn67ybkViVh0WJNqm4ZxQMlNJ1VicWi8y
U8mlHuRZ5T43+XYP1hW5kG3yorKaexCyZ77NNeuRUdwguC7d67A0xYnEGLAp
yk0lqmyKclPrYsSmKMebXIOV2W7RYyrbGlpftsTsRmphnfi8NHp82ceuAz2l
mneIrJS3YxhN6+WsVM8OYlLSz61jeOKpF3Fg/wGjpxxYLBaLxWKxWKyw+uTj
j/HaK89hz67N8A02wj/aCr9/U4zYFGWmRiUPyGzK1xmBTXFNP3Z07mwuk1mO
0Twp5lkppX6fPU+p31cu2YQKWwlKzZWw1HSiystzHGxjbbJ3Y3VGzbRxqXmJ
DixJrUVCvhdplAuxe1GumwPMLnfB5OwyfGzYx6cp87E0njX89OcEZabWVYnM
1NI0NxI0makS6fxIq/AiuUBmtZTlMnp82OyJTOcP9WdLkd7HxIkWrHVgWVoV
1mYfHZcKz6acR1/Tj44xqQorslxYVyLXl9VzqVKrB+llbji5jh87TtYyKcpK
udsG0djjQ+umMXRuld283id6Sr3z7ntGTzWwWCwWi8VisVgTav/+j/Dyi0/h
QV+33GtqtB1+/xaFKcWqph+xqc2CTfmHW8LU9GM2xZ7Y2zfY0VCfbzxLiimX
Uuv3ZcBsVev3lQWYlMlSjnJ7A6pjML+xeGUmrv3+zfjOdTcG+drrb8KN/307
fvO7RcgocBp+vc2embbWbUBmSaOY05s+LmXH4pQarM71IrXcizxb6BxgvtmD
Ekc7HC7uqcOeXjs8m1FkaceidXGu4afPTFEtv6QaLEmtx8ocD5JN0rlhl8+N
IulnuqkeuRWNMHPfNfYssOhZaO/GSqWeH7GplWnVSMqJIZvKlNnUQmJTutxU
gEtFw6YEO3NieYYLa4u8yLR4UegIruVXZvMg1+yFpbaXe0yxY+5xJqXW79up
1O+Ts1IdW8bQtmkMWwf24LU33sbhw1y/j8VisVgsFos187X/wEd49ulH8aDC
jfyjXfD7t8e435TKpjQ1/Qa43xQ7Om/pMcNdk2M8S4olk6L6fZXpMFuzYHYU
Ch4lavfZimEym1BmrY/JdazTvQlz5szB//t//29Sn/v/XYTMwmrDr73ZM8s0
/07zhtM3/y45wY6FSVVYleNFSpkXOTYvSnVcqohqmNlaYKnpNXyM2MeX7a5N
yC1rwsK1ce61FobXUmZqcXItlqe7kVDoQaZZOhcccp4w1+xBanE98itbDB8j
NjsaU827EmsHliTJmSbKNq1MrxZcKZZsaklKtXS+Oo6cTdH6iQ4sTatDolJf
lrKK2vqy5XbpMWsDTI4O8d3L6LFlHzsWTErTU6q+dScaOkfQvEFmUuTWPj86
Nj6Al199HQcPHjR6eoHFYrFYLBaLxYpahw8fwtNPPoJd1AtqpAl+f6/koRhx
KZVNDcpsSvSbatLU9NOzKeZT7GD3dVaivirLeJ4USy4lekplwmzLhdlRInMp
exFKKwpR6SAmFZs6TJVVXVExKdUnnngS1qaXG34Nzp4ZNteuF3WWpqWHjpZL
iWyIAyuzvUgyeZFjDeVSJrsXheYGlDk6DR8n9vFlW/1GpBd5RF+caeVSCXJm
ivpMUWZqVY5HcNsCJbdBmam00npkmhpgreO+hOzZYWJTmSVewaYWEPtJqUJC
1tFzqXBsakEYNhVVTT9aR9pG1JctUOrL6rgU/btY+qzKr2iAvb7P8HFlHyve
HpSVIiblJSa1fgxtm2W3bJDc68fm/gdw4ONPjJ5WYLFYLBaLxWKxpqTPPvsM
e/e+g8f+OgT/cLucmxJsqj8OuSnqYdUJ/2izpqafrt8UZ6fYGne1mFBtSzee
J8WSSZlVJlWkcKlilFQUweL0oMoTu/mMcFzqoksuw7eu/C4u+Pdv4Atf+ELI
8nPOvYB7WrGF8ytasSKtevrm3tX5P+JSiQ6syPCKXh7UY75Ex6VoHj6/3IUi
C2dD2NNrc+0GJGbXYv501bYMYlNU70zJTGW4kVjkEXlCykuVKZmpdJMHhZXN
ho8Tmx2tKYOYVujBkmSn9P62Y1lqFRJzapASIzaVIO1rZWYNlqZWH0G/KVvg
c4nOu9V5cj+3fB2XUmv5ZRTVwcJcmB0ja7NS9a398HYMo6nXj9aNct0+kZnq
82PY/xje/+Aj6Zr+c6OnFVgsFovFYrFYrCnr8OHDeOvNV/H4XwfgG2yGf0Rl
U4NxYlPSvn3tSl2/xtB+U8ym2IqPGS4lmFQqKs3UUyobZnuB4FGV9iKUmfNh
qfbA6d4Q0+vZcFwqLc8eWF5qa8HZ/3Z+yDprMyom3Xd1w9aoeyjQumQjrumn
cpxH0hNiKvsff56Zz/3od0rOd09vrTLNHCDNGy5Npx7zHmRa5Vpllbo5wFxT
PfIqeP6dPb02jEtJnrfGKp0blJmqwZI0F1YpPdiK7fL5USL9zJDOi5TCepFD
MXqs2OxobXJ0Y22OS+QQqebe8rRqJOfGJjeVpLCpVSqbSqqaApuyBT6XFiVV
S+ecB6kV0uePwoK1n0kVdo/0uVkrssZGjyf7GLDCpMj1Lf3wtA+hsdsv8lGt
CpNq6fVheOwJ/POdfUZPJbBYLBaLxWKxWEelQ4cO4c3XX8Rjf+2Hb4h6TbXC
7++LU02/7ZKlfVNfq5EWOTvFbIodxi2eItgqUqLgPjOAPU10bOWanlL2XNFX
qtJeiHJrkWQHqjyxZVLkybgUmRiUfp375ycElv/6nnm45JtX4uJLr8Bvf78I
trr1+NHN/4uTTpqDf/mXf8F5F3w9ZP6TmMZ9f1mN62/4b3z1vK/hCyecgJPm
zMH5F14iHluWkBfxmGnb++etwbeuvBann3G2eJ4vn/IVXHr5Nbjm2v8Kcmqu
7aiO01a/Ab/87Z/x7au+h1NOPU2sR8955TU/wL33L4vImwrKPbjhpttEtoxq
H9J2c+eegiuuvg5L1+SE/Z3+vGidODb6XWiMTzjhRGlsLsT//O/dKHd0GD//
oTGxNpOjCyvSprGvlI5LUS5kcUodEgo8opeHvsc8Oa+Me+mwp98V1b1YkuQQ
jCiajFPM2VSinJlaIp0fVOtybZFc67JcOS8KLV6klTWg2NrCbIo9a0zvVepn
uCazTvAiyjWtzqhGUgzYVIrCphIVNrVc+mxbnFQl6gZOzqbGuRT1d1ue5UJS
qRfZNq/0ORnKpVILmEuxY+PxrNQOuNsG0NA1iqb1Y2jpk5lUc68PO0Yewcuv
vmX0FAKLxWKxWCwWixUTCTb1xst4ZPdWUWOP6u35/ZRvGo4hmyKPyHUCRXaq
W3qeFl1uSsOnuOfUce0GVwHMkzGnsgg2mkdps1KV1FNKZVL5Ii9VYS2EyWyB
ra4X1Q1Tz+pM5mi4FPEb/TrEddTlVO9PfZz+/fX/+HbI+iZ7W2D9/DIPLrr4
skl7WV17/U2ocHaGHC+xmmj7Yf3iN3864uNMz3firHPOm3D/X7/kchSbm4KO
ccmqrLD1D7Uutoxv43BvnHQ8brjxVsPnP7R2erYgKc9lQFYqmEtRH53VeZ5A
Lw/9velFZjeK7a2Gjxf7+HJ5VS/mJ0TJpPSOSWbKJubTFyXXYHm6G6tzG8Q5
UqLNTFW4xXy+zbXR8PFis6M1san8yjbRa4r6QC1c58SqGLEptabfWmlfq7Pp
3KkRuakFutxU6Pmq4VJrnViWXod1xV5k2+X6str7JSrtHmSXuWCtj/19Ruzj
z4GsFPWUovp9PX40b5CZFDGqjdsfxPMvvoaDBw8ZPX3AYrFYLBaLxWLFTFTT
7+1/voZdw83wDzXCP0JsaqPCkmLJptS6fluknz1yTb9AzylmU2w3RrbXwVOb
d2RMaqawKToG6illoZ5SOTA78mC2S7+TNQ8V1nJUONql68/41LiLhkuVWFtC
1lm0IiOwXMt7IlnlS/Tziyd/KWqu9J3rbgw6lquu+WHU207EpSY7zjJpzOfM
+WJUz3Hp5VcHnoO41pw5cybdJquoOrDNLbfdPen6lP0yev5DNWWlqE4Z9Z6P
Kg8SNy4lzwGuzPGIOmX59tB700tsHhTZW2DlXh7saTKdH6X27iNjUrFiU1TL
L8EhuO2S1HqszG4Q+Y18JTNFPW8KrB4kFdVLx9oJh3uT4ePGZkdr+vzJLGnA
/ESbYEaLFDaVHAMupbKpdZLXKGxqcZiafsHn7DiXovWWpNYisdCLLKW+rLbH
lOh7KJ17ZVV83rGP3mpWytM2hIYun+grRW7slv7dPYKnn30J+/fvN3ragMVi
sVgsFovFirE+x+HDh7D33bfwkL9TsCL/aJtS0y8ebGoI/rFtcs+pUX1NPz2b
Yj51PHn7Bjvqq3KOnEkZzaZUJmUmJpUNsyMXZnuO6C9VbjWj0tkWl5yU6mi4
1P/+8g8h6+SU1AWWR+I9VL9OrZFnU7jAzbf8Mmwu6r55q3HHXf+HU79yesjy
lGyr2LbU1hr0OK2bnGUWNfNu+8Xvg5ZRXon2V1jRcETHeeNP7wha57wLLkJa
rl1wqwXLUkPY06qkIrHdwuXpwXmq//g2isyNgoskZ1vEfqkOILE+9bj0max5
S5JF/cASSzP+tCBRZKluue23hs9/qKb+87nlzWI+cPqZlIZLkaVjWJ7pFnPu
uVYvSnVcymT3otDagBJbm+Hjxj4+bHdtRH5F65EzqRixKZXbUq3L5ZkeJBR4
kWUZP0fKpXMjq9KLzBI3zDW9ho8bmx2tqxu2SZ+pfcgqaRCZXWJBi5OcWJle
LerxxYJNpWrY1IqMGixJrg7bb0pmVJrPJKovKK27Jl+pL2sP5lIixys9ViB9
L+Dzjn1k3h4wMSlX6wC8nSMiK0Vu6BxFa68Pzz7/Mg4cOIDPP//c6EkDFovF
YrFYLBYr5qLvuZ9+ehj/fPNlPPLQZg2b2qD0m/LFmE0R79oh79/XAf/wBHX9
OD913Livsxw19syjY1JGcSmq3Uc9pcwZgkMJHmXLEbX8yq1WWKpa4fTE937a
cFxq5doCkfshjvLTW+8SvEbPg6q84z1JwvGe73zvR7DW9ooadQUVXrEesRh9
fbvbf3V/0PFQTTzqw6Rd5/v/9TOxbIV0XNrHqceUuh1lFE497Ywg1kSPafcd
7XHS7649Tup9pa27R6beUdr93PyzX4jHKZ8V9Pgtv5xw/OkYtc9FYz3Teknp
Tb1zVqZVG5SV0nEpycvSXVhX7EG2Ra6ZZNbdm15s9iC/otHwcWMfHzbXrEd6
kefomFQs2BRlpqiWX1KNOEdW5XiRUi7PiQfODZsHyfk1KLF1oIr7TLFnkemz
k9hUSr4bi5McoqYfsalV6dUx41Jqz6mEnBqsJDaVUo0Fa+XnCuZT9iAutTCp
CqtyvUiVvlMU2Mf7upk1TDivzI1yZ5fh48iejVaZ1HbBpNztQ2jo9omMFDGp
rk1j2PPoMziw/wA+++wzo6cLWCwWi8VisVisuIr6Tb3x2vN4bM82hU21xjE3
Je1zbLvkjXLPqZFWXU0/HZsaYDZ1rDsil9JxJ3NZityDaqYxqUpiUllyVkqy
YFIWs8yk3PHv+xGOS01k4iaJaaagfeh5D/3fGWaOc6WOK1GdPGJC+vX0de0o
L0SPL1iWFvT43b9fHLTdxZp+UcSSqrxbjug4E1JNQet947KrQtaZvzQ1aJ1v
XXmt/PiSlJAx+9FNtwXly/Q+/cyzg9anPNVfFifBMQP7vtBcYImtyyAeFY5L
2cWc+9oij8iChONSRZUu5JR6DB879vHhCbmUhjmNz2nHJy8lMlPS/heuq8KS
tHqsyPJK54kXuebgPmzU6ya/ogGV1T2Gjx2bPVWXV3UjpcCNJcnOQG5qdQz7
TenZ1NKUarnnlMqnlM8h4QS57+GipGrBgdX6snouRfmpLOk7gcneafj4sWeb
tUxqp2BS3q5RwaUoM9W50Y8HHvob9u17n3NSLBaLxWKxWKzjRocOHRRs6tGH
t4ocE9Xa8/u3xCE3RR5Wek5Jz+VfLzJagb5TzKaOK4/2u9HeUASnJW1CLiUz
Ka2TgxmVYUwqXe4pZc1GpeQKcx4qLOUwO9vinpNSPRUuRaznN79bFLIPPe9Z
vDIz7HPde/+yoPUuvvSKsOstW5MbtB7lp+jxjAJn0OP/eva5SM9zyNsk5AXl
us6/8OIjPk6qKRjyu3/hC0HWLz/7nPPFtpQJOylCf6mLLrlMHKf++SiTFm59
6sNFjI7yW8bPhcimOcCkPJfBXMoalJdamlaPxCIPMs1yLw+zziVmN/LKvIaP
Hfv4sMnRjYSs2gm5lL4OWFg+FaPzZH6iE4tT67A8w4PVeV6kV3hRrDk/qM9U
tsmFUvvMzmmy2ZFc5uxCSoEHS5JkNrWI2FRmfNjUqqwaLE+T6/otFGxq/B4J
YlLzRV6qGiuzvUiRPnfy7MEcWHWuqV4ct9Fjx55t1jGpzhE0dI2Kn629oxjd
9TjefOtto6cFWCwWi8VisVisaRflpt568xXseWAT/EPN8I8Qm6Jc02Ac2JRP
4VM74B+Tnm+sW+S0fENNzKaOI4/2u9DqLYDDnDYBkwrHpVKMy0vR8wkmpfSU
UphUeWU+SisrUeFoD8n5xNPRcCniI9f94CcorGwIuw8971m6Ojvsej/5n18F
rffd628Ku96a5JIQHkY5Haod+NXzvhZyfNQbSv/Ynb/54xEf589vv2dKGTIy
9Z9St6dcFx1zpHWvv+G/g15jyowRs4q0/pfmfhlJWeYZMB+yDUWWdixNdhjM
pPRcyoXEwshcqrjShSzOS7GnyaX2LqzOqJmASYXnUvHIS4nMlJLfWJrmFhmO
ZJMXBTZNTTEH9ZiqR5G13fCxY7OP1GXOblHTbxGxokQ7liRXidxUcozZ1Fpt
z6kUhU0lykxK5lLjeSniUrnSuWYK87mUWVwn/a3gvBR7aq7VMSnhjmE0dg1j
YPRh/OP1N42eDmCxWCwWi8VisQwT9Zt69523sGu0G77BJvhHmuH390reGWMu
pbKpUZl7jW2TvEHOToncVAPzqePAxKUa6vNgq0wNy6UiMSnDuFQQk1Lq91my
UVaRg9IKmUlN9zVuOC51z31LRc09yiLR8sn2ES3vufXO3wWt9+2rvhd2vRWJ
+cF5qS+fGlh27fU3TcqIvn7J5UH9r6Z6nHfe9ceg9eZ88WRc+O+XRjQxpYXL
04P2kVVUjauvvSGkN5d2jLXrUz1BeuyUU08Puz49bq1bb+h8iKVuA9KLGjA/
weisVDCXWpJaj4RCDzKox7xSuy+ox3ylC5mlbsPnk9jHh0usnVie4gzLpAzh
UtK+F6xzSudJHVZkeZBY7EWOWa4lpp4jWWVu5JlbYJPOcaPHj80+UlfW9CIl
v17U01P7Ta3JjF2/KdWB7FRmDZal1UjPo/SdSpS5lJyX8shcyq5wKSdzKfbR
ubZJYVJtg/B2jAh72ofF/7ft3IW3/vmu0dMALBaLxWKxWCyWoaJa1ocPH8I7
b7+Bvz64Bb5AbqpHZkcxz01p+k75++XsFPWd8rVxXb/jwMSl6quyYCkPX8Mv
EpMyhEupTKpCZlJUv49cVp6NcpsTttqusCwl3g7HpdLy7FPaR7S85/75CUHr
nXb6mWHXo1qB2vWobxQ9vnJdYdDjXz7lK4F/n3DCiTjn3Avxh7+sCtszairH
OW9JctB6l15+9RGPb4mlGf/7yz/gxBNPCqnpF259ylEtT8wTPbX0rwvlyIyc
E6Gs1KpwORCDuJTKphYl12JNgTsilyo2u5HFdfzY0+RCSwcWrrVNwKXC1fCL
H5eifYm+O8k1WJ7pwZp8L9LLg3ux5Vs8yC7zoNg6c2qGstlTNeWqiU0l59eL
HNOCREcgNxVrNpVM2ancGqzOls6rdMpO1UjPKdcRpJ5uyzNdSClvQK5jnEtZ
FIu+bqX1MHEdP3ZU3i6YVH1rv2BQnvYhYfp3Q+cQtu7chX++sw+ffvqp0dMA
LBaLxWKxWCyW4ZLZ1GG8+cbLeGzPDviGWuSeU/4uyVsVhjQN2Slfh+BivkFt
dkrHqHaqNp6xsGPLpYI4VLnBXErLpCozZC5VmYmysmxYqurhcPVMa+0+raeT
SyWkmkKeKyG1NGgdYkpnnPVvQev86KbbxDJ9HcBSWyvsrj7Rf4nmo2J1nMlZ
5qD1iHkVW5qOapz1PbO+clp4Jqea3g8XfO2SoG3+vGidoXMjmSWNWLTWPgO5
VA1W57lF35yIXKqcuRR7ejwRlwpwqIRp5FJKZmrhumosTXdhda4XKSYv8u2a
Wn7Sv7NNdciUHjfqs4h97Jhq0xabm6TP6JaoPptjaXq+iupeUdOP+k0tUGr6
raKafnFiU1TXb2VmLZam1mBRUpX0mVSN5RkuJJU2INfWAJOjIcCkVGeXuZhL
saPwdlG7j5iUq3VAsCjZA+js8+HBPU+KnBQzKRaLxWKxWCwWK1jUb+qN11/A
Y3v64Rtshm+4GX5fJ/z+zZKH4sCmtH2nlOyUr0vuOzXcxLX9jkFPiUuVh/Kp
aWFTQUwqXXCpCmJS5fkwO2pQ5TG2btJ0cimaq5o795SgdU8+eS4Wr8wUuaLU
XJvIJmmXUx28jAKn2P6HP/65ru/SXFx5zQ9w/Q0/xY9vvh0/vfUu/P5PK5CU
WRnz4zz/wovFcahzbDR3m57vxB13/R+++a3vCEZGj1PW6+xzzsefFiTCpqm7
d99fVofUGqTHne5NIvf1gx/dgszC6sD65upunHXOecF5qRRj81LJ+V7jmVQY
LrVgXRVW5riQVh6eS5VaPci3Nho8t8Q+Xhw1l9J6OjJTax1YrNTyW1vkRbYl
+FwpMLuRXdkAS03vtLOEaE2fEfR3nu5VuOveBbDVc93BmebkbEtQ/dqjyRsf
jdV+U0uSZTZFNf1WZlRjXa7cKyqWbIrq+iXm1mJVdi2WpxOfqhV5qXUlWi4V
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
+l4RI2vk3lOzzP0bnXCG41L6+n0VGuvZVKy4lOhTlaIwKTkrVVGeCVN5EazV
DbDVdot5J8Ove2epie1o57rmzDlZZJO061DOS8+l1Pp67COzzbURidm1WJBo
M55HReJSCTYsy6hHUqkXefbwXCrP2oDiGcD52Me2LbUbkFXaPCGXEhwqUWct
m4ojl1Jr+S1Ld4keU5QxLNJkpiqVzFRSXq34XeI9XlSnVc9gUnNtcXmuaO65
ONL7MmKRLfvN7xaF5VELl6eHXZ/u4yBGR9lcygJH8xzEZ9Rs75HY6Zn8O8xM
5FLa4y80t2N1Zl2ATS1NqcKqjGok58aYSxXXo8TRBktDK+paWuFtboW7Ufq3
pxVVdc0ocTaj2NEqfT61o65Zz6UUS8fMNf6OD9cGmJSckxL1+yR72nZi047d
eOrZV7B//3589hnnpFgsFovFYrFYrKPV4cOH8e47r+PJx0bx0NgG+IdbZI+u
l5lRXHtO+ZW6gUOS++Ef2yz3nhptF8fgG9b2n2I2NZMdFZeqSIW1Ik1yKJuK
GZcKMKmUAJMqL89BWWUZzI6p1cRjh3eJpTlkzo7uvadeVT+//V5cf8N/i/p8
2uVfOe3MuPRJOZ5sqevDkiTHzKnhNxGXMslcSl/Hr0zU8WMuxY6/o+JSiXYs
SHSIefEFOjYVdy61mmr5ObA0rU70mFpX4kWOVTpHNOdLuc2D5IJ66dyfeVyK
+i5devnV+Pp/fFv0/6OMqbqsoNyDK66+TiwjTlNsbhL52Nt++Qdc+O+XCn5D
9zN881v/icQ0U2A7qvVK+5oz54tina+edyF+fPPtQb0N9abs6y9/+2fxPJTn
EvVnzzgbV17zA9x7/7Ipf+4UVjSEfH5RJoo+9ybbltYprGwIu4yOg7Jm9PlI
fOgLJ5wg7t04/8JLxGMT1YilTDExset+8BOcdvpZOOGEE8Vx0RhR70aqSWuy
t4VsN5O5FJnYVEFlGxKz6wWTonNv0TonVqVXY93RZKfCcKliaXysja1wtbai
kazwKVdDK8x1Lais7YBZeo962gZQ37IjPJ+aAWPGjrM1TErLpRo6BrBjeA+e
f/E1HDx40OhLdxaLxWKxWCwW65jSp59+ivff34cXnn8aDz/QB/9g03hdP/92
hRvFm0/pe09Rv6t26RjkGoPjGSpmUzPRW3otcFjSw9bw02alZC6VFh8upWdS
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
K6+ddAwqpTHWj8GfFq4NWufSy6+ZkEtR1ivSOFDdQWttaF3hW267O2g96kUV
7ev23etvCtr2/vkJEZ9/NnAp8dp7tqDUJvecWpFarZy3dixOdmJlejXWTtZ3
KqS/lEv0aIuUl2oUbpce7whcf4xKHvL5sWN0DJsH5Np+ret9IjvV2DUs8lPE
qNQaf3Vc028WeTsCGSkdl2pfP4QH9zyJt995z+jLcBaLxWKxWCwWiyWJ7hP7
+OMDePH5v+GR3dvxwEibzH6GmuEf3SBdv+2IM5+i/Q4rfIryU9uVDNUmJT/V
Jdf287XI9f20jErkqLjWnzFcSqnhp8lKEZOymRVH4lPRsimFSVWIjFQuKswV
Ys7bXr9+Blzzstmxc0V1D1ILPMYzqCi4FFnuLxWZS5VyXoo9DY7MpcazUguJ
S61zyp6IT62JX1ZR7TFFXIpyhpkWL4p1502B1YMiWzMsNfHrlRhPLhWOh+jr
8N32yz+ErPOV084MWmddRoV4nGrg6Y+Vcklah8trRTMOJ58cXGPwtl/8Pmj5
Lbf9dsLn0XKpe+9fFrTs4kuvCPucy9bkBq1H+Sn9OlQ/8Nf3zMO1379Z9Ms6
59wLcdrpZ+IkXb1CyplN5XWYqSY2RZ99ueUtWJNVj0Xr5HNyofRzeVoVErKq
I9f20/eXKqI6fhNzqbbObvT0bAi5Bhnyy2yK6vpRbqp7yxg6N42hbYPKqEYE
n3K37QzkqDg/NdMdzKToNfO2D6Bv2y7seeRp7HvvA6MvvVksFovFYrFYLJZO
xKZef+1l/O1RH3aPtsM3IPMf/wj1ndogMyORb4onnxpRGNhOmYcF+k9pek/5
W0WGKsCohsPU+psBHOdYcyQupfaSElzKnA67OUNYz6ZUPkXbTMylUhQeRc5A
RUU+isudoo+U8de6bHbsXWLtxJrMWuMZVNRcqh7JCpeq0PeXkh4rFv2lmEux
4+uJuJQ2K7VoXZWwyqYCfErLpuLIpei4KDO1PNODxCIP0s1eFNl1PaYkZ5vq
UWSJX1+26eZS+r5L4bjUGWeeE7ROUmalePznt98zYWYpnKn/VDTj8PVLLg/a
7uprb5hw/Vvv/F1ELvWT//lV0DLKNoXbx5rkkmDGdsIJQdkxylP9y7/8S1S/
57HCpVTTOFjr+rA2x4UlSQ5R04/Oy0VJTqzOqsG6nBqk6PlUGC5V4miDrbEV
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
WCwWi8WKoT6VvuN/+MH7eOnFZ/HEX/ux298V4FPEfvyj1E94u8KPRuPAqHzK
vnfCP7ZN4VObNYxqvZKf6gqp7adacCrBqjSMSl/jT2/uURWRS1mJS+myUlXE
pVQ2NQGXqjBJLstBWbkJFTaXmJ8x+rp2tpnq8NEcWbj5Na2/ctqZyDO5xDaz
cR7rWOZSueXNWJ5aZTx/miTrMc6lnFiZ7UJqucylKnRz6yUiL9Us5oyNHlv2
se3wXEpTw0/NSqXUYGmK/FPOTBnDpegcWpJaj9V5XnH+hKuDmV9ej4xiV1zG
azZxKbK+Rp7qk06aI3ov6XkOZYGnMh43/fTOST87w1nLpcj3/WX1lLb/4Y9/
HrT9OedeGLIOPfaluV8Ou/3xwKW0ptp++ZWtSMiuF3kpYs/zxHnulM7papGd
Si1yi7yUvSl8Hb/qhlb0bNyK0dGpXZcQmxryy32nqKYf9ZyiflPEptSafi29
fjR2jQg25W0fEr2nAlayVFo+JdwU2geJedWRub55G5o6B7Bx2wN4/KkX8PHH
Hxt9ucxisVgsFovFYrHirP379+PFF57Cnl1b8ADlkIjtiPwUcaBu6Xpui1J7
T+0TFUs2pfScEtkp4lNbNRmqDUp2Slvbr1XmU6pVRhXIUSl1/gL1/fQOx6qM
50SGc6ly4lJyDT8tk6qyK2xKyUypPabGuVQqKsszUGbKRZmlHra69YZf185G
03wU3Zcd7VwY5anU7WbbPNaxzKXSCr1YtNZuPHuKkkvRXKCWS+nn1UusHuSY
mw0f12PNDvdGwRWs/Pcy4EhciniT6CuVLGellqaOc6klai2/aa/jJ59Hi1Jq
sSrXg+QyL/JsXpTpzp+CChcyOS8lTJmZq675YdSfcWoGaSpeuDxdMK6pcCXq
/6TdB2W89bX2IpkyzfpagcsS8ibchvLPxzOXUm2uWY/MkgYsTXYq2Sm7nJ2S
zufVOR7k2tpgaWyFu7UVzTouVeVpRe+mbUd03UE9pwYl9/vGsHVkDJsGxrB+
h1zTj9hUe98YWnp9aOoaEdkp1YJTdQyN8ynKT1F9v+btwnVhHOhJNQPGe6ab
2B7VTOzcMAz/rkfwz7ffNfrSmMVisVgsFovFYk2TPv/8c3z66WHs3/8BXnv1
eTwwul6pi+eRa+QNNcM/Qkxog8yN/MMxZlOjcm7K36/jU5t12SmFTY21ySZG
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
eO40OZeap3CpRcm1WJPnQUaFF4UzgEv99//8Kmoupb7fSyyzq84gc6nILrF2
YlmyY5xLrSUuVS1yUcsUJrUyQ7aeTRnCpSRTzTHiUhlm+RzSnj8Vdi+KLV7k
lzeI/IzR48tmz0xvR22jhs209KOmbQscTd1wulthq26ExekVfIpcYJXOp8ZN
6Nw0ig07/Ng+NIZBn+xhn1ynz6fU6xvReVjxkIZL7SQ2pfSb2jIUyqao5xRZ
ZVQqnwrKTsWYTdUcg2yqoX0nNmwdw+iuv+G5F17GJ58cNPoyl8VisVgsFovF
Ys0SUY2//fs/wssv/R2P7enHbl8HxoZaxllOgFERF+qWGRVlnASjGlA406DC
nIYV/qTnUAM671S8Q8OmNunYVE+E/JTKp5qDa/uFY1RDkfhUFKxqlvafElyq
Lhe2sFwqBzVVBXC7TKhzV6G+sRlNnZvENbpad5+ux+k+Ubr2Zi515L7pZ3cG
zVGfNGeOyC1Fu72eS01myk+pWSvVZY52Mb8fzfaXXn51yDFEyxLUzFQkLrVy
XaHIaGmXXfGf358V9dqqpGNMox4Z6xwzgDtFz6WWpNQhocCNLHNo1kPUIat0
IdvkmbZx1L+XKOt39bU3iPqV+veNaqrxZ/TrPxUzl4pswaVSFLa7xio4E9Xp
W6pyqYwarMqUTWxqebqco1Lr+Qk2RT2mppFLLUmlc8iD9Eo5c6g/h0xWD7JL
XXB4Jq5rx2Yfvx7nUq7WnWjq8aGnfwybBofRu2kLGlu6UFXbBHuNzKeyTfUo
r+oWLKipe0T6XuoTfGrjTr/gSv2jco6K6vQN+PzjVhgUPd6v8Q7Far8pNTdF
Pad6tspsikzffwWf0mWnxtmUnJ1SHYlPaWv7aX0s1vWj38vb3o/29aMY8j2C
l1993ejLWRaLxWKxWCwWizXLdeDAAbz26kt49OFh+AfbxrmMymoEo2qC39+i
cKIepQbfFpkvqf2jhPs1/aS2h/E2xVuV7Tfr2NT6MNmpjnE+pa/rpzrAp3S1
/ibsPzUJp5oBvGkqXKrNWwiHJQ2VpmSYy1MEl7JbcmCzlcFZ50bv1mHRD1rt
CU3X512b5etyuiana3FiU3S9TdfYRl//zkZTX3PtHPW5/99FU9o+Epci/kQM
6SunnRmyjGr1afdx40/vCFp+3gUXIS3XLnqEUP926hGvXb4qqSiwbU5JXdg6
hNT/6o5f3y9+H/Vxu6tPbBOOSxEr+9LcLwc9TutF28vDaFONw6RcFxautc8A
7jQ5l1Lr+C1NcyGxyBO2Bhm5qNKFzBL3tI2jnktdcfV1QcupT8zcuacErfOl
uXOj2ncs8ipH0nONuKqWrR4plzqafm+RjiVez3OkNjm6sSazJvBeJcakcimq
4UcsalVWDVZnyT8Fm0obZ1Oint9ap8hMzYtrjyn5HCI2tVjJHKZVeJFPGSk9
l7K4kVZUB8ck/ZbY7OPX24UFl2rbieb1fvRI3zu3+cbknNPICLZu3Y6Wtk44
axqRJX3vMNk7xfr03ZNYD30XJUbUtsGHzk1+cR8V9YoizkSmLNS2Udn0b+Fh
2epyYlpbBuXvvMSlqN+U+t2X9kfff1U+JbJTvT606PpOibp+7ZH5lD47Feow
fMrw1+fITL9LS9dO+Mb2YO++94y+dGWxWCwWi8VisVjHiCg7dfjQIXx8YD8+
fP9d/P2ZR/HwA1vhH2wN5lNqjmqoCf6RFvj9HQpH2qBwqo0KY1L7R22exBuV
7fp0TKonQm5Kn52agE9pM1QR6/sdOxmqUcldzSWosqYLLlVqKkC5xYFaTyfa
evula+8h6ZpcvveUrtnpOl1fc5/uFaXrcM5MHblP/crpQXPUlAuZyvbhuNS/
nnUuii1yvT3qn/6vZ58btPyHP/55YHuTvS2IK1FfKHVb1TfcdFvQ9jf/7Bfj
y268NWjZqaedIfJX6nKaA79/3hr8SNqH+pieSy1emYmLL70i6DHqa6Xdz0w3
zeWvyazFgsQ4ZzRiNadOWY8EG5alu7GuxItsqxclYfNSbuSYvNM2jpNxKXK4
Wo/EULXrONwbsXB5uuh3dtrpZ+GEE04M8Npzzr0AP731LvHe1++7oNwjnpPe
j7/9/SLxGPVNu/6Gn+KUU08X2593wddFzlHbM01v4qnU4+2Sb14pMpBfPPlL
olfasoS8qLkUMV86zm9+6zsiN0ZZQuLM37ryu6IPl/53Vv3re+aJ59X+Diuk
vxPXXn+TYHr0O9CY3Hrn72BVuC+NF21HfzvoeYj10fPQGE7neUQZiKTceg2X
smNxUhWWpsrZqJWZNVidXYM12fJPyk2tUNgUrUN9qIhNiXp+cc1MjXOpRUnS
ceS4kVLuRa50zpSH5KXcSCtmLsVmR7bMpWoElxpAy0bp+6b03XO7wqVEXyif
D4NDQ9iybQdaOjeirXs7mjp3BtiNyqeI/Xik76QNnUNo6R0VWSriSfTdVbCq
7TJrIu4U4n7ZG/rl77vEtQJMSsel9HX9tGwq0HcqiFEFZ6dURhWeTc3uvlOu
1u3o2TSM3Xv+hvfe/wj79x/Ap59+avSlK4vFYrFYLBaLxToG9fnnn+GjDz/A
u++8idf/8Rz+/vRu7Nm1DWPDnTK7CXCqBoX7tGgYVZfCklSu1KvhVuGsLtPW
71NZVBdCe00pTErlUn6ZS4WyqWZdfipcdmqKNf5mOJsa3dmA7jY7nE4b7DVe
OOraUNvQh+buIXENTtfkxKLoXlK6v5T4FN07Stfp4/X8/IF6fq5W5lJHYn3W
iOaOp7K9nktR5khfp4/mm7XrXHbFdwPLElJNQcu+cdlVIc8xf2lq0DrfuvLa
wLKLLr4saFmk/lVa67mUvh8WzYnnl01fRicWdnq3YEVaNeZNls9Yo7FRXGrN
OJdanulGssmLPJsXpWG4VKnFg4LK0J5i8XI0XCpcTzZtro7e/2ecec6ENSXJ
J500Byk51ojn00WXXIY77vq/kNqSqs8469/C9rai5z//wosjPi/lCSfiUsRy
7/7DEpx44kkTHj8xpiWa3mzhzi/6HYiPRdrHhf9+KQoqvDjn3AsjrqPPV8bT
5VU9SM6rD5wrKpeiPBT1kyIORUwqIUf26qwwvaYC9fymh0stWFeFFZkuJJV6
kWP3okx3DpXbPcipdIv6rLOhJimbPf1WatZJdrcNoG3TGDaOyDX2RhUupXp4
1Iddu/fgmb+/iOde/Ad273kKPZtGQnJG9S20r37BhIhRUb2/5p7gPBUxJ/pO
q/InrVWOpWVRWh6lWlvPT+VS9Hzh2ZSaneqfoLbfRGxqZn7HrpOOq7G9H5t3
PICH/vo0/v78q3jtjX/ivfc+MPoSlcVisVgsFovFYh1H+vTTw/jg/ffwxusv
45WXnsLfn96FRx/ajgdHu+EfbBlnNcRyiPsIHtQM/wixIsoztUnukK49OzXM
Su8eHYPqCOP2UCblG89L+UebpolLGc+fxu2Bf6AJu/3r8djDO/Dsk7sw5peu
11s3oKZhq7gGpuvotg3y9TrdT0o19qm2CdXdVzNT2nr7tC5di3vbh7iW3xGa
cgvaOeCvX3L5lLbXc6mvnve1kHX0XIlYkrrsvnmrQ+ahiZVprV9+9jnnB7Yn
hqRdlpRlnvSYI/UJUv27P60w/HWZqp2eLViSVBUFE5rA082lJK/IciO5TOZS
+vl0k92LArMHheaZw6VoXp/YqXYdyjEFvd+XpEzKpMbPlwtR5R2v7zfVfm03
/fTOkN+BzuGp7EPPpW7/1f1Rb0vMLLu4Zkrn11QdriddvGyuWY/0Im/gvUr1
+BYpeakVSg0/4lKJuTVIyFUyU1nBmanFyeN9puJXy2+8FuZ86XmWpteJ3CFx
qSLp3KnUnEdU16+QsofW5kAtUzabrbXMpIi7eNoH0L55DH0jcm8on45LDUjf
Rx/921PYt2+fyOC89/4HePb5V+Df/TdsH3wIvZtH5RxV4zYNo1JzVAPS99VB
NHWpjErOU3Vs9Ad6SGk9zqH84j4sNRuldSiTkvNS3jBMaqKeU8TRZhuXqm/Z
hpbuAWwd2I3H/vY8Xn7ldXzwwYecjWKxWCwWi8VisVgzQh9/fABvvPEqnn/2
cTz1mA+P7N6MB0c7MUaMSs1SiTyVUu+P6ucNyaxI8CPBqYgrtY9bZU7i/22y
BX9qle3Xu0XhUTomNRzGKo86VvpMScf3wFArHh7rxeN7tkmvwShefP5JvPXm
69i/f7/02ryJvq0PiOtLmUsNivs/iUtRNooyUtQHmvpEb1V6QfcFcSm5lh9d
g9N1NnOpqZuyS9o5YKrrN5Xto+FSlKmIxKV+fvs9U56npv5TtC3VMdMvyzO5
Jj3myebNzzrnPFFXzOjXJlpT36JSeycWrXNMnUUZwaYULkVz/qvz3Eit8KLA
Hlp/rMgqPW5tll7nnmkbSz2XovdaZmGVyDVRr7OL/+PbIe+XX90dnOehupDq
MmJYf/jzSiSklopsoL7uJJnq5UU6n1RTxol6wemzU5Rp0r5Xk7PMIdtShvHa
798cUk8zHJei/JU+J0XcjTJL9/1lNb57/U0h22vzixOdX1SjT59v1DMuYmpU
Q1O/jDKX0/H62+r7kFPWFMKlKC9FuajVSlZqbZ7MpkQ9P02fqUAtv3Xjtfzi
zaXmSc+xJLUWiYVeZFpkBqXtMUWMqtjmRYm1hbkUmx3WCpei76Gdg+jaNoZN
0nfPAX8wl6J/0z1SL77yD+n64pPAtcbnn3+OA/sP4M0338Izz74A/4OPY4P0
3bZzwwi87f0iS0XPo9b7Ix5E31mJgdH3V2JKLUqvKD13UtmTyp9kj4httA7w
KDUnFWBROwMsSs+kxrlUdHX8jH6d6BioRl9rzyDWb3kAO4Yexu49T+LVf7xh
4JUmi8VisVgsFovFYk0uylLt27cXzz79OB7dM4SH/L3YNdyMscGmYEYVYCqe
cS6kcirVPs2/RxXupFq7nsYhPaW0DCociwphUhF6SQXV7DOSSck5NP9AgxjT
3aNteIh41COjePXlFwSH0kq6jMe+997Dlv7d4npzPC8lcyeqtb9VqaNCcwP0
U63lR8uptgndR6r2mKLrb7q+Nvq6ebaZ+tTo54DT851Rb3+0XOrOu/4YtGzO
F08Wtb0imeqCqT1nqDeN/tjT8uyTHrN+3pzm5fX7odpjRr820dru3oT8ihYs
XGuflEnNmxFcSnKCXH9sdZ4HaZXhuZTISlnbUOXZPG1jqedSk/nSy68OquFH
ttT0CFaVURB6HlHeSl83ckVifsTziUy1KdX6a+HyhYWVDYHtqQ9VMJOaK+rk
qcuJL03EpW786R1By6ivlD6rFK6/lvY5wnEpqn2oLtf3i1PP+9Rcm3xe1/YK
hqVdTjxvOl5/6sFUaG4Pz6XUGn65Mpdal6dkplQuRbX8ND2mFq51ThOXsmFx
Si3WFHiQYQ7lUuQyyh6WN0h/MzcY/veKzZ6RJmYkfYds6B5G1/YxbPaF4VI+
Pzbt9OOtt98VfW4j6dChw9i7dx+e/fsLGBjZjY71xKd2inrT44wqOE+lMiNi
SipfIjd0DMvuDLZ2naBsVPuAhkH1B9XsC+VRoUwqXEbKKCZFz0vHR+NG49fW
O4y+rX7seeRveFt6DWicWSwWi8VisVgsFmu2iHpRUX2HTw8fwkcfvo/XX3sZ
Tz6xGw+Mrg/PprSMSnWAGTUq+SqNh3XsKVwOKiJ/mqhW38yv0+cfaMbYcBd2
j23FU088hI8PfITDhw6KsaYxp/tJ9Tp48BCG/Y9J181ybXu6pla5FGWjtilZ
qSGqnSKZslP0OPWeUntM0b2kao8p5lJT9z33LQ2dp772hqi3P1ouNW9Jcsg8
/1SOn3rcaLf/y+KkSbfRz5svlY6Psijax6h2GOVkjH59orGtfiMyS7yin83k
XMom2FREPjVNXIoyHmIuPd+DdOJSjlAulV/pFlxqOsdyKlyK2NOR5Or0maP7
5ydEPJ9u0/FRqvlHfam062hrV17wtUsm3J78E93vqOVS+nPjzt/8MWT7Cmcn
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
vveOnEuFE+WpiMPs2/ceXvnH63jy6Rew6+EnsXP0EfSP/BV92x5Ax4ZhNHfu
REN7/8TMKuT32hZ0v1at8rvWqI/FkUm5WraJY23tHkTvFh+2DjyEkQeekH63
p7Dn0WfE7/niS6/i5VdeE2PAYrFYLBaLxWKxWKyJRfc67t+/H3v3/v/snQeU
nGd99ZM4GHBOyIEDIeSDE0gISYAQegglhA8IJQQIoQVCyRfAVq/bd7W9anvv
ZWbbbO+9TH9lyVU2tlxwLzLGlpskq/l+7/95Z2an7Wr7rKT7O+eelaZr9n08
r5879/5/h6effgIPP3QCJ+65Vdct+PWdbhy/dRp3HB3BbUcGcYu7D0edPUpH
7Ba4rR1wz7ctdPVtqOfk7RWUzFM7NGsnjti6cLOjG8dcvbhV68ftNw/hzmOj
6jUfv20G99zpwkMP3qN08uSTOHt247+v+Mxvn8W88zb1/7DiKXX0O9E/4fb5
UsE9KvL3OZeGCbuGkVljzpR4We39DtWxL95WwxbY47jSJH1+n/z0F5ftS23b
k6Tutx6+lOzrf/QT/7zs55Yslf/9d+xLCengC5ZcX9k4pG6/1L55YkZFyN68
vzexFVVSN4hd8cY8nJBc0lbzpaIWfKl9qWbEFZiRXmFGfhhfKq+kBYcjPF8q
+Hf/3f/6ZcixJbk8/9u89e1/HnD9F778LbW+vNd/9l++tiG+lEi8r4DH9ptd
5dWPfrYrrC8V7v7Spxd8f/GxX/+GNwbcLjppoe/vSvelqvXXkltmwY64anWs
ire0O7FuUV8q0eNNxUhmSvr8UupVvsrb5SczqjZkxpRaw4a2x9ViX1qzykst
6kvlNjAvRVHh1G7I1GODZUzDkH7+OR00W0qkaUdw/O578comZHmkg+CVV07j
5ZdfwaOPP6k/733Qjh7Xz4Fvh1U/Zx6cOIL+MTd6hp3oGrSjo88KU/eMyiKJ
mjo3LgcljyuPL89j7p5FW+8c2nvn1WuQ1yKvSV7fxOwx/bXeimO33Y0HfvMI
fvfcc7h0aXkd34QQQgghhBBCVse5c6/i1Knn8dSTj+Oh39yHhx48gV8fP4Zb
j86quVVH7L1KmrUD2nyrT+558xrUGvBYkt1Sz+PoxzFtArffYsXddx7F/Sfu
wqOP/AbPnHxa///dl/T/R4zsdxRfevlluI7erf5fV3yp1l67z5eaDeNLefv8
Zjx9fkPTGvrGZc6U0eWnfCl2+a1a4vGIb3T99a8P6+3IHrbMhPLePjG9QmVB
vL7QBz708ZDHlBk3/l6P/z64v8S/Wiq39advf6ea6ROcTxFJ35h0iwVnq+R5
pfvPPzciPX/ef4/cPngGzzf/86cBr1d8gEj/XpZScd0gdsRVhXpLwZ5U9Bbw
pTyva1tcDQ5kmJEg+Y5KMwqD9tHz9cvyqzpQtsn5jsv5UuKpyAw0/9vI8eS9
vrS2L+S4lX49/8f45D99YcN8qff81fsDPWB9TfjPSEvOqg5Z2/7r8X1/+w8B
173v/R8OWW/Bs59E+X5zwK50X0rer6KaPuzUj1Gvh7orsdbX4xfsSyX59/lJ
ZiqtHns9fX4qMxWzAb5UVKAvtS22BntTmpBYaEZmOF+q2oTU/CaU1g9G/L9X
FLUV1dAxBbN+/tkzoWHErmEuyJdyutywa0fxxFNPqx6+rYD4VvLdrocffhR3
3nUv5uxHMTrpxIiu3mEb2npk5tR0oDoW1NgxdRkF3t77GPK48vjj0y5Yncdw
9NY7ccvtx3H87hN48KFH8Mwzv430W0MIIYQQQggh1yySqZJOiosXLuD8+XNK
5149i7NnT+PsmVdw5szLHr2k60WlV14+hWd/+5RP0hv42CP3+/TAieN46MFf
+132AH578gnf7U89/4zvsQy9pJ7jrNJpvKo/96v6axDP7ML58+r1Xbp0KdJv
lZrrdcvt96t9Afl/YFO3Ff0TrkV9Kf8+vyn9+tE5TfX+9YxKZsqpuvwiObf5
apHsRR8ua1d73tFJBUg/XB+yd+yV5CekT6+srn/Rx5O9ecmMLHUbryoah1Qm
SvazZU6U+GD+eZOlJM8j990TlYnYlBKU1vWFvZ1cLq9ZXnu46yubhtVzyu3C
+WBbScW1g9gWE9QVFs6Tir6MN7VJvpS8hh0JdYjKMiOpxIzsqtB99JwKMwpr
e1W34ma+l5fzpUSf+fxXQ7xPb9ejdOEFe6O7PL6MHEff+eH/hngy6+lLhesQ
FB9sb0yWmpX2uuuvD7ne35eS2wRf/5nPf0WtqdzSVtXXF5xN/NinAn3mK92X
kt9TZdModsV7fKnoKuxMqDXyUpnhfSlfn59+fZQnM+Xt89seW7P+XX7BvlRM
NXYnNyI+34zMqlCfV5RR0ozyRvpSFBVOjZ2zaBtwoG9Kw5h+bjkf5Es5XG7M
HTmGl155ZUucOwvyOuRc/vz5C/r5/TmcOX1WZblEL79yBi++dBov+OnkM8/h
iaeeUXrsiZO4/4GHfbrrnvtx/O77Ay579LGnfLd/6unf4oUXX1GP8+LLp9Xj
y/OcOSP/b/OqkryG857/vyCEEEIIIYQQQq4E7rrnYdUHYvT7z6F3zKXmRy3m
S8legcydmnUZmanhGW9myqUyU94Z0JHe56CozVBR7UDYfeuwnlQYbyrAn9oE
X+qmmGrsOtSImFwzksvMyKkyozhoDz27zISiRTzFjdRyfKn41NIQX+Ur3/i+
7/p3vPM9IdfLZYvNQVtPX6qoujvEF7uc/H0p8XXf/Ja3Lfu+8lzB89eudF9K
JJmpvUl1Rg+m+KjxNdiXsrQv5ctMZRqZKbm9NzN1k2dW1fp6Uwu+lFpTSQ2I
PWxGhseXKg1aU1nlLShrZI8fRYVTc9c8OoadGJjVzyuDZpt6fSn70dtw7vyF
SJ8yE0IIIYQQQgghZJ144DePqU4Q6fdvtsyga9ipclDiS4WbOx2QmXIYmSnv
nKm2XsdClx8zU9Q1oBBfKirUl5LMh1eLeVSb4kupeT012JvagvgCM1IXmS2V
nt+EgqreTX8vl+NLif7sz/8i4HZveMMNqDUb2a490VlLejnBeaP19KVEP/nf
vSEz0vz1l+99f0BuKrhXU/KRb7zhhst6Utdf/wZs35sc8vquDl9qEnEZTdge
a8xt2x5brfJPS/lSiWEyU945UzKjat3XmJ8vdaNkuhLrEJNnzGsrCONLyTor
rl1e7pSirinp54syW6przIVBq4ZJlxZmttTNOHrb3Th/gb4UIYQQQgghhBBy
tfDEUycxPX9U7Q+In9Qx4FIZqKV8KbdnztS0fhvp/BucCuzyMzJTGzf3maK2
ipb0paJDfanFvKnN8aUqsT2+DvvTzcqXSvPsoQf7UpkFTSis3nxf6vs/vjHA
O/rCl78V9na/2BYT4P3I7SsaFjrStu1Jwpve/NYAb0Vu/3cf/CgyC5vU7b3P
4e/t+M9rCzf7TCQejX9e6VBmVchtbtyVEPL84p19+evfVd2VMndKXs8fXHcd
Pv/Ffw+5v3RYfvpz/4rXvS6090/mU33kE5/D4fL2sO/N5ea3SU+neFq+1/XG
GwJmYIkOxOcFvL+f+uyXN/U4kC6/tIJW7EowuvykJ088JpkfFb+IL+XNTMV6
50yl+nX5xdWodbeumalwvlSuvqbCzGtT3ZjlZhTV0JeiqGA1yGzTPie6xzUM
6eeTU2HON48cOYo77zqBCxfYUUcIIYQQQgghhFwtnDr1Ao7eerfaH5BZy219
DgxMujHtWNqXsvt1+Q1NG11+nYNuNaPKm5lS2gL7HhS1Ucqv6FvSl/L5UTFV
Qf7U5vtS8jw71WypViQUmpERZg89T78sp6wNZfWR6RyrbBxSs8fEP1nydp4Z
ZJL/CTcHSy7LyG9Qs51iDhUF+FbSl7fYc3jntS02+0wkc8/keZe6jTo2yjtU
fis1ty5gTpr4QOX6+1t+mfdY7pOn/y7EJ9ofl6tmzi1n3trl5rdJtkxevyjY
k/JKZnXJ+3u517gRkn9jfkUP9h2qN2ZM6WtnV2IdDqbVIy5zcV8q0a/LT267
L7keuxPrsSNuA7r8FvGl0hfxpbLpS1FUWMn3mNoGnOid1DCin0/OBJ9ruvSf
x27Do489wdlJhBBCCCGEEELIVcSZ02dw172/UfsD4iPJjKi+cRcmrOHnS3nl
9HT5TTo0jMwudPm19trpS1HXjPLKe0J8qZCsVIyfwuWmNsmXkueUOTjROWYk
FZuRVWVGkd/euXSPpZeYUFQrXs9YxN9b6tpVaf0gDqY0Gr6U+D7xtaqbL/Yy
vpTkqWJ0HUw3ZkypLr/4OpW58vlS67HWAnypSuxIqEP0EnmpbNWZaYn4+0pR
W01Nlll0DLnQN6Vh1K5hNuhcc14/x9Ruuwun9XPV1157LdKnzIQQQgghhBBC
CFknpBfloYefhLl7VvlI0sMnM6bG5zTYXIv7UiKbp8tvTL/twKSG7hFN5a2a
LbMLvpTMmtoCex8UtRHKKetamS8VEzlfSmZL7UluUvvnh0rMyKkyo9jfl9L/
nlLQjLLLZJUoaqNV3TKGuMwWX65Quvj2JtcjJmNxX8o/M6VmTKXWY4+3y08/
9n3rbIN8KclLpS4yXyqn0ozcivDdixR17UrOOa3oHHahf1rDuENT33cKOM90
abj1rvsifapMCCGEEEIIIYSQDeCZ3z6PkUmn6vFr7pxBx4ADw9Ma5l3akr6U
zKaW20i2Srr8esc0NZ/K1DXvmTFFX4q6upVR1LGoLyV76uJDSVbDK39varN9
qe1xtdib2oKYPDOSS83IrwrcPy+tMiElrx5lfp13FBUppea3YVd8tVof2/Q1
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
Y8cUfakNkuSS/P2gX+6IW9fHzy1pDXj8N95wQ9jbSU7L/3ZvfsvbIv7ebLSy
S7sCfSnPbCmjr69G+VCyZ+2V15vaFF8qytPhl9iAvakmtW+eXmZGkd9+eVGV
GTmlLcgtZcfYZqmsrh8lNb2oNXOW13JUXDuAmPRG5UvJOtmTVIvYjJX5Uv6Z
qX3JC5mpG9fFl6rCzsQ6xOYt7ktllEm/H30pihJfqskyh9Y+JzqGNTVbSjr8
nAGelBu33XE3Tp16IdKnxIQQQgghhBBCCNkknnjqJMZnjhozprrm0D8hewQr
z0zJd18nbZq6v7nHZnhT9KU2RJJj+vyXvonPfeHr+J+bolHZOLSuj59V2Bzg
N11//evD3q5Cf95vfe/n+PTn/hXf/O7PcCizKuLvzUYrr7wnxJdSHX6e/j7J
Se1KqMeuxHr1U/6+05uZ2gRf6qbYauxKasK+dLOaLZVZETj7JrfchOyyNhRX
90X8vVyOrvSewXf/5d/41tHrXnc98vT33nvdVpkTt9VU2TSqcok3evKIOxNq
Ve4pcYW+VJInM3UgVdZirZoBd+Nqu/yCfKldSfpjHzYjfRFfSvnBtVfGGqOo
jZR0+LVIh1+/C5ZRDUPWwA4/p/7ncasbDz70KM6cPhPpU2JCCCGEEEIIIYRs
EtLl77r5bjRbpnXNwjLoVJ18zhVmpuS7r/Id2OEZDZYhl3osyWBda95U7Rq6
0WQPfqP34Zfz+pbrS0XyvYqUlvSlPFkp8aR2J3q9qc3zpeQxt8fVYW9yCw5k
mpFYaEZ20GypzOIW5JR3oqp5NOLvZThlF7Xg/37528rPef0b3qi6Id/wxhvw
dx/4CH74k+0qdxTp17gS/dEf/0nAWkrNrfVdt1XmxG011ZonUVQzgB2xxjqR
uW37kuuUx7SazFRUej32HqpXa1R8rtV5Uwu+1E3RVaobMD5/cV9K8lLlTev7
fQGKuhLl3+HXNa5h1KHB7nd+6RBfav4Innn2OdUtTQghhBBCCCGEkGuHX9/7
EHqHjS4/yUwNz6wuMyX3Gbdq6B3T0KI/jvKlOq4uXyqnxIx/+Og/4a//9h/w
4Y9/FgWVFpTW9uEb3/4x3vyWt6t99Dfe8Ef46Cf+Gb/cHrvkY4kv8/NfHcRn
Pv8V/J93/SX+4Lrr8Lrrr8dfvOdv1GV7orPC3u/HP9+F9//9x9RrkOeR1+R7
fcUmfPhjn1bXyes8XNauZj79x/f/R10mz3HDH71JXbc7KiPgcQsqO/HJf/oC
3vs3HwzYL/+DP/gDfOJT/+JTRn6Dur08tvz9ffrj/t0HP4of/mRHwON9/8c3
4m8+8BG87/0fxn/91LguKiFf/7d9FX/8preox33Xu/8aX/rad1TX2WLv0f/c
GIUPfeRTeMtb/0xlTmSv//1//4mA1ySS/MlG//6DfSnZo5bZNf5ZKfGkZN/a
60vt2AxfSjyyGKPDb1+aGVHZZqTox0W+3155seyXFzXhcGVXxNdROH3j2/+t
jong+Wn+kmO3pmUs4q91uVrMl9qsOXFXqiqbxxCd1mBknPS1siuxBtHpK/el
JGMVk1mP/Sn1yh82fKnVzJny86X0Nbw7qQGxh/X1VBXel0otNqN0nXOsFHXF
ya/Dr3NEU7Olpv06/KQD2qEdgXbsDpxmVooQQgghhBBCCLnmeP75U3DdfJfy
jiTn1Dvmxpx95b6UQ5fsOQxMaWjttfkyU1fTnKn9sTkBe8nitwTvPfvr3771
o7CPk11kwnvf98El9+BFn/rMl0IyIu/+q78LuM3ug+mLvr6f/GIf3v6Ody36
+OIdee+7Jyrzsq9H9FP9McM9l3hri71O8br+4wf/T/l24R7zrW//c+SXB848
Er/v/7zrPct6TaL//OEvNvz3H86X8s6V8npSe5L8fSmjy0/5UnE1ysPaKF/K
2+G3P92s9swzywwvyrtXfrjSjKxiEwqrtl7mSLzH5f6exT+N9OtdrpbKS230
nLgrWeJH51f0YHeC4SXJfKgDKavv8pMewN1JdcoXDvGllrUOF3wpeYzdyY2q
J3NRX6qwBaUN9KWoa1u+Dr8BF7rGjNlS80FZKZt2FPeceABnX3010qfChBBC
CCGEEEII2WROnz6NW+64T+0jiI/U3u/ApNUdMJd6OZLvvs67jC6/rmEnTF3z
IZmphvbI75WsRcFezHJ0067EgMcQn0k6ypZ7/09++osB91+JL3U5ST4lv8LY
598fl7us+8hMq3DPtZQvtRx96avfCbi/ZMFWcv/N8KUKq/uxLcbY175RZSeq
lN+kslIeT2rPIY+S/Hyp+AVfSjIg4mfduNIZN5ft8Kv1dfjFF5iRXR44Wyqt
qAUF1b2oMY1HfB35q9Y8rnKC/r9L6Y78yje+r+YuffEr31Y5Ke91hVVbM+8V
Tkv5Uhs9J+5KlvSZltYP6muoTq0R8YLkz/Gr7PKL9nT5iT8sa2Xl3pR/XqrG
50tlVplRFMaXSitqRlnDYMTfR4qKpBo7Z3wdft3jGobmNeVFec8Z5x0a5ty3
qblSly5divSpMCGEEEIIIYQQQjYZ6fR/6JEnMTjhVN6R+EnD0y7YVtHlJ3MD
Juwa+sbdRmaqc+aq6vNbzPcRn+lzX/ga3vXu94ZcJ7ko/8f48te/G3IbyUX9
/MaDKlP0pj95S8j1iekVvvuvxpcS/0m6//7kzW8Lue47P/xfdd+i6m587B8/
r3r3gu8rvX8i6QiUGUDhnmu5vtSb3/I2fOBDHw/JTv3hH74O1S3G3CPpR/S/
Tt6ThLQy1VP4zf/8acjrk/ctt6R1w3//JXWD2J1QrTwlry8lWQ6ZK7Xb40nt
Ta7HvmRjH3y3x5sK9KWqPb7UOmWmvB1++vPsSzU6/A4Vm5HnN1uqRFfy4UYU
1YTvS4ykUnPrQo4R+V3730a8K+nFlHWynLlka5nVtpb7Br+2pXyptehKnM22
Uol/mphjws64auUl7UyoQUzG6rr8YjPrcSDV6NVUecUV9/lV+rwpry8l3u/i
vlQTfSnq2pa3w6/Xic5h/ZxwSsOEQ1PfX/KeL6pzzFvuivQpMCGEEEIIIYQQ
QiLICy+8hFtuv0f5Rk2dM+gdc2DWtnJfyshMuTHizUx1z6vHu1r6/ML5PjIP
SjwduV72s2VGU/BtvDOgJJsUPEPn29/7n4DnkLlNN9zwxwG3+ey/fM13/Up9
qT99+ztxuLxdXS9zbf70z94ZcL3kNfyfP6uwOSS7spz3Yjm+lORfvHv+4sMF
X59banhL+4IeW3revI8r93/Tm98a4Get1kdYqUrrh7AvqcaXdTJ8KaPDT/JR
ypNKMebZyE/xqaTbT3yrgBlT6+pLVWKb/ri7khpxIL0VMblmZJQv9ItJZiqn
woz0ghaU1g1EfA0F61c740OOA+lwXOnjxKWU4PNf/He1Hq+77g/14/Z6/OV7
P4AvfPlbvploG3Hf6KQCfPpz/6p6+cRrfcc734Ov/Nv31My0pXypjZoT56+t
Np9tpZIuvwMpDWqtbI+rVt7Sarr8VGYqYyEz5V1/Ad7UMn0pWWt7U5qQUGBG
VnV4Xyolv1HlvSL9/lFUpOTr8Ot3weLp8JsL8qQcN9+C+x54KNKnv4QQQggh
hBBCCIkgFy5cwGOPn0SLxfCl2vvtGJ91rdiX8s6ZmrRrGJjU0DHg8M2Zuhq8
qWAv5o033IDi6p6A28g+dvA+e1RCftj7i+dTEeZ79V//5o8WzVytxJd64w1/
FDKPR2ZK+d9Gskv+12+UL/XN7/4s4HrV3/a6wP62eE9OZtueQwGX/+inOwPu
+76//YeFvNR1121afkR8qf2HpAvMz5eS2VKeDj/JSe1PNbIZ8lP+Lt7ULp83
5ZkxtY6+1I0y4yq+DnuSm3Ews1XlOHIrFjr8iqvMSCpsQX5VF6qaRyK+hoK1
NyYrZL188av/sWyvUXI1//6dnyw6u8zrXf7EMxctWGu5r1we7DP75wKDL/P3
pTZqTpzvWN2C89lWqqrmMSRkm/T1Uqn6L2VGVELm6jJTcZneOVP1ag16+/yW
500ZvpThj9Vhf3oLkorNyKkOnOGmfOAqE5KyG1CyBT1gitoU6ed3vg6/IRd6
JjSMWrWAbugZhwbt9rvx/KlTkT79JYQQQgghhBBCSIR5/tSLGJ5woLlzWnlJ
A5MOWFfhS4nmXBpG5zR0jwTOmWrsmLqqfKlgL8Yr8YP8b/fLHXHq8v/+nz0B
l0tnXrj774nKDLid5Ke8161kPzvc67tpd9Kinpdoo3wp/9fplWRM/G9zMOGw
ujwlpybgcsl4JWdVG+9NdFaAj/AX73nfpv3+yxqGEZPeoPbJZb9afCmZHyWZ
KMliSEZKPCnZ/z6QZuSmJEOlZk0lGrOmpM9PdYlFr48vdVNMNXYmNmBvqgnR
2Wak+WWlRIUVJsTnNKCiaet5UiLpXwznk/zle9/vOx6W0r9/57+X7b1ILsr/
vpJzXO19ZT7Ucu+7Vl/qcvKfE+fVVpzPthqlF3ZgV3y14QnFVqvc01oyU7JG
xR/2z0xdftbbQl5qR3y9muF2qGQpX6qevhR1zUrO75q75tDaJx1+bgzMaJgO
6oW2um7GXSeYlSKEEEIIIYQQQghw+vQZ3HH8Xpi6ZpUv1T1ix5Rtdb6UZKam
fJkp51WTmVquLxWclfjZL/ery//1374XcPk/fuZLYe8v+aqAfefrrvPlR9bq
S+3Sb79VfKngPIfXh5AslTxe8N55cL5K5J2PtRmqaBxBYnYTtsV4fKloIy+1
29PhJz6UeFJR6frPdD9vyjdrqs6YNSWZKc+cmzVnpaRHMKkJ+9LNqsMvs3Jh
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
pqgrTeJNZZdY9PXZgB3xtdiT3IyEvA7kVlpQbbbA7JeVauy0oLnNgpHR5flS
vq5Z90LXbO+YC219C95UUye9KSpS8vT3dczox+O8yka19buUxJOamL9VeVJn
6EkRQgghhBBCCCHkKuDkyd/C6rwdrd1zypuSXNPsvJELWS9val76k+zGbA/L
kEP1J0nOpHnR76hHen+IutpU3TKGnNJu5UvdGF2F3Ul1iM9qVrNrMorakFVi
eFLZJa1oNPVienp6yeN6xmlkLsRrbema9dvPZp8fRa1FVc2jyCnrwr7kRuxN
bkF0Vjsyyi2oCvKlyhs70TMwAqvVtvI5iJ41PKY6OV1qDqKpex4tQd+Z4CxE
anMU6EmZeuwqKyWzpeRnz4gLjzz6JF599dVInzISQgghhBBCCCGErBuPPfEU
pq3HlE/U4vGmJueNLr718Ka8GZNJT39S75iGjn6nyk6F9vpxX59af8n8mqKa
AexOqMFNMVXYmVCP2KwWpBW1qblSmUXtyChoRWVdOwaHR5d1PEtmSjoqZU+b
mSmKWifpa6e2bRLZZd2IzmxFdHYrUivaUdbciVaLBZ0Ww5+qamjHyPhU2Ezj
irpmPXnermE3WntsYfpmOXOK2kiFelLmXumYdKrMVNeQC7fefjfOnKUnRQgh
hBBCCCGEkKsL6fR74qmTmLEdVftw4hd1DzsxNedet3lTAd9RVzOnNFgGXUZu
KqTXb4r9SdS6q6JpBKn5rcqT2pnYiKhMM5Lz25BR2Ir0fDOKK0wYHBqH03n5
fW5ZF7P6sTwyq6FryBlyDNOXoqjVSc3Xsczpmkd+9SCSizqRUdGG0voONLR0
wtxuQWWzBZaeQczOWdcnz+v7zoTRzbnkZxI/l6h1lPKkOgNzUtLbZ+q2oVv/
bNGO3oVz587jtddei/SpIiGEEEIIIYQQQsi6I/seTzz1DGasx2DunlNdez0j
DkzMrp8v5f2O+rzMnLJJr58bXcNOtPc5wmanAjuU+D11am2qa51CWcMIDqS1
YM+hJuxLbUFsdgsyCk0ormhRnpTN7lj2sWyTzJRNPFaXvl5sYb2pSP+bKepK
U6PK7VpVXqS524bKthGUNnairK4NlQ3tqGjsQFFNJyanZladlQr2mO2uhV4/
Wc+dg061pkPzvPxMotZPAZ6UfqyLH2XukU5JK3r186+jt92DUy+8FOnTQ0II
IYQQQgghhJAN5fz5C0Zuyn4LOvpsam9EvCnJTa2nNyXfUbe63JiyG3kT6UKT
fUBTl3XpXj+vtsB+EnUlyTh+mjpn0agrvciC/akt2CWZqfQm5Fe2oX9gBHbH
8j0p73E855kzZRkyeimVN+U9drl3TVErkjcrZeq2o63fBcuIG71TVlj6R1RW
qri6DbnVHfrPTkzOrHyu1OW+MyG9ftLPKbMQu0dcaOt1qDUd/JkU8rm0Bd47
6gpTu3E8NevHu/iwcsyLNyV/7hl24tht9+J3z52K9GkhIYQQQgghhBBCyKYg
XTGPPv6Uz5uS3JR0+k3LvCmXtq77gNLrJ11o4/PGfA+1t99t9eROwntT/J46
tTJ5Znd0zqK5y9j/q9Mvi80yY++hBiQfNqPOPLjqY1j81Qm7d86Uw+dLNQVl
KyL/PlDU1peRlZpXuZH2QTe6xzVM6p87M1Yr+geGUVbXifSyDlQ2DqB/zIZ5
+/p/Z2Le7zsTffrzy/w478yphc+lqZDPpUi/d9SVI+88qSb980KOd/GjTF3G
d4EGJ47glttP4HfP05MihBBCCCGEEELItYd4U7P2W9DaM6/2SjoGHJiYc8G+
zt6Ub76HXcPwtIaeURdae2WPJnj2PHv9qJVroSfJ+510m8pjZBZ3IqOgFaV1
A7AM2FY9R83lNnopZWaazKYxdc979q/Z50dRK5E309jSZUNrnwuWUQ2Dc5r6
fJB1NmO3o7l7ELnlnfp6nlGfE33jTsw71ncOojyWzdPrN+6Zhah6/fTPwZau
4OwUP5OolcrjScl3JSzz6nPJ+Gyyom/UjfseeBhnzpyN9CkgIYQQQgghhBBC
SMR4Ujr9rEfV3pt0lMk8+JFZl5qrs57elDc7JfuAo3Oyv6+ha1gL2+tHb4pa
vha+k+7d/5Of8veRSQd6hmzqmDL3zGFsxrXqPKD0f0379/l1W4O8qSkeqxR1
GRmdZvP6ejSyUr2TGsb1deXweEWSYZp134qxKRu6h+wqmyhrTdbcnHt9vSmf
5+w2vjMhvX49oxra+51hev34mUQtV9ML35Xw5HflmJc/9425cP8DD+HixYuR
PvUjhBBCCCGEEEIIiSgXLlzAU08/g1m74U1Jl1FbnxUDkw6VEVlvb8rhyZ5I
L9rIjHQouX37/Et5Uw3tkd5roraafD1J6jvpc769P8kzHbnlLjx98lk1U761
e1ZlLyxDDszZV7e3bWSmjD4/6aNs77erXIV/7xf3rClqcXn36mWfvrXPic4R
Nwb0z4AZzxoTf2jCpuHoHSfw3POncPzX96N/zKHWmFlf0x0DNoxb3bC71t+b
8mWnZO7UpFvNnWrvD507FfyZxM8lyl/eY8P/uxLymSQambpZ5aTOnTunupQJ
IYQQQgghhBBCrnXOnT+Pk8/8DrfccS86++1o7pxR3tTgpFPtxa+3NyX7gLK3
KHOnZP780LRbdfsZe/1zvr3AUG+K/hQlmg7wpKSzzyuZk3b78fvVvvaFixfx
6GNPY2J2IQ8omanV9lR6+yilz69n1KnmsoXr86M3RVHBMtZHk8o/2dE+oP83
f0LDqP7ff5tnbU04NMy5b8WDDz+uPpdeevkVPPDQY5ix36pmucnnQtewAxPz
rnX3phbWt6YyW5LplXly8p0JWefGPMQZfi5Ri0odBx2G9yqfReJFeT+Xpu23
qeP69OnTET7bI4QQQgghhBBCCNlaXLp0CS++9BJuP/4gBsbdavZTu/KmPBmT
DdoHtOqPO+0wZvcMTBr7gDKDXjyEpfYB67kPeG0q6PvoC57ULHpHXbjljvvw
0ksvq+NZkO+m33PiEZWXkr3lnlE75mxrO2YlVzE0bcyjaVl0RtoWeK8oaovI
O1dK9urNvQ4jKzWrYUpfS05PVmpQX1O33fUAXnzxJd/n0quvvorHnjgJq/NO
mLtn1edC94gd49I161z/PK/6zoTHn5LslvR29o651OxFc4/tMt+Z4OfSNSuf
JxX4PQn5XJq03oKHH30SZ89ynhQhhBBCCCGEEELIYpw9+yruvvc3GJxwq54y
+a54/4QD0/Id9Q3YBxR5u/1kxsfIrHT7eWbQe76nrvb7+R11KuD76LO+fT/x
hnpHnDh2x30Be9pepM9vfEbzzJmyYmrOtabjVfIdsmfdP2HMomFmiqKWkM9H
nkNLt011+HXrny+j+hqa9/z3f9ShYdZ5DI8/+QyCG85kFo/kH+cdt6Gjz6q+
M2EZsmN02oX5VfZyLsefsnk86PF5Y/ZU94gbbX22y35ngp9L15YawnwuSa9s
a68Vw1M349HHn1L+KiGEEEIIIYQQQghZGtlDufe+R9A7bMzQkX24jgH7mjrQ
liP5nrp0+43NGXkU1e2nslOX6fbbAntT1EbLk0eS/WD1nfRZjyc1q2bJ33XP
gyrvF44zZ87ivgceVY/TrHJVdsxa13asio8qXV9yjHr3qelNUVSofFkpy7zK
SnWMuNE/o6nePvGlpvW11DPhwiOPP4Pz5y+EXcOSf3z55Vcw57jV503Jvn/P
iJHndW5Anlfk7e6c9MxDlNlyFs93Jrzz5RbLTvFz6WqXN7vr70nNqs+Yjn4b
pm234umnT6oZnoQQQgghhBBCCCFkeUhu6tHHnsL0/BG1/yaZFOnXG5hwwerY
OG/Km0eZ8nT7iT/VO+aGZVD2/62L+1Oy/xnxfSpqI+T7PnqH4UkZmlHH5cCY
Hc8+dwoXL15adJa87Gk/f+pFTMwegbnb+z12J2xr2MsWD1Xm0Ej3ZMfAQp8f
vSmK8lP7wrydFv2/3619LvRMuDFs1TDt1IzvIdiPwHn0OF548ZUlP5Nkfb/w
4ku4/c570T/qUGvN1G1V2drJWTccG/idCe/sKclJGrOnvPkph2/2FL2pa0fe
z6TAz6UZpc5+K47ddq+ab+jtkyWEEEIIIYQQQgghy+PSpddUzuTxJ56G88gd
6Oi3qr231h4r+sbsmHFs3HfU1b6/y9gHlB4lNedjWvr9XLAMudDaa/ebQz8V
tkeJ+4FXidoDv5Ou9gB1WQZs0I4dx++ef0H1fF2OV8+dwwMPPoKeYYfys6QH
bHwNfX4u7z611dvn5/DLTU0Headb4H2kqAhI9u2NDMk8zD12dAy5MSBZKf2/
6zOyfiSHNHcUTzx1EufOn7/sOpa1/vypF/Drex/E+MwRtc7EE+7U/3swOu1U
a3IjvSmZhzinP4f63sSc4Ut3j8j8KSM3aXwuTYf5XJri59LVIu/vtCP4c2ka
Y9NHcOL+R/DK6TPrcRpGCCGEEEIIIYQQck0i3tSrr57D7557HtrRu9A1aFN7
bqbuOfSM2jE86YTVsXHelOz9y+wRybXMevwp6VLqnxB/yhngBSyWoYr4Hha1
Lvt/3u+li6c0NnNU9fbJzJnFMlKhx/IlnD59Wj+WDI9VzaQadqxpZpo3QzFu
NWaiSZ7Qm5sKzkzRm6KuOfllpUwyV6rfiZ4J/b/hdk1194k3NWK7GXbtOM4t
0t8XDvGmpNPvNw8/jrH/3959cDWxfX0cf//v4flfC50khB5ILzMZBAQp0qV3
EATpqPuZfSYTkhBsgEH5ftY66+otEMlkzl3nN3vvqCMv3e9heqe1pyUcyUlf
4n7z4360J+nnPlv47GvNZG9h/lSwxzK1W/WhjLlP0Xf2X1wl72PhHq/XX2Mo
JbmBcVle2XD3GTIpAAAAAACAh7Kzuy/vJualNzYor1q9fED7oXVEchJP5x91
7pSfAWh/P5NPpf18yjHngN6sj2p5AM+n/72rPJP6n6mLSJiZHfOLq7999re7
ty99ySF52RKXhra0dMdsse9R96fXZUJnTSX0XDrvXosZ+vmxWA1VaqW68tKe
8PKo/rzXyy9uj8r2zu5v9TvTXrOLS2uSG5iU1o7CLMRASlrcX/dp7VTOuddn
+2cyKi+f8np6Ror5lC2N4fK5iGX3gifw3rB+Z8VuPSuh9/lAZ04G3065e8tH
ZkkBAAAAAAA8gqurKzNzKhJ/Y/qo6dm+5kGtXTnTE+2xsylducI5oPb30+fU
NZtq7fJqp/Q5da2fusmoouQBf+Eqqy0o9EnSuVDR9LCsbeyY6/B3aa3F+Ps5
CXXnzHWiZ9iaddr3uCY1L9VZOV1xx9Tx3fTzK2RTjWRTrOe1/lc6VyqQkYZ2
26uVyjnSb2udlCOdCUfejLz/qT6cd9F6ybPTMxkcmZL2iC0NwVRx7lS4z5JE
5nH7zZbeA3Rf6s969wGdidjUnjPzp/S1vCrJqLgX/H2rck/S9bI1Lm09lgyN
zJha3J+t3QUAAAAAAMCv0+eBta/f6Lv33jPqLQnznHpjOCPd8fy9+qL9ynPq
Oucjqn2gEjrjw+ujFujRXEDPA296KZX2+Kv12RbreysmZT2SCsv053KvrWh6
0Mw7ewja/y8/OCl1gYSpaQj1am3F/a5HPZfWM2mdN6Pn0f78sxd+rQTZFOsZ
Lb3O9fp/2ZqSulBOmrttaU96mVRvzpFQv85pGpPV9a0H+UxrNrW0tOp+jofN
fV+fmfA+2zn33pF/1Lqp0mcmdPaU9pvtjHnPTIR69bmJvDR35IsZVWlmzf3g
qa/be5I/0yzs7htTM0sPcv0CAAAAAADg+/SRYO25dHWl+dShpKwRed0aNzMW
6oLaQylnnlH/E9mUPp+uZ4BaN9WV8Hoo+WeBgW7vLLAxbJnean5GxTngE1yN
Jf2RStZr9z1LZIfN2fX5xeWDPY9+ff1FlpY3JBIfMNeEZph9SVty9zi79q5H
r8ekzj8rnTX1gllTrGe0/LN77eGnc6UaOmyTQ2mtVJ/7GdFefj3JQZmYXpSz
s4eZxaP3Bq27Ojk5k4XFNWkMJtw9yev92diWkY4+y/TcfOx9Sfv6aS2vzpzr
SXr5lHluok/7+znSap6bsAsZVaqshqrW7xurYlXZk3TGYWMoKWOTc+b5Bt1L
AAAAAAAA8GfpOeD2zr6Mjs1KT9QpPkfc0pGRcG9WInFbMo9YP2UVnk/Xc0Ct
nSpmVPGbjEpn/rR0Fs4BC/3VKjMCzgRruapnUuGenIy/X5CDwyO5vPz9vn13
+XxyKuNT81IfSJhrtq3Xm5OWv+esKb0e9RoMRfKFbCpRJZvSM89a/9xZrIdf
fp8zM1fK/VzVt1nS0ps3tVI92uvSvUeH+x0ZHpsx5/oP7etX7et3Lgs6dyo/
avrNmuw5mJJQd1Y6+3OP2tvP1E7a3hxE7e3Zn7udUd08N2EX6nqTt+cisi/V
eN3ek+qDSXePGJKNrT05OT27V/9JAAAAAAAA3I8+L3x0dCxzCyvS1W+buqmX
Zr5HUprb9Tl177w/ZTmPchZoFZ5RT5dkVNpPTc8CNZ/ye/zpc+rFWR8thTqW
5op59P7S89Wan4s9l3Xzc9fsprEt5b6fYzL3YdVkR49p/+CTRJODhZ5faens
sySdvV+OmivUS2h/yUC3I3Xu9eb39Kt29lz7nz+L9TCrWFNi5kp5tVKNHXkJ
RR3p1LlL7gr0aWYzIju7B4/2udbaqYvLS9nd+yjO0IS0dmS8Zybc11QfSkuw
Kyu9MUsSWc2QHv65CbtwH/BnTmlGFc15z034+ZT/zITWTnn1vMmb3p/f2Zdq
/R4/m1XWSzbm/r+NI2/HZmVza9dknwAAAAAAAHgadPbP3IcVSVnvpLMvLw0h
f/58UoLdOenotySaerz5U6VngZpPxQr1U/78qWCvU5zxoeeAWjvlnwXenAfe
ZAf+PKCan4/966vwc24IpqQ39kaG383K3v7BH+mPpN9D6/38miatb+qJ2ve+
FvU61Po9ve501plea9WzKa4x1r+ySvLlZr2npqQhnJdW977bnnJMD79wPG/q
p1Y3dkwf2D9hZ/ejjIzNSl9yWEJdOe+5CTOzLi1tkZz0xGxJZZ1Hmz/lPzfh
51NaP6X1lH42pbOnNJuqD2W9ZyZK9qRb+xL3iz+3Cj/rQGdW0u7/08wvrsrJ
yckfuWYBAAAAAADwa/Q59dPTM/mwtGLmTrW0ax8z7xxQz+ZbuyzpjeclnXMk
9wjPqfv5lDkHLGQDft2UngFq/Yr29NOZU/VB7xxQX5efUWkdVel5IM+rP/56
0RSVpra0uV5WVjf++PV6fn4h78ZnpNW9VvU6CPXkJJ67/zWo59Batxfu03Pn
HNkU659epbVSpn9fKCfN3Xlpi3m5VNj9a0dsSGbml80zDA81K+5nXF1dyd7e
RxmbmJFwJG/6sWmN5CvzOjPSFrFNbz99ZuKx8inNqrWmN6Ez6LJe3ZT2mtWe
fppNaU8/v563bE8y+1IhpypkVJX95diXHv5a1mcVgu7/r4yMTcvR8ec/dq0C
AAAAAADgfvS8X3v7hbuzhXP4qDlXqwumJdBtSW/SMXM4HiubyhTOACufT/fP
AZvC3jPqpnZKzwL95Z8JFs4Bi/VTJc+rV65an6P9res/k0kl5d3ErOkFWQs6
I2Rnd0+iqSFzXl0fSpk6itQ9c1N/zkwk5WVTzR03883Iplj/0ipmUoW5Un7/
vtaII+0JrZNy/xobkKwzLqenp/L169eafNb1+x4ff5ZsftS976TM/edFob9f
YzhnPqexrGMypMfKpvR5icpaXu0zG+y5qefVZybK9qWSnKoy29Y9qdq+9H/c
T377WtZnaXrc/1/Y2NySa2ZIAQAAAAAA/FX0efhLfU7946G8HX0vwc6MmdOg
szP0WWSdQx/usyWadSRte/2OHuMMUGf96PPpegZYmU3pOWBjm+WdBYay5tl5
PQ+sM+eBehZYMvOjyZt/9F+VRa7w66sukJCcMyI7e4dyfnEpX2p0Vm1m0bjf
XzNU7SP42r02G9rS0t5nPcjsmaRef2nH/Xpe3VS1s2WuH9bfuopZSFOhVqol
ZXr1Nfc40hb16qRCZqbUO1nb2KnJZ7yUZlNar7W4tCbJ3LB7H/I+h/p51H2p
pTMrPXGv3jH7CM9L6NdM5streTWb8uZNaT2v19fvZk+62Ze8jCp5cw/5iT2J
+8qvrU73/0neT3+Qz6dnps/rn6zrAwAAAAAAwMPRehTtg/NhaU3yb8bNjA//
2fq6YEqaO9IS6s1Kd9SW/rR3jv9Qz6v7/fxihTNArdHqit08o+719fPOAbW3
n54F+ueBJp8Kpgu1U8liD6Vqq/wsMPrdVetzt1qvUHdO3rx9L6vru3Jw+Mlc
H0+B1ve9n16Ujr68OfPV9z6SsCV7z2zK5KO2l01pPYbWZdzV06/W7w2L9Uur
NJNqcu+F7n2yLpiVJveeGoh4mZT+tSs+JJPTS7X+iJc5v7gws+XGp+Ylmho0
NTJ+/zbNpVu7Miab1ntA3Dw74Zhc6SGyqWItr/t1tZ5Sn5nQnn63npko2ZNK
96XSOVQ/2pN+Zl+q+XVU46XPyvQlBmRqdsW9Jj6aXsQAAAAAAAD4N1xeXsne
/oFMzS5Jynongc5M8dxMz9i8s8CsOQvsSzkSSzuSyjmStfO/fR5YfD7ddszz
6Vo3pT39/GfU/f5JXjbl5VOlGVXxHLCkh1Llun0WGJVqvf7K+is9swxCfyYd
EUucoSmZ/7Aqh4efan05VnVxcSET04vmbFrfb82QYkn3Wrpnv0nbz6Yy3tlz
Y1u2SjYVJZti/T2r5J6mmdR/zSX9+3rde2u/l0m1djsyNDorh5+e3mdeM/GT
k1NZ29iWoZEZ6Y0NSEMoWayf0prZpvaMmTnXHbMl6u5JiYyXUVn3uCdobbDO
mtJaXu0zq5m1zpsqrecNFLKp0j2ptLbX7++n96rv7Us3+dRP7Eu1vqb+8NJe
jtH0kLyb/CBr61tycXlZ60sSAAAAAAAAj+T6+trkUzpTqD81LIHOnHlW3T8L
1B56rZ2WBHss6ejPm4wqmXVM3cqv5lN2/mbefNI/B8x6tVOlz6hrNqXPqGs+
pWeBze03NVRlM6hKZ9DfI5t6Lv2VtCdem/s+RjNvZWZuUc6e+HPo2rPp48Gh
OEPj5n3Uc99Qb07imfvXSVh5rzeYn001tGW/29Pvf0/g/WOxqq5CjuHXvf5n
Mpy0NLj3zBb3Xhrs85ZmVClrVNY3d558P7Tzc6+3nz04KZ19A9IYSpU9N6FZ
ss5FbIvY0h13JOZ+jlNa2/sb+ZT/vESqUDcVLcyb8rOpYj1vl/fMhL8v/e4z
Ez+bTT2HPUlXczgtXf0DMjD8Xja3tmt96QEAAAAAAOAP0jkf+qz6+OSc9MT0
HDBd7KXkzfpImrO31i7b9D/TMzvt8ad1J1pDZRXqqPxlFVausLIlK1M4AzTZ
lO09ox4pPKPuZ1PmHNDkU05ZPlV6DnjzjHqybFWeBVab8fGczgFfNEWlIZiS
WHpI5haWzfv81M+lfTrnfmfvoySzQ2YGWkNbRjqjlqmReJhsyrv2vJ5+P8im
/tHrg/WXr4qZUq9a09IQtqW5Oy+tWiPV65hefuGILcsrW6ZW9m+hr3Vjc9vd
N0alpcO97weSps+bfi71c6p7gOZDoV5bOmN56c94e5LOSMzdsSfdtS+l/Wwq
7/Warazn9Z+Z0H6zpc9N+POnGkK5smzqrn2pel+/57Un6Z/rZUvc3dOzMjgy
Kdvbu+57TX0UAAAAAADAc6RRheZTOs9haXlNUrmhsnMk7yzQ76dkm+xInyfX
s7tozjFnelqDkiqc8fnnfHetRCGXilnl2VTpM+raQ8mcBZbkU01h+9Z8Dz0L
9Fe1c8DS2qnS59X/ewbngKGujMzMLpn39evXvyOPKqXnlXo9dvbZJptq7shI
T8ySrPUw2ZT2ldRZZ1p70dTuz5uqNqvs37w+WH/xqsikXrakpL7NkibNTdx7
p9ZLNbu/DvbkZW5hVc7OLmr9cf5lmqFfX38x/UbHJmbMTDz/z2+emyjUUPnP
TejeofW3WvOUsG72pbv2pGTFr/19qbTXbOXMqZt86vZMxPpg9s49qdocqvJ9
yduTKvelml9nD7zqAnGJp4fMTEOt2f5bnpMAAAAAAADA49FsSp9TP/x0LIvL
G2IPvDO9dvxzwOKz6mYOVUZaTJ8/r46qQ88E496ZoGZVmjfp+V7l6i/5Z2am
R8Y7/9NcSs8A/dkeZdmUngNqH6WOwoyPwnyPm2yq9Cyweu2U/6x95br1nPoT
OLu7z2ppT0v+zZgsrWzK/sEnOb+4NO/r30hft/YcHJ+cl3Cv5b7XSfcayEok
bt87l/KzKT2/jqT0mvOzqcq6qeg/fU7M+jvX/0pyqRctSakL5Uy/Ps2j/Eyq
vc+b2XN1dV3rj/K96Pyps7Nz2d7Zl/H38xJJDHg/gwYvy/HreuvMcxOaUXl9
/trdfakz6u4viZI9qdq+lLvZl8yeVOgx6+dSpXVT/r5Umk3pMxNlff0Ct5+Z
qNyXbvKpn9iXCn/WWl9z91kRd1/X+/jG1q4cHZ+Y95RICgAAAAAAAKX0GWbN
p3TGz+zCqlhvJqSjz5LXrTezTPyzQD1zqwumzZwenUfVFtHzUO8cT58z1zM9
zZz0jK+4kjdZlJ9H6b/n10tV5lKlPZQq53toNlU8BzSr4jn1lsJZ4K0ZHyXr
Vu1U1FtP4DzvZ9Yr933pdN+fwZFpWV7dlgP3fbu8uvpnnkXXbGrI/bPpDDQ9
3211/5rK5sX+jZkyd/X003y0vT/vZVPudURPP9bTXTfX4otmfU4gI43t7r1R
c5Jub56U3jPfjMzU+qP7oDTL0F6kG5s7MjqxYPqTtra7n9XmWNlzE2Zfcj/D
9aGM+TwHu71nJ/w9SfcZ3XPK9qSKfUn/uXlOIn5TL1XteYmyet5qsxBL9qRb
Nb1a5/bT+1L0r9qXtIdsc9jrITs1tyqbW3vy+fOpeQ8BAAAAAACAH7m6upL9
j4cyN78s9psJicTfeGeBLTdnZn5O5WVUGWlsy0lzh1Wop8qb8zz/TNCcC0Zv
fu2v7+VRlc+m67wpf7aHfwZY7RzwX86m6oNJ6erPSyI3IsPvZmVhcVWOjj/X
+nJ5NJpNvXk7beoL9L1t7rAlmb1/LpUvzKDRfl/9We/MOtCdN9fTd+eUPYFr
gPVc1819V2dK1bfZ0tjhSLNmUu69sT6Uc6/nMdnb/1jrj+2j8Oso1ze25d34
nKSsEWmP2FIfSJTtSaWzqBrcfaIpnDP3De35F+r1np+4tSeV7FPtd+xL/p5U
uS+V9fR7zGyq5tff3SvYlZW+xKBYAxMyMf3BvEdkUQAAAAAAAPhderZ0fPxZ
Vtc2ZHh0SqLpYQlH8tLSnjH1OpUZ1avWROGZ9aw0t9sS6LJNz79QT96c8bX1
Fpae90Wq9O0rzJcvro7Ss7/b539as/XDM8Af9U+q0tPvKZ0B6jPojaGUdPQ5
Yr+ZlA9LK7L/8eBZnPvpfKyV1U3Tw0vfO33PA12WJNIPl01l7Lzp66W1e5qn
6vWl186d2RS1U6waLL9/n86UqgvmTBbV1OllUvp7y703aM+753BfuLi4kN29
jzI7tyQ5Z0y6+t+YOVQNwWSxjqpsRmLJsxOtne6+1G2bz7rmVP4e9NN7kv+c
RJVM6nYu9Z3nJb7Xa7bKHMSntCfp63vVGpeA9ldNDMv45Jysb2yZujYAAAAA
AADgoZ2fX8j29q6MT86a2RGNobQ5nzJna36mUzgPfF3oq6TndHpu19Jpm7O8
8jM+p3jG55/z+UvP+4qrMFvKmzNf/Xn0avPmq8+cL11Pb46QPhuvWZSep9YH
ktLWnZOBoXFTv/YcnbnX3OLyukTiA+b91CyyrScn8dTDZVNZd8Usr4eXnlXr
dVZZN1WZUdX6OmE9p1Xo32fqgDJerVR7vphJJa1RWdvY+etnSv0OraP6/PlE
lpZXzWzEcI8/L65wf2+omJOoe0bh2YmmsFXcl1o7nVvZkz/b8GZPKt+XintS
WR6Vqpgx9b1M6sd70lO51+i+pJmfPnvSEk5Lf/KNTM0smGcHAAAAAAAAgMek
s4v0HPD6+oucX1zK3v6hjE3MSDQ5IC3hVMU51u3eSmZOfSGn0rO8htDNc+bm
9yXnfPXBm159/plfWX1UlbqoylU9k7p97qdnbrU+9/OXzvPqjeVl5N17WVnb
MLmMnjfrz/25MtnU0pr7c3Hc6yJdzKYeqm4qX8im4pY3Z6YtYpvZaX7dVOX5
8VM6L2b968ufKaX1qCmpc++ZDWHbLM1JemJvZHllwzwz8FzpvqR1YnqfPP58
Iivuz8NyRqQz4n6GW8o/p7drfL15ifp5N6tiT6rcl0r3JL9mt7gv3fFsxF37
0o/yqKeyL+lrawolJWu/lemZBXffPzCzKJ9DbR4AAAAAAACeHj2XOj09k4PD
IzPjfGpmSVK5IQn3ZE0d1d3ngTdngv6qfMb8Jn9KV33+/K78qXz9oDfSE+iP
9KI5amZ3pa1hmZ5dlvXNXfl4+Mn0RNKzP3iurq9ND0OdddYQusmmUpm82PbD
ZFM5dyUsR3pTOl9G6/dypv7hezOnan1mzPqXV0UmFcyaWilvWRLuzcvc/JKc
XzzfTKqS5veXl5dm7p7WmC6vbsnQyJR733BuPTvxf8U9KVrYk26en/jVfel7
dbp37klPeF/S5yO6+20ZHHkvS8ubsrN3KJ+OPsvZ2Tl5FAAAAAAAAJ6ML1++
mjOr7Z09WV7ZlImpRckPTkp/alDaerLmTFAzGP/cy5vnXl5T5S//DO/Xnjev
vqqe+ZXMk/+TZ316BlkfSEhPNC/xzJAMjczI1NyqLCyty87uvvn5Pee6qJ+x
sOhlU68DSZNNBXssSeUerm7KclfSdqQ36Uh7v/aZzJlzaGZOsf7sKtwbC5nU
a5NJWV4mFbIk1G3LwNCEue/ibtfX13L46UjWN7dl/sOqDL+bk7Q1Kt39eQl2
Zsz9uPTnXvqZrrYv3bUn/cq+9KM96U9nUi/dfTnYmZW+xBvJuD+byellmZlf
k9X1bTk8PDI/QwAAAAAAAOBvcHV1JYeHn2R1fVOmZxdlbHJess6E9CWGJNxr
SXM4Zc4Eq53pV57X/ehsT593L/17/zXWPpMy8zhaYua8T+t6uvocSeRGZHh0
Rj4srcrG5rapNcOv0dxu0f35+fOmGkJZ6ei3JZNzHiyb0plTKTsv/e7X7Irr
zCnnjplT0bL+W7XPMlj/yvIzqZctWqPjZVLaw0/zqdbOnAyOTJFJ/SK9d2j2
v7O7JwvuPWRyekGGRqYlntWcyjH36saQN5vqrvfke/vS7X9+sy/91/id2qg/
uC/p7MKGYNLsSboi8UGxBibcn8UHWVndMM9HMDMKAAAAAAAA/5Lzc62n2pWZ
uQ8yODIp2fyodPQ5EujMSUt7RpratDdSwpwLvmj6+TM6v/aq+PuG8t//3yNl
Bvp99XXq620IJaUxlDJ/jrYeW7r630g0NSxjE7MyNTMvS8ur5rl93N/x8Wf3
Glo0z/drTtTY5v7Me60HnTel2VTW9mZO+X39Wjos07PrR7Nhap1psP7uVZpJ
vQroDCMvj9K6Pb1Xjk4syAmZ9oPQnnTa829ldd3cq53BcYmmhyTUbZl7uS7N
cbQv7ctm77P+8+/j3fvSY94n9DXqa60LJMye1NiWMtdNe8Qp5FDjZk/StbW1
LRf0gQQAAAAAAMAz8u2bmDlKyytrMju3IGMT05LKDUpvv216LOm5mj/3w69N
+e8P9+Ar7zfovYYXhRlZWu8V6spIJJqXN2/HZHh0QubmF+Xw8LDWP9p/mp4l
a3+pmdlFUzelM6AaQhnp6LcklX24bMqfOZWyHenLONIZy0ug25KGtmzVfKrW
fSJZf//y7jOaSSVNJuXlURn312lp7cjKu8kF+XR0UuuP4D9Na3339w/MnqRr
YGhMoqkB6YjkTD/al4U96cWtmsk/04PPy7eiJbXB0eKMrJctcWluS0lHb1bS
uSGzJ42+ey9r6xvkTwAAAAAAAECB9lbS+RV6FnhxeWn6LGl/O60H2Ns/lM2t
XVle2ZDRsWmz0tawdPdbEuxIS0MwbtavPMP+M+s/0+vI+9rBzrT5fonMoFjO
iFlT0wuys/tRjk+816mv9/ziUi7cpX8O5sI/Pv0Zf/qk2dQHCXXlpC6QkqZ2
L5t6yLopf+aU9vWL5hzpTjjSFslLc4flfs+06e33vWzq/8imWD+7CpnUC82k
WtMml/Lqpbx6wJGxWTk6JpN6bN++fTP3F72X6zo/vzD7kt7r9eeve5IuzcV1
T3rzdlz63PtCe09WmtuSZt943frw9VCv3K+pX1u/R9j9XpG4Y/ZD3ZOGRidl
cWlNjj6fyefCvqSv+aKwL127fx79cwEAAAAAAAD4Pj0b1Mzq8vJSjj+fmPXx
8JPJhDa39mR9c9es1fVdWVnblYWlDZmeXSlb4+/nZWRsRoZHp8UeGDN/1d/7
a3R8VqZml4v//vziuvl6/tfe3No332//46Gp0dF1enpK9vQEmB5cR59lYGhc
2iO2NITSUh/KSKgnJ6lMXmz7Yfv6Zdyvl7AciaQcae93pLXLMt/vVWvy+7Nm
ap13sJ7+0uvE1GEmvP59mku5qy6YNv3XtMfcxeVVrT9yz55mO7on6To7PTN7
0qejY9ndP5TtnX3ZKOxLqxvenqRrdn6tbE+amlk2GaPuP2+GJ2VgeKJsT9I1
MbVQ9t8srmybr6lfW7+Hfq/d/QM5cPdD3ZO0FyH1UAAAAAAAAADw+PScWHtB
zs59kEhswGREepbf3G5JPJMX6wGzKX+l3NWf075+jgR78tLUbpu6qe/19Xus
GWesf2EV+oQ2J4q1Ul42lZK2Hkvejc/W+mMGAAAAAAAAAAAK/F6Q2scqkhgw
+dDrQFqa2nMSSdmSfeBcSlfaXTGtnUo70hF1JNCdN/3WNBcrzafK+/pRO8Uq
X8XZdYVMSvMoXfrrcK8lE1Pzcnl1XeuPGAAAAAAAAAAAqKBzYBaX1002pZnQ
q9aEmTnVG7fMjKiHzKW0r19O8yk7L7GcIz1JR8J9drG3X2n91K1syp899QRy
EVZtMymTXzbrTKmEvNRMs8VbidxbWVhaM3OCAAAAAAAAAADA03R2fi4rqxuS
dcakPpgy+VBLR0Z6YrbEM86D103p0nqslO1If9aR7oQjbRHb1Gpp/dT3syl6
+z3X5WVS8WIm5edRr1tTEk0Pu9fwpslZAQAAAAAAAADA0/blyxc5ODwUa2BS
Ap05ed2alIa2jLRFLEk80swprZ/KuCthOdJX6O2ns6e0dup1SW+/qvnUE8hJ
WLXMpLxaqeb2nMSyI7K6timXl5e1/hgBAAAAAAAAAIBfcHZ6JkOj0xLozJqe
fnXBtIR6LYmlHyeb0mWV9PbT2qlwnyMtnZb53v7sKWqnnu8qy6SavUxKr81g
d07yQxOyt/9Rvn79VuuPDgAAAAAAAAAA+A2aTb0bn5P6QNxkQq8DaWnuyElf
whb7kbIpv34q5X79voyXT7X3e/VTjWHru7VTtc5NWI+XR/2vqZBJmVwqUVhx
CXZmZHp2Sb59I48CAAAAAAAAAOBv9vXrVzk6PpG5hRVJ5YZMbYrWLTWFM9Le
Z0nskWZO+dmU1k4ldfZUzpGepOZTeQn22NLcYZtZQt+fP1X7PIX1ECtWqJO6
qZXSv/7PXd39tnxYWpfzC/r2AQAAAAAAAADwL/jy5aucnJzK0vKaJLJD0hBM
ycuWuNSH0hLqyUlf0n60vn52obdf1tb6KUeiOUd6U/78KUuaOyz3dWTd15Ng
/tQ/uWLFWqnSeqn6YFqy+XeysrYl5+cXtf6IAAAAAAAAAACAB6R1U9rTb31j
W4ZGZ6S9L29qp14HUtLSmZXeqCWprJchPWb9VDbv5VM6fypSzKe0v1/O1E9V
z6dqna2wHiKT0qV5aMjMkpqUnd19+fLlS60/GgAAAAAAAAAA4BFpfcr76UXp
iQ5IczhjeunVBdIS7stJLJN/tNqp0pUtzJ/qzzrSFXekLeJIU7slDW05MwNL
ew1qRuX1+YuSTf1tqzRXLGRSmoN29Q/Iu4l5OTz8VOuPAQAAAAAAAAAA+EMu
Li5kY3Nb8m/G5FVr3OQ/r1uTEujOSl/qz2RTViGb6ss60hlzJNznSLDXkdau
vJk/pRlVXTBTVkNV87yF9cNVrRejl0nlZXl1q9aXPgAAAAAAAAAA+MO+fftm
5k59/nwqYxMzZuaU1iVpRqVzp9p6cn8km8q5K2E5Ekk70pP08qn2fq9+Ktjj
SEtnXprabTODSuuoNKPys45a5y+silVtNlij17svmx+Rvf1D+vYBAAAAAAAA
APCM6dypk9MzWVrZlER2WBqCyWLtVLAzI139liTSj1s/lS1kUzF3ae2UZlTd
iUINVb8jod68BLq9GirNp16Z/n6xWzVUZFW1XLfzqPpAQvqTQ/JhaUMOPx2R
SQEAAAAAAAAAAOPq6kpW1rbEGZyQcE/OZD6a/zS0pSXUlZXeqCWpnCMZ2xH7
keqmMoW+fppRRd3v1ZdxpDdV0uOvxzHZlPb2e102fypWXNRS1SaT+r+ynn1x
U283MDwpG1u7cnl5ZerzAAAAAAAAAAAAfJof7O0fyOT0B4mm30qgM2vmAmn+
0xjOSLjPku6YLYmM82j1U1ahfiqlNVS2I9FCj7+uuJdNad1UU7tlZk9pX79X
hXzKW/GynIqM6g+tws9Za9ha29OSdSZkanZRPh4c1vqSBgAAAAAAAAAAT5z2
Wzs8/CRv301JZ58j9cGUyXw0A9JapbaIJbFUXrLW4+ZTWj+VcFd/zps91RH1
5k55Pf3yxZlTr1tTZunrK82p/Iyqsr9czXOcf2zpXLK6QFLaI3kZHJmQ09Oz
Wl/CAAAAAAAAAADgL7S3ty8Ze9TMCvLrkDT7aWrPSbjPlqjWTj3S3KlcoW4q
Xpg75WdTXt2UIy2deVM3pVmZ6e2nGVVFTvW9Xn9kVfdf+rOrc68NnU22vbNL
vz4AAAAAAAAAAPDbvNqpI5mZXZJoarCYRWj9lM54au7ISHfcmwuVe4Rsyu/p
F7O8eVPdiZtsSudNaTbV1G5LQ1tWGkJZU0NVllMV8qnKbKpyeflU1KxaZz1/
04rEB2R+cVVOT8/NtQIAAAAAAAAAAHAfmjecnZ7J9s6+TEwvSio3LI1tKdO/
TeuRGtrSEujOSEefJZFEXuJZR9J2XuwHyqa0n19SZ03lvFlTmk11xrxsKtTr
SGuX9vWzpTHszZ3yl59RVdZOVVu3a6mi1dcTyIJqvbQ+Kp4ZlPH3C7K5tStn
5+e1vkQBAAAAAAAAAMA/5uvXr3J+fi5bW7syOjEvvfHBYn8/rZ+qC6akqV3n
T+VMDVUs7Ugi40j6nnOotE9gWmdN2Y6ZNaV1U9rTz8+mSmdONbfbpn6qMXyT
U9WX1k4VZk9VrtJ8qlqfv1t9/55hXdXr1rh09w/I23dzsrG1bbLKL1++1vqy
BAAAAAAAAAAA/7iLi0tZWtmQjDUqoa6cqaF50Xwzf6oxnJVAd07CEVt64o7E
Mo6kLEdyv5FP2SX9/DSb8nv69aYc6XK/dnv/TTaltVPa208zqtJ8qlrt1H2z
qefQ80//jJpHdfY57nswJguLq3J+flHryw8AAAAAAAAAADxDJyenMj2zIInM
oAQ6b/IpzW0039E6Jc2HQr156YzlTZ6Uth3J6DyqQq+/ymUVVq5kZQv9/Ew2
5c+byt5kU6UzpwLd2tvPqcinvNqp0mzqZt3Op27PnvpO7dQTyI8ePo/SfDEu
rR1ZM1dMa+Surq5rfbkBAAAAAAAAAIBn7Nu3b2b+1PX1Fzk8PJLRsRlp68l6
2UYh39CcR/OfhrasBLrypr5J+/BpRpWwHNOjL1Xo1eev1HdWorRuKlt95lRl
PnUrmyr09fPW7Yyqcu6UztIqrmeQTTWGkpJz3rnv6Se5ur6Wr1+/1fpSAwAA
AAAAAAAAKNJ86vT0THZ2PsrUzJKpoXrZclM75edTdQGdQ5WTQLcl4b68qXXq
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
AAAAAAAAAAAAwF3+HwvcmHA=
    "], {{0, 791.}, {851., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{851., 791.},
  PlotRange->{{0, 851.}, {
    0, 791.}}]], \
"Input",ExpressionUUID->"a53b52c7-e928-4c7c-9138-1de78dbbf743"]], "Text",
 CellChangeTimes->{3.944619538451272*^9},
 FontSize->14,
 CellID->1997995669,ExpressionUUID->"82104a12-7c1c-41b3-9f1d-cc818f2c144a"],

Cell[TextData[{
 StyleBox["TrainingProgressMeasurements", "CodeText"],
 " and ",
 StyleBox["TrainingProgressFunction", "CodeText"],
 " are options used to monitor and customize the training process, while ",
 StyleBox["NetTrainResultsObject", "CodeText"],
 " is the object containing information about the training results."
}], "Text",
 CellChangeTimes->{{3.944619551490184*^9, 3.9446195719510736`*^9}},
 CellID->111420744,ExpressionUUID->"556048f2-3a85-450c-9dcf-547da5e08e15"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["NetTrain[net,data,All]\t", "CodeText"],
 "gives a NetTrainResultsObject[\[Ellipsis]] that summarizes information \
about the training session."
}], "ItemParagraph",
 CellChangeTimes->{{3.944619564678074*^9, 3.944619571966074*^9}, {
  3.944619604643972*^9, 3.944619605015003*^9}},
 CellID->42704224,ExpressionUUID->"cfc87b65-90ab-4d43-b04d-bf1f049f86c6"],

Cell[TextData[{
 StyleBox["NetTrainResultsObject[\[Ellipsis]]\t", "CodeText"],
 "represents an object generated by NetTrain that contains the trained net \
and other information about the training process."
}], "ItemParagraph",
 CellChangeTimes->{{3.944619564678074*^9, 3.944619571991167*^9}, {
  3.944619614811037*^9, 3.944619615096648*^9}},
 CellID->2007057266,ExpressionUUID->"2e3bcb92-ba98-4a99-9785-cd993f5a6d06"],

Cell[TextData[{
 StyleBox["NetTrainResultsObject[\[Ellipsis]][prop]\t", "CodeText"],
 "is used to look up property prop from the NetTrainResultsObject."
}], "ItemParagraph",
 CellChangeTimes->{{3.944619564678074*^9, 3.944619572002437*^9}, {
  3.944619625013309*^9, 3.944619625407649*^9}},
 CellID->326669783,ExpressionUUID->"3466f98f-35cc-4f00-84ee-ffdc70bbad8a"]
}, Open  ]],

Cell["Properties supported include:", "Text",
 CellChangeTimes->{3.944619640264803*^9},
 CellID->1812170925,ExpressionUUID->"c9804898-a66a-4bb0-8b3b-1addd5fc081c"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]ArraysLearningRateMultipliers\
\[CloseCurlyDoubleQuote]\t", "CodeText"],
 "an association of the learning rate multiplier used for each array in the \
network"
}], "ItemParagraph",
 CellChangeTimes->{{3.944619655708166*^9, 3.944619681869707*^9}, {
  3.944619716415491*^9, 3.9446197221246777`*^9}},
 CellID->1411103760,ExpressionUUID->"78c76c88-77d4-44ab-9fea-1f142f469a70"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]BatchesPerRound\[CloseCurlyDoubleQuote]\t\t\
\t", "CodeText"],
 "the number of batches contained in a single round"
}], "ItemParagraph",
 CellChangeTimes->{{3.944619655708166*^9, 3.944619683152817*^9}, {
  3.944619727375843*^9, 3.9446197283953753`*^9}},
 CellID->484091863,ExpressionUUID->"2c18b1b5-7899-4025-ba25-8b5024b0d43c"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]BatchLossList\[CloseCurlyDoubleQuote]\t\t\t\
", "CodeText"],
 "a list of the mean losses for each batch update"
}], "ItemParagraph",
 CellChangeTimes->{{3.944619655708166*^9, 3.9446196837120647`*^9}, {
  3.944619734454513*^9, 3.94461973535434*^9}},
 CellID->1082804842,ExpressionUUID->"d7e49101-7a10-4458-a3d5-c39ee5a2f945"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]BatchMeasurementsLists\
\[CloseCurlyDoubleQuote]\t\t", "CodeText"],
 "list of training measurements associations for each batch update"
}], "ItemParagraph",
 CellChangeTimes->{{3.944619655708166*^9, 3.944619684249584*^9}, {
  3.94461974696843*^9, 3.944619748006995*^9}},
 CellID->706222292,ExpressionUUID->"d5b0c65d-de19-4119-a454-9c8dfd2132e3"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]BatchSize\[CloseCurlyDoubleQuote]\t\t\t\t", 
  "CodeText"],
 "the effective value of BatchSize"
}], "ItemParagraph",
 CellChangeTimes->{{3.944619655708166*^9, 3.9446196848254213`*^9}, {
  3.944619752486682*^9, 3.944619753582346*^9}},
 CellID->1090342507,ExpressionUUID->"c253f0e6-626e-4a3a-8095-d386907cd879"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]BestValidationRound\[CloseCurlyDoubleQuote]\
\t\t\t", "CodeText"],
 "the training round corresponding to the trained net"
}], "ItemParagraph",
 CellChangeTimes->{{3.944619655708166*^9, 3.9446196853894033`*^9}, {
  3.944619759045533*^9, 3.944619759977684*^9}},
 CellID->617291555,ExpressionUUID->"c73feeaa-fe30-40ce-8ca9-1c63035b040a"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]CheckpointingFiles\[CloseCurlyDoubleQuote]\t\
\t\t", "CodeText"],
 "list of checkpointing files generated during training"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619685906661*^9, 3.944619685936611*^9}, {
   3.944619764697957*^9, 3.9446197656143503`*^9}},
 CellID->934610898,ExpressionUUID->"a4a56622-44c3-4303-9fc3-8736fedef5cc"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]ExamplesProcessed\[CloseCurlyDoubleQuote]\t\
\t\t", "CodeText"],
 "total number of examples processed during training"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.9446196864422293`*^9, 3.944619686472139*^9}, {
   3.944619770940576*^9, 3.944619771760021*^9}},
 CellID->392488438,ExpressionUUID->"ccab805d-894d-4c7b-88e9-75e0a3b5b4cc"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]FinalLearningRate\[CloseCurlyDoubleQuote]\t\
\t\t", "CodeText"],
 "the learning rate at the end of training"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619687084984*^9, 3.9446196871158257`*^9}, {
   3.944619777779212*^9, 3.944619778711731*^9}},
 CellID->1781289280,ExpressionUUID->"b6a69a17-a264-4e1f-8512-27faf6ffc10a"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]FinalPlots\[CloseCurlyDoubleQuote]\t\t\t\t",
   "CodeText"],
 "association of plots for all losses and measurements"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619687763659*^9, 3.9446196877939873`*^9}, {
   3.944619783384493*^9, 3.9446197845241127`*^9}},
 CellID->1583794904,ExpressionUUID->"0735e3b0-d3cc-4b2f-9066-cbd613330461"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]InitialLearningRate\[CloseCurlyDoubleQuote]\
\t\t\t", "CodeText"],
 "the learning rate at the start of training"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.9446196883592052`*^9, 3.944619688388481*^9}, {
   3.944619789614609*^9, 3.944619790260193*^9}},
 CellID->1356247075,ExpressionUUID->"3fc1bbf9-61bc-46b1-9ecb-9d1c40b03913"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]LossPlot\[CloseCurlyDoubleQuote]\t\t\t\t", 
  "CodeText"],
 "a plot of the evolution of the mean training loss"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.94461968918443*^9, 3.9446196892148867`*^9}, {
   3.944619795645255*^9, 3.944619796662408*^9}},
 CellID->850586221,ExpressionUUID->"dcda3dc3-95ae-424d-b8e3-f5933a97ff4f"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]MeanBatchesPerSecond\[CloseCurlyDoubleQuote]\
\t\t", "CodeText"],
 "the mean number of batches processed per second"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619689805367*^9, 3.944619689835537*^9}, {
   3.944619801283902*^9, 3.944619801789339*^9}},
 CellID->307147793,ExpressionUUID->"e44b8ac4-fa7f-4dc7-aa10-525b734187e5"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]MeanExamplesPerSecond\
\[CloseCurlyDoubleQuote]\t\t", "CodeText"],
 "the mean number of input examples processed per second"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.9446196904590597`*^9, 3.9446196904907913`*^9}, {
   3.944619807793324*^9, 3.944619808662601*^9}},
 CellID->330400683,ExpressionUUID->"ccd8c90c-e3c0-4f25-af78-e90cca9b269b"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]NetTrainInputForm\[CloseCurlyDoubleQuote]\t\
\t\t", "CodeText"],
 "an expression representing the originating call to NetTrain"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619691165769*^9, 3.9446196911963663`*^9}, {
   3.944619813476047*^9, 3.94461981449533*^9}},
 CellID->259853817,ExpressionUUID->"bc0cfa22-7653-4cfd-96cc-8033573f3c6b"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]OptimizationMethod\[CloseCurlyDoubleQuote]\t\
\t\t", "CodeText"],
 "the optimization method used and all the related options"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619691975645*^9, 3.944619692005946*^9}, {
   3.94461981937323*^9, 3.944619820245797*^9}},
 CellID->459770610,ExpressionUUID->"cded2c86-f65c-4ace-bd8b-0de7b39fe567"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]ReasonTrainingStopped\
\[CloseCurlyDoubleQuote]\t\t", "CodeText"],
 "brief description of why training stopped"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619692652501*^9, 3.944619692683037*^9}, {
   3.944619826720848*^9, 3.944619827199223*^9}},
 CellID->1574122401,ExpressionUUID->"d9be08d7-edcf-4c01-b1e3-87a4fa344a34"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]RoundLoss\[CloseCurlyDoubleQuote]\t\t\t\t", 
  "CodeText"],
 "the mean loss for the most recent round"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619693310546*^9, 3.944619693341365*^9}, {
   3.944619832144177*^9, 3.9446198332327414`*^9}},
 CellID->1995830156,ExpressionUUID->"c754a1f8-0311-4212-9c3c-9f8c9428d074"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]RoundLossList\[CloseCurlyDoubleQuote]\t\t\t\
", "CodeText"],
 "a list of the mean losses for each round"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619694059132*^9, 3.9446196940899677`*^9}, {
   3.944619838889819*^9, 3.9446198396394567`*^9}},
 CellID->1194041134,ExpressionUUID->"d42484a8-3a0a-48b8-94fd-115716a20b5d"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]RoundMeasurements\[CloseCurlyDoubleQuote]\t\
\t\t", "CodeText"],
 "association of training measurements for the most recent round"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619694887681*^9, 3.944619694917926*^9}, {
   3.944619845172783*^9, 3.9446198461295357`*^9}},
 CellID->682199208,ExpressionUUID->"91f93825-8e6e-4677-b63a-4487f22c1afa"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]RoundMeasurementsLists\
\[CloseCurlyDoubleQuote]\t\t", "CodeText"],
 "list of training measurements associations for each round"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619695621441*^9, 3.944619695652021*^9}, {
   3.94461985109741*^9, 3.944619851804838*^9}},
 CellID->882465051,ExpressionUUID->"83db5c03-1808-4f2c-a613-2dfa031a52a0"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]RoundPositions\[CloseCurlyDoubleQuote]\t\t\t\
", "CodeText"],
 "the batch numbers corresponding to each round measurement"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.9446196963615313`*^9, 3.944619696392057*^9}, {
   3.944619857096342*^9, 3.944619858220428*^9}},
 CellID->717386281,ExpressionUUID->"58795ab8-394f-45a8-ab99-3fff31e2a2b0"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]TargetDevice\[CloseCurlyDoubleQuote]\t\t\t\t\
", "CodeText"],
 "the device used for training"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619697090661*^9, 3.9446196971218643`*^9}, {
   3.9446198627333384`*^9, 3.944619863772801*^9}},
 CellID->184168501,ExpressionUUID->"690c81ae-6c72-44d6-87df-d8f4933913e2"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]TotalBatches\[CloseCurlyDoubleQuote]\t\t\t\t\
", "CodeText"],
 "the total number of batches encountered during training"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619697842564*^9, 3.944619697872629*^9}, {
   3.944619868006014*^9, 3.9446198692470903`*^9}},
 CellID->1065388809,ExpressionUUID->"46e7e492-60ad-45c0-9566-405718878317"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]TotalRounds\[CloseCurlyDoubleQuote]\t\t\t\t\
", "CodeText"],
 "the total number of rounds of training performed"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619698579441*^9, 3.9446196986098948`*^9}, {
   3.944619873896432*^9, 3.944619875066627*^9}},
 CellID->1161297326,ExpressionUUID->"7661a62d-83a5-44ab-b9c7-8b5483c4660c"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]TotalTrainingTime\[CloseCurlyDoubleQuote]\t\
\t\t", "CodeText"],
 "the total time spent training, in seconds"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619699343169*^9, 3.9446196993738747`*^9}, {
   3.944619880285304*^9, 3.944619881340073*^9}},
 CellID->401921484,ExpressionUUID->"8b2b2530-fe78-40d5-885b-3131d29ecb65"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]TrainedNet\[CloseCurlyDoubleQuote]\t\t\t\t",
   "CodeText"],
 "the optimal trained network found (default)"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619700152075*^9, 3.944619700181737*^9}, {
   3.9446198854618397`*^9, 3.944619886740286*^9}},
 CellID->1475921214,ExpressionUUID->"92206023-b540-4841-a58e-92e5a687b6db"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]TrainingExamples\[CloseCurlyDoubleQuote]\t\t\
\t", "CodeText"],
 "the number of examples in the training set"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.94461970091954*^9, 3.94461970094835*^9}, {
   3.944619892721277*^9, 3.944619893516713*^9}},
 CellID->1762643871,ExpressionUUID->"bbf0b337-5733-4aeb-ad4d-a722280b3683"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]TrainingNet\[CloseCurlyDoubleQuote]\t\t\t\t\
", "CodeText"],
 "the network as prepared for training"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.94461970168447*^9, 3.944619701715064*^9}, {
   3.94461989784026*^9, 3.9446198991266203`*^9}},
 CellID->1490701495,ExpressionUUID->"1fef4334-df3e-4c50-bea4-5e664a3440c3"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]ValidationExamples\[CloseCurlyDoubleQuote]\t\
\t\t", "CodeText"],
 "the number of examples in the validation set"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.944619702492875*^9, 3.944619702523965*^9}, {
   3.944619903776924*^9, 3.944619904773807*^9}},
 CellID->638534051,ExpressionUUID->"20ec6dfc-cd59-461d-be2b-b4cf5414ad68"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]ValidationLoss\[CloseCurlyDoubleQuote]\t\t\t\
", "CodeText"],
 "the mean loss obtained on the ValidationSet for the most recent validation \
measurement"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.9446197033017473`*^9, 3.944619716430027*^9}, {
   3.9446199103770313`*^9, 3.9446199111571074`*^9}},
 CellID->740605196,ExpressionUUID->"b00ad6fa-c064-4bff-8c6d-4abd531885b5"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]ValidationLossList\[CloseCurlyDoubleQuote]\t\
\t\t", "CodeText"],
 "list of the mean losses on the ValidationSet for each validation measurement"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.9446197033017473`*^9, 3.944619716443027*^9}, {
   3.9446199165103493`*^9, 3.944619917471718*^9}},
 CellID->854836459,ExpressionUUID->"f8a5bca5-e072-4050-adf1-630e56fc0510"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]ValidationMeasurements\
\[CloseCurlyDoubleQuote]\t\t", "CodeText"],
 "association of training measurements on the ValidationSet after the most \
recent validation measurement"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.9446197033017473`*^9, 3.944619716454899*^9}, {
   3.944619921959882*^9, 3.944619922409198*^9}},
 CellID->300229605,ExpressionUUID->"9b99cb5e-bf51-48af-b59c-d228011f2d85"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]ValidationMeasurementsLists\
\[CloseCurlyDoubleQuote]\t\t", "CodeText"],
 "list of training measurements associations on the ValidationSet for each \
validation measurement"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.9446197033017473`*^9, 3.944619716466187*^9}, {
   3.944619928980444*^9, 3.944619929729187*^9}},
 CellID->1293312938,ExpressionUUID->"9c20a39c-a51b-4dd6-b4ad-362b1086dd28"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]ValidationPositions\[CloseCurlyDoubleQuote]\
\t\t\t", "CodeText"],
 "the batch numbers corresponding to each validation measurement"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944619655708166*^9, {3.9446197033017473`*^9, 3.944619703332078*^9}, {
   3.944619935040307*^9, 3.9446199360011683`*^9}},
 CellID->870566764,ExpressionUUID->"02b13ba1-5b84-4de2-983a-f19b16342e05"],

Cell[TextData[{
 StyleBox["NetTrain[net,data,TrainingProgressFunction->f]", "CodeText"],
 " \t\t\t",
 StyleBox["TrainingProgressFunction", "CodeText"],
 " \tis an option for NetTrain that specifies a function to run periodically \
during training. "
}], "ItemParagraph",
 CellChangeTimes->{{3.944619952230685*^9, 3.9446199787656193`*^9}, {
  3.944621067821278*^9, 3.944621081023902*^9}},
 CellID->1837405828,ExpressionUUID->"990f06d3-2dba-4f49-b2da-275cf7637bda"],

Cell[TextData[{
 StyleBox["TrainingProgressFunction->f\t\t", "CodeText"],
 "specifies that f[assoc] is evaluated after every training round, where \
assoc is an association with the following keys:"
}], "ItemParagraph",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15000.},
 CellChangeTimes->{{3.944619952230685*^9, 3.9446199787656193`*^9}, {
  3.944621067821278*^9, 3.9446210804061623`*^9}},
 CellID->1063643933,ExpressionUUID->"200eec97-b7f9-4ff9-8bbd-b62488f686c2"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["AbsoluteBatch", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\ttotal number of batches processed so far"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620007577702*^9}, {
  3.944620056119184*^9, 3.944620056791952*^9}},
 CellID->1636673273,ExpressionUUID->"32966986-7f2f-4cc0-a34b-30c7e7051982"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Batch", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tcurrent batch number within this round"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.9446200084047327`*^9}, {
  3.944620060677656*^9, 3.9446200616454773`*^9}},
 CellID->1660358284,ExpressionUUID->"76a9c85b-2a57-4b0d-af92-13fe6d51e0a0"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchData", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tthe most recent batch of data used to train \
the net"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.9446200091088333`*^9}, {
  3.9446200651630907`*^9, 3.944620066063323*^9}},
 CellID->174139208,ExpressionUUID->"b8752c65-61e6-444a-8766-e0181545a48e"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchesPerRound", "CodeText"],
 "\[CloseCurlyDoubleQuote]",
 StyleBox["\t            ", "CodeText"],
 "the number of batches contained in a single round"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620009710147*^9}, {
  3.94462006931979*^9, 3.9446201575967083`*^9}},
 CellID->1656360832,ExpressionUUID->"27a82d4a-1815-4414-b33d-b141c94a90c9"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchesPerSecond", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe current training rate in batches per \
second"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620010353126*^9}, {
  3.944620161343193*^9, 3.94462016207826*^9}},
 CellID->1336512512,ExpressionUUID->"fc24b31d-c28f-483c-b1dc-d30b8da70edd"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchIndices", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tlist of indices in the original dataset for \
the most recent batch"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.9446200108953238`*^9}, {
  3.944620166458036*^9, 3.944620167298745*^9}},
 CellID->1685857694,ExpressionUUID->"8253b7df-0f59-4a2f-bd71-0f8cff3555c5"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchLoss", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\taverage loss of most recent batch"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.94462001155378*^9}, {
  3.944620171878756*^9, 3.944620172518386*^9}},
 CellID->649463758,ExpressionUUID->"4c840e0a-7bee-4639-9a1d-64da4b4718be"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchLossList", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tlist of batch losses for each batch update so \
far"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620012108293*^9}, {
  3.9446201771852818`*^9, 3.9446201776172867`*^9}},
 CellID->319944176,ExpressionUUID->"8f41b85a-cd70-4809-a9ad-361bd36b86c6"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchMeasurements", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tassociation of training measurements after the \
last batch update"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620012777297*^9}, {
  3.9446201811766167`*^9, 3.9446201823013973`*^9}},
 CellID->1661363902,ExpressionUUID->"b72ca4b5-ebde-4ce5-b6c6-40e28f47f6ea"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchMeasurementsLists", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tlist of training measurements associations for \
each batch update so far"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620014418758*^9}, {
  3.9446201863199863`*^9, 3.9446201865791693`*^9}},
 CellID->869391228,ExpressionUUID->"442a3c61-7478-4d08-9149-f2c3403e9243"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchSize", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tthe number of inputs contained in a batch"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.9446200150041447`*^9}, {
  3.9446201902077923`*^9, 3.944620190957749*^9}},
 CellID->1420562160,ExpressionUUID->"af04777c-2b7e-4f75-b009-43ce35098661"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BestValidationRound", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe training round corresponding to the current \
best net"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620016551839*^9}, {
  3.944620195318902*^9, 3.944620197047675*^9}},
 CellID->1192849681,ExpressionUUID->"4e62a2e2-fc1c-4d24-a297-eae0ada5eb73"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["CheckpointingFiles", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tlist of checkpointing files generated so far"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620017301799*^9}, {
  3.944620200434251*^9, 3.944620201442945*^9}},
 CellID->14279416,ExpressionUUID->"a9ccfe00-986d-4380-afee-80dd7028ae90"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Event", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tthe last event that occurred"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620017962805*^9}, {
  3.944620204956706*^9, 3.9446202058238497`*^9}},
 CellID->30449445,ExpressionUUID->"78513335-a93e-4c9b-b23a-576cc3979858"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ExampleLosses", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tlosses taken by each example during training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620018604431*^9}, {
  3.944620209123945*^9, 3.94462020958337*^9}},
 CellID->1489030348,ExpressionUUID->"4a39b998-250b-4fc8-94b9-f293f2613ff3"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ExamplesPerSecond", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe training rate in input examples per second"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620019280262*^9}, {
  3.944620212992157*^9, 3.94462021441693*^9}},
 CellID->1990375792,ExpressionUUID->"d24531dc-2549-4eb6-8350-60bd5f2a3f02"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ExamplesProcessed", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\ttotal number of examples processed so far"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.9446200199433126`*^9}, {
  3.94462021902367*^9, 3.9446202197464437`*^9}},
 CellID->248889796,ExpressionUUID->"3ffb0a24-7967-4c97-b745-1e526bb33e00"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Gradients", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tassociation between weight position within \
net and current gradient"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620020553831*^9}, {
  3.944620223373293*^9, 3.9446202245567617`*^9}},
 CellID->75158417,ExpressionUUID->"726de7a9-a55a-4d8e-b346-750ba976ea82"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["GradientsRMS", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\troot mean square of the weight gradients"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620021270938*^9}, {
  3.94462022927986*^9, 3.9446202301411533`*^9}},
 CellID->415241336,ExpressionUUID->"fd71ef26-e2e7-4284-8241-8a955b817c8e"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["GradientsVector", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tvector formed by flattening the current value \
of all weight gradients together"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620048771299*^9}, {
  3.9446202342150097`*^9, 3.9446202346784487`*^9}},
 CellID->945018067,ExpressionUUID->"2b74b047-f89e-486f-945f-ec2c17394af7"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["InitialLearningRate", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe learning rate at the start of training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.9446200230600157`*^9}, {
  3.944620238295081*^9, 3.944620238728738*^9}},
 CellID->596507684,ExpressionUUID->"cd7b65f2-2227-46bc-9020-46509bb202b5"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["LearningRate", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe current learning rate"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620023709504*^9}, {
  3.9446202421808434`*^9, 3.9446202425984907`*^9}},
 CellID->1932329870,ExpressionUUID->"2f7a44a7-b6bb-4f6b-bb2e-4bb351fa0fa4"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["MeanBatchesPerSecond", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe mean number of batches processed per second"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620024424891*^9}, {
  3.944620246801697*^9, 3.9446202471136436`*^9}},
 CellID->1307637338,ExpressionUUID->"de0ed78d-d174-4a27-a64e-5959df6522f5"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["MeanExamplesPerSecond", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe mean number of input examples processed per \
second"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620025160858*^9}, {
  3.944620251006027*^9, 3.944620251300262*^9}},
 CellID->221755536,ExpressionUUID->"6211987b-3640-45d5-b966-7569e4b13576"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Net", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\t\tcurrent, partially trained network"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620026062064*^9}, {
  3.944620254993836*^9, 3.944620256490755*^9}},
 CellID->634742132,ExpressionUUID->"ca96d6c7-87bd-41df-bde1-12294b2d5774"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["OptimizationMethod", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe name of the optimization method used"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620026780143*^9}, {
  3.9446202599756804`*^9, 3.944620260246279*^9}},
 CellID->289374396,ExpressionUUID->"39385e27-9635-48cf-9526-b86e7e386236"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ProgressFraction", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tprogress represented as a number between 0 and 1"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620027410242*^9}, {
  3.944620265552289*^9, 3.944620266180519*^9}},
 CellID->1148334821,ExpressionUUID->"59d0f38f-1c1d-4069-a88d-f056705c0b3f"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Round", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tcurrent round number"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620028104044*^9}, {
  3.944620269980838*^9, 3.94462027093427*^9}},
 CellID->447466540,ExpressionUUID->"b5e46b24-f185-44a9-bd74-45c482b04b28"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["RoundLoss", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\taverage loss of most recent round"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620028704236*^9}, {
  3.9446202739134493`*^9, 3.944620274731531*^9}},
 CellID->752009936,ExpressionUUID->"26126dc3-3b00-440f-bdba-7e0d58e5c644"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["RoundLossList", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tlist of round losses for each round so far"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.94462002942134*^9}, {
  3.944620278077133*^9, 3.944620278556663*^9}},
 CellID->234552848,ExpressionUUID->"3e545eb2-88f7-4595-b244-0f7f0607dee5"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["RoundMeasurements", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tassociation of training measurements for the \
training set after the last training round"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620048787045*^9}, {
  3.9446202819931*^9, 3.944620282714349*^9}},
 CellID->1838496056,ExpressionUUID->"c47e42f7-f2b3-48f4-abe7-cd796f43dfb1"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["RoundMeasurementsLists", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tlist of training measurements associations for \
each round so far"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.9446200312378597`*^9}, {
  3.9446202871804237`*^9, 3.944620287449994*^9}},
 CellID->786765837,ExpressionUUID->"1601eae3-d39f-43f9-ad04-484ba059af96"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TargetDevice", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe device used for training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620031880859*^9}, {
  3.944620290909582*^9, 3.944620291444948*^9}},
 CellID->1006660943,ExpressionUUID->"7cc3fdd4-7a36-4880-abe1-664b23812e09"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TimeElapsed", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\ttime elapsed since training began, in \
seconds"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620032578267*^9}, {
  3.944620295607394*^9, 3.94462029659214*^9}},
 CellID->1316062047,ExpressionUUID->"31f1bfc5-5fd3-4188-bdcd-eb91528a2f4d"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TimeRemaining", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\testimated time remaining, in seconds"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620033319944*^9}, {
  3.9446202996087503`*^9, 3.9446203000199614`*^9}},
 CellID->92759283,ExpressionUUID->"e6d036fe-eb16-411c-a83b-548fbd9a1e07"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TotalBatches", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tmaximum number of training batches"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620004512588*^9, 3.944620034024836*^9}, {
  3.9446203031761217`*^9, 3.9446203036663113`*^9}},
 CellID->2036337608,ExpressionUUID->"7c9aa92a-9f0a-4e91-bb1e-9829a6a6e500"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TotalRounds", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tmaximum number of training rounds"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944620004512588*^9, {3.94462003465864*^9, 3.944620034689069*^9}, {
   3.9446203067849903`*^9, 3.944620307675139*^9}},
 CellID->1831083673,ExpressionUUID->"86cb0ea5-8c6f-4491-aa2b-a422d4a87659"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ValidationLoss", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tmost recent validation loss"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944620004512588*^9, {3.944620035357265*^9, 3.944620035387721*^9}, {
   3.944620310598441*^9, 3.944620311043215*^9}},
 CellID->2007334207,ExpressionUUID->"74d7caed-9ca6-43dc-a2e0-d6750338efe1"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ValidationLossList", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tlist of validation losses for each validation \
measurement so far"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944620004512588*^9, {3.9446200360491743`*^9, 3.9446200360794373`*^9}, {
   3.944620315294917*^9, 3.944620315800767*^9}},
 CellID->56559210,ExpressionUUID->"666b2958-be5f-4b4c-988f-03a477af7c3e"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ValidationMeasurements", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tassociation of training measurements for the \
validation set"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944620004512588*^9, {3.944620036745915*^9, 3.9446200367758837`*^9}, {
   3.944620320274456*^9, 3.94462032052512*^9}},
 CellID->132960882,ExpressionUUID->"d8b6be95-9651-4d9f-b1f4-8424cff80c24"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ValidationMeasurementsLists", "CodeText"],
 "\[CloseCurlyDoubleQuote] list of training measurements associations for \
each validation measurement so far"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944620004512588*^9, {3.94462003821314*^9, 3.944620048800514*^9}},
 CellID->1690124213,ExpressionUUID->"74635ed6-83cd-4592-a0d1-c26484ced10c"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Weights", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tassociation of current value of all weights"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944620004512588*^9, {3.944620038901959*^9, 3.944620038932233*^9}, {
   3.944620329395012*^9, 3.944620329979101*^9}},
 CellID->2051696004,ExpressionUUID->"c5164358-3ee4-445c-8374-cd11cfa03b47"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["WeightsRMS", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\troot mean square of the weights"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944620004512588*^9, {3.944620039712832*^9, 3.944620039743648*^9}, {
   3.944620333775782*^9, 3.944620334674447*^9}},
 CellID->130281156,ExpressionUUID->"52b2bae9-e94f-44a8-b32c-a62d267b7c73"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["WeightsLearningRateMultipliers", "CodeText"],
 "\[CloseCurlyDoubleQuote] an association of the learning rate multiplier \
used for each weight"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944620004512588*^9, {3.944620040866293*^9, 3.9446200408975887`*^9}},
 CellID->1221883523,ExpressionUUID->"555b9799-6b00-4328-83e7-e6dca0bf4632"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["WeightsVector", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tvector formed by flattening the current value \
of all weights together"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944620004512588*^9, {3.944620341481892*^9, 3.944620341918215*^9}},
 CellID->855426985,ExpressionUUID->"c5560502-50bc-4157-a3c9-0d6b2abd0296"],

Cell[TextData[{
 StyleBox["NetTrain[net,data,\[CloseCurlyDoubleQuote]prop\
\[CloseCurlyDoubleQuote]]\t\t", "CodeText"],
 "gives data associated with a specific property prop of the training session."
}], "ItemParagraph",
 CellChangeTimes->{{3.9446203560839787`*^9, 3.944620366099525*^9}},
 CellID->1766224930,ExpressionUUID->"73c54e2f-cd8f-44ec-b65f-f2bed2c1d64a"]
}, Open  ]],

Cell[TextData[{
 "In ",
 StyleBox["NetTrain[net,data,prop]", "CodeText"],
 ", the property prop can be any of the following:"
}], "Text",
 CellChangeTimes->{3.944620375594905*^9},
 CellID->1957152979,ExpressionUUID->"d60671a1-3b88-47cb-baeb-36284b0c1055"],

Cell[CellGroupData[{

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TrainedNet", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe optimal trained network found (default)"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620459459051*^9}, {
  3.944620502255536*^9, 3.944620503664608*^9}},
 CellID->606157538,ExpressionUUID->"1394c348-cc54-4a37-882b-12e40f03fe7c"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchesPerRound", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe number of batches contained in a single \
round"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620460164611*^9}, {
  3.944620507788413*^9, 3.944620508073106*^9}},
 CellID->1721075207,ExpressionUUID->"20f5b7ef-e7a3-4f66-95d2-9ee8bd4ac35e"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchLossList", "CodeText"],
 "\[CloseCurlyDoubleQuote]\ta list of the mean losses for each batch update"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.9446204614219303`*^9}, {
  3.94462051534704*^9, 3.944620515690528*^9}},
 CellID->884693009,ExpressionUUID->"1aaea544-e65e-4292-a00b-9e01a827da01"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchMeasurementsLists", "CodeText"],
 "\[CloseCurlyDoubleQuote] \tlist of training measurements associations for \
each batch update"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620461967923*^9}, 
   3.94462061472414*^9},
 CellID->779084220,ExpressionUUID->"6d19f778-9729-4f9f-ba07-52e713248e52"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchPermutation", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tan array of the indices from the training data \
used to populate each batch"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620462488702*^9}, {
  3.9446205224578238`*^9, 3.9446205227303133`*^9}},
 CellID->1290239691,ExpressionUUID->"0b206680-63df-48ac-a164-8cae5f52d71b"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BatchSize", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe effective value of BatchSize"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620463017272*^9}, {
  3.944620526328082*^9, 3.944620526886263*^9}},
 CellID->1661295185,ExpressionUUID->"f7421397-570b-4c8f-84cc-15cd03173895"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["BestValidationRound", "CodeText"],
 "\[CloseCurlyDoubleQuote] \tthe training round corresponding to the final \
trained net"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.9446204635521317`*^9}, 
   3.944620609996166*^9},
 CellID->512365088,ExpressionUUID->"ee649d42-a482-4f53-96e3-cb3db87824b1"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["CheckpointingFiles", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tlist of checkpointing files generated during \
training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620464064056*^9}, {
  3.9446205340555*^9, 3.944620534310321*^9}},
 CellID->1031228036,ExpressionUUID->"5dd94ad7-7cad-4c8e-8cd3-2e569fc53d9b"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ExampleLosses", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tlosses taken by each example during training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.9446204646541853`*^9}, {
  3.9446205389445047`*^9, 3.944620539226932*^9}},
 CellID->1893429863,ExpressionUUID->"2ca5cf22-f0b6-4ade-a1d4-25acf2fbcdbc"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ExamplesProcessed", "CodeText"],
 "\[CloseCurlyDoubleQuote] total number of examples processed during \
training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620465189212*^9}},
 CellID->739189731,ExpressionUUID->"22c81449-0d71-4bb5-88cd-2879b0bdc565"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FinalLearningRate", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe learning rate at the end of training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620465821445*^9}, {
  3.944620546547607*^9, 3.944620546941626*^9}},
 CellID->1950590540,ExpressionUUID->"7da6ad28-9338-4ef8-8578-45d9b1038ec4"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FinalNet", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe most recent network generated in the \
training process, regardless of its performance on the validation set or \
other metrics"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620498528556*^9}, {
  3.944620550493919*^9, 3.944620551021098*^9}},
 CellID->683138949,ExpressionUUID->"6f0f4824-d10c-4202-8ebd-b72e8b3a24d0"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FinalPlots", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tassociation of plots for all losses and \
measurements"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.9446204693126717`*^9}, {
  3.944620555914568*^9, 3.9446205566179943`*^9}},
 CellID->1225747907,ExpressionUUID->"eee6fed2-f952-4256-8c8c-89eed4c86858"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["InitialLearningRate", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe learning rate at the start of training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620469978304*^9}, {
  3.9446205613977947`*^9, 3.944620561700673*^9}},
 CellID->378254588,ExpressionUUID->"76267c2e-5c19-4672-ac11-f8ecdb3cb2fb"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["LossPlot", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\ta plot of the evolution of the mean training \
loss"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620470663402*^9}, {
  3.944620565211287*^9, 3.944620565685645*^9}},
 CellID->1905329643,ExpressionUUID->"a1aa6993-aa9b-4ec0-b1b3-f92a9773d068"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["MeanBatchesPerSecond", "CodeText"],
 "\[CloseCurlyDoubleQuote] \tthe mean number of batches processed per second"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620471353462*^9}, 
   3.9446205724406347`*^9},
 CellID->559687120,ExpressionUUID->"95551b4f-ed9e-4d30-933b-8ce85b7eb7c3"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["MeanExamplesPerSecond", "CodeText"],
 "\[CloseCurlyDoubleQuote] \tthe mean number of input examples processed per \
second"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620472046364*^9}, 
   3.944620573713879*^9},
 CellID->1583926480,ExpressionUUID->"a770da5b-f4bd-45ea-90b2-1f0f430782e1"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["NetTrainInputForm", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tan expression representing the originating call \
to NetTrain"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.9446204727408247`*^9}, {
  3.944620578196225*^9, 3.944620578726613*^9}},
 CellID->29166055,ExpressionUUID->"9f164c0d-35e1-46bd-85db-dbb997356494"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["OptimizationMethod", "CodeText"],
 "\[CloseCurlyDoubleQuote] \tthe name of the optimization method used"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620473408701*^9}, 
   3.9446205836631317`*^9},
 CellID->1178026604,ExpressionUUID->"fb566595-5513-42e0-942e-54c8d1be6821"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Properties", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe full list of available properties"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620474082199*^9}, {
  3.944620586990491*^9, 3.944620587816074*^9}},
 CellID->882872307,ExpressionUUID->"dbd012cf-d70d-41e9-b374-6274e75e1b79"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ReasonTrainingStopped", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tbrief description of why training stopped"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.9446204748795156`*^9}, {
  3.9446205910404463`*^9, 3.944620591396241*^9}},
 CellID->2121925477,ExpressionUUID->"973f83a0-da09-46c7-86f6-d4ad81cdfcf9"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ResultsObject", "CodeText"],
 "\[CloseCurlyDoubleQuote]\ta NetTrainResultsObject[\[Ellipsis]] containing a \
majority of the available properties in this table"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620498544962*^9}, {
  3.944620596813566*^9, 3.944620597153648*^9}},
 CellID->807001632,ExpressionUUID->"d84c4fb5-298b-430b-b505-29e83e87a126"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["RoundLoss", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe mean loss for the most recent round"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620477086025*^9}, {
  3.944620602457621*^9, 3.944620603369213*^9}},
 CellID->132937754,ExpressionUUID->"cfab095c-c725-4690-b5da-dda42510c811"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["RoundLossList", "CodeText"],
 "\[CloseCurlyDoubleQuote]\ta list of the mean losses for each round"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620477745491*^9}, {
  3.944620622961463*^9, 3.944620623288114*^9}},
 CellID->2032289507,ExpressionUUID->"02412e4e-f1dc-4291-9842-a46aed813fec"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["RoundMeasurements", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tassociation of training measurements for the most \
recent round"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620478374955*^9}, {
  3.9446207696500683`*^9, 3.944620770032741*^9}},
 CellID->571508408,ExpressionUUID->"8c484990-4164-453f-b113-96ed521273df"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["RoundMeasurementsLists", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tlist of training measurements associations for \
each round"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620479012039*^9}, {
  3.944620775233797*^9, 3.9446207756388702`*^9}},
 CellID->1477440555,ExpressionUUID->"a4ebe216-9d88-4574-a278-d848f70ee958"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["RoundPositions", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe batch numbers corresponding to each round \
measurement"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620479667004*^9}, {
  3.9446207792382*^9, 3.94462077959966*^9}},
 CellID->1992976616,ExpressionUUID->"918e4913-e1a7-4bcc-8418-414ff792d0ce"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TargetDevice", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe device used for training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620480354533*^9}, {
  3.944620783423964*^9, 3.944620783737973*^9}},
 CellID->2004404565,ExpressionUUID->"af4daee0-8b3c-4014-a752-82dd822323b1"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TotalBatches", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t the total number of batches encountered during \
training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620481053816*^9}, {
  3.94462080576827*^9, 3.944620831678349*^9}},
 CellID->1613599396,ExpressionUUID->"add5e2ba-90db-4c76-bba3-5fe79f5e113b"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TotalRounds", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe total number of rounds of training performed"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620481751277*^9}, {
  3.944620836068741*^9, 3.9446208367806683`*^9}},
 CellID->1067009156,ExpressionUUID->"d5c37cac-393c-475f-9188-6417eec907b3"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TotalTrainingTime", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe total time spent training, in seconds"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.94462048240936*^9}, {
  3.944620840255921*^9, 3.944620840587558*^9}},
 CellID->720717640,ExpressionUUID->"f971af66-07a9-4461-bc02-d9726e2c6a46"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TrainingExamples", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe number of examples in the training set"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.9446204830850554`*^9}, {
  3.944620843839931*^9, 3.944620844153502*^9}},
 CellID->36546538,ExpressionUUID->"b36a0ecc-280f-4ba7-8927-91457e233a88"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TrainingNet", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe network as prepared for training"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620483763496*^9}, {
  3.9446208479525013`*^9, 3.9446208485985518`*^9}},
 CellID->187344034,ExpressionUUID->"bb465310-fcd8-4514-b85b-6e5188063876"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TrainingUpdateSchedule", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tthe value of TrainingUpdateSchedule"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620484479396*^9}, {
   3.94462085333456*^9, 3.944620853670289*^9}, 3.9446208848678637`*^9},
 CellID->944530959,ExpressionUUID->"b4be5328-5f95-499c-96e6-7ce3c3870052"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ValidationExamples", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe number of examples in the validation set"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620485231082*^9}, {
  3.9446208572974663`*^9, 3.9446208575817957`*^9}},
 CellID->1453195467,ExpressionUUID->"7fbc602a-62ed-410d-b2e1-5a10872a4ba9"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ValidationLoss", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe mean loss obtained on the ValidationSet for \
the most recent validation measurement"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620498558651*^9}, {
  3.94462086175178*^9, 3.944620862066678*^9}},
 CellID->802036012,ExpressionUUID->"ebcb7122-a056-4481-ab6f-0cdb2636f70b"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ValidationLossList", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tlist of the mean losses on the ValidationSet for \
each validation measurement"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620498572156*^9}, {
  3.9446208657265873`*^9, 3.9446208660695057`*^9}},
 CellID->804741556,ExpressionUUID->"e037fafb-c815-4bd8-abd1-0fb74b48c6e6"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ValidationMeasurements", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tassociation of training measurements on the \
ValidationSet after the most recent validation measurement"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620498583889*^9}, {
  3.944620869578867*^9, 3.944620879644944*^9}},
 CellID->1404171685,ExpressionUUID->"e862a718-764c-473f-b74e-1bfbd77d3e57"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ValidationMeasurementsLists", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tlist of training measurements associations on the \
ValidationSet for each validation measurement"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.944620498595509*^9}, {
  3.944620876809445*^9, 3.9446208770228863`*^9}},
 CellID->1713776889,ExpressionUUID->"bb6880dc-6287-4a4f-9ff8-f6ae93cf70be"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ValidationPositions", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tthe batch numbers corresponding to each \
validation measurement"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.9446204919966707`*^9}, {
  3.944620889398529*^9, 3.944620890195558*^9}},
 CellID->222373340,ExpressionUUID->"d42fb79f-63f0-4de8-a9e8-c1579b3b2bc5"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["WeightsLearningRateMultipliers", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tan association of the learning rate multiplier \
used for each weight"
}], "ItemParagraph",
 CellChangeTimes->{{3.944620453913229*^9, 3.9446204664337254`*^9}, {
  3.944620894524295*^9, 3.944620894824032*^9}},
 CellID->55656390,ExpressionUUID->"a02d2b63-8f2f-4b92-a289-41edf899565f"],

Cell[TextData[StyleBox["Remarks:",
 FontWeight->"Bold"]], "Note",
 CellChangeTimes->{{3.944620905553585*^9, 3.9446209076089697`*^9}},
 CellID->1316823341,ExpressionUUID->"9bf96e92-7316-4b6f-ae62-d2279070effa"]
}, Open  ]],

Cell[TextData[{
 "\[Bullet] You can use any of the properties listed above as the third \
argument of ",
 StyleBox["NetTrain", "CodeText"],
 " to retrieve specific information about the training process and results."
}], "Text",
 CellChangeTimes->{{3.944620923036327*^9, 3.944620953932959*^9}},
 CellID->89691735,ExpressionUUID->"7cd001c9-5c66-4461-9a3e-6c6817d6d28d"],

Cell["\<\
\[Bullet] Using these properties, you can analyze the performance of your \
neural network during training, inspect the trained model, and gather \
information that might be useful for further analysis or decision-making.\
\>", "Text",
 CellChangeTimes->{{3.944620923036327*^9, 3.944620953947679*^9}},
 CellID->693436511,ExpressionUUID->"3725221e-d06c-45a9-81c0-eb1cb44de704"],

Cell[TextData[{
 "\[Bullet] An association of the form ",
 StyleBox["<|\[CloseCurlyDoubleQuote]Property\[CloseCurlyDoubleQuote]->prop,\
\[CloseCurlyDoubleQuote]Form\[CloseCurlyDoubleQuote]->form,\
\[CloseCurlyDoubleQuote]Interval\[CloseCurlyDoubleQuote]->int|>", 
  "CodeText"],
 " can be used to specify a custom property whose value will be collected \
repeatedly during training."
}], "Text",
 CellChangeTimes->{{3.944620923036327*^9, 3.9446209539607573`*^9}},
 CellID->678507557,ExpressionUUID->"2a22717f-d292-483c-b95d-09fc933ed2af"],

Cell[TextData[{
 "\[Bullet] For a custom property, valid settings for prop can be any of the \
properties available in ",
 StyleBox["TrainingProgressFunction", "CodeText"],
 ", or a user-defined function that is given the association of all the \
properties. Valid settings for form include ",
 StyleBox["\[OpenCurlyDoubleQuote]List\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]TransposedList\[CloseCurlyDoubleQuote]", "CodeText"],
 " and ",
 StyleBox["\[OpenCurlyDoubleQuote]Plot\[CloseCurlyDoubleQuote]", "CodeText"],
 ". Valid settings for ",
 StyleBox["\[OpenCurlyDoubleQuote]Interval\[CloseCurlyDoubleQuote]", 
  "CodeText"],
 " can be ",
 StyleBox["\[OpenCurlyDoubleQuote]Batch\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Round\[CloseCurlyDoubleQuote]", "CodeText"],
 " or a ",
 StyleBox["Quantity[\[Ellipsis]]", "CodeText"],
 ". Supported units include ",
 StyleBox["\[OpenCurlyDoubleQuote]Batches\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Rounds\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Percent\[CloseCurlyDoubleQuote]", "CodeText"],
 " and time units like ",
 StyleBox["\[OpenCurlyDoubleQuote]Seconds\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]Minutes\[CloseCurlyDoubleQuote]", "CodeText"],
 " and ",
 StyleBox["\[OpenCurlyDoubleQuote]Hours\[CloseCurlyDoubleQuote]", 
  "CodeText"],
 "."
}], "Text",
 CellChangeTimes->{{3.944620923036327*^9, 3.9446209540061283`*^9}},
 CellID->1724601743,ExpressionUUID->"6e405d03-35ab-4e41-bf86-a7e40b77eaa9"],

Cell[TextData[{
 StyleBox["NetTrain[net,data,TrainingProgressMeasurements->spec] \t\
TrainingProgressMeasurements", "CodeText"],
 " is an option for NetTrain that specifies measurements to make while \
training is in progress."
}], "ItemParagraph",
 CellChangeTimes->{{3.944621042634067*^9, 3.944621058493577*^9}},
 CellID->1093646728,ExpressionUUID->"35e86d1d-67d9-496c-85b3-8f9bbcc0bcfb"],

Cell[TextData[{
 "In ",
 StyleBox["TrainingProgressMeasurements->spec", "CodeText"],
 ", the following forms for spec are allowed:"
}], "Text",
 CellChangeTimes->{3.944621106695401*^9},
 CellID->1324678712,ExpressionUUID->"ae00f12d-12c1-43c2-9bdc-f07f4093b226"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]measurement\[CloseCurlyDoubleQuote]\t\t", 
  "CodeText"],
 "a named, built-in measurement"
}], "ItemParagraph",
 CellChangeTimes->{{3.94462112389324*^9, 3.944621158769253*^9}},
 CellID->912144135,ExpressionUUID->"a6ae36c7-fab8-4797-8ff9-19932dfc9f71"],

Cell[TextData[{
 StyleBox["NetPort[\[OpenCurlyDoubleQuote]output\[CloseCurlyDoubleQuote]]\t\t\
", "CodeText"],
 "the value of an output port of the net"
}], "ItemParagraph",
 CellChangeTimes->{{3.94462112389324*^9, 3.9446211554051867`*^9}},
 CellID->32179794,ExpressionUUID->"12a19ed5-8995-4792-9947-6292314f3cd3"],

Cell[TextData[{
 StyleBox["NetPort[\[OpenCurlyDoubleQuote]tdata\[CloseCurlyDoubleQuote]]\t\t",
   "CodeText"],
 "the value of training data for the net"
}], "ItemParagraph",
 CellChangeTimes->{{3.94462112389324*^9, 3.944621128708808*^9}, {
  3.944621163222192*^9, 3.944621163716105*^9}},
 CellID->2039836087,ExpressionUUID->"c26ab06b-b51e-487e-801c-1fbf49ef1c7a"],

Cell[TextData[{
 StyleBox["NetPort[{lspec,\[CloseCurlyDoubleQuote]output\
\[CloseCurlyDoubleQuote]}]\t", "CodeText"],
 "the value of an interior activation of the net"
}], "ItemParagraph",
 CellChangeTimes->{{3.94462112389324*^9, 3.944621129278651*^9}, {
  3.944621168111568*^9, 3.9446211683828793`*^9}},
 CellID->1813849018,ExpressionUUID->"3dd7732d-d559-4343-81ff-4295e8351671"],

Cell[TextData[{
 StyleBox["NetPort[{lspec,\[CloseCurlyDoubleQuote]weight\
\[CloseCurlyDoubleQuote]}]\t", "CodeText"],
 "the value of a weight array"
}], "ItemParagraph",
 CellChangeTimes->{{3.94462112389324*^9, 3.944621129845052*^9}, {
  3.944621172988899*^9, 3.944621173343433*^9}},
 CellID->864654230,ExpressionUUID->"04da175b-94fd-48fd-8a34-ae5d323dd6ff"],

Cell[TextData[{
 StyleBox["<|\[CloseCurlyDoubleQuote]Measurement\[CloseCurlyDoubleQuote]->\
spec,\[Ellipsis]|>\t", "CodeText"],
 "a measurement with suboptions"
}], "ItemParagraph",
 CellChangeTimes->{{3.94462112389324*^9, 3.9446211308486958`*^9}, {
  3.944621178238324*^9, 3.9446211785190773`*^9}},
 CellID->931677985,ExpressionUUID->"826c8fd9-86d1-4050-94ae-f1d831f8e914"],

Cell[TextData[{
 StyleBox["<|\[CloseCurlyDoubleQuote]Measurement\[CloseCurlyDoubleQuote]->\
Function[\[Ellipsis]],\[Ellipsis]|>\t", "CodeText"],
 "a custom function to measure"
}], "ItemParagraph",
 CellChangeTimes->{
  3.94462112389324*^9, {3.9446211839542713`*^9, 3.944621184279924*^9}},
 CellID->485731668,ExpressionUUID->"7590b9dc-6406-4909-9cb8-0cb974020033"]
}, Open  ]],

Cell[TextData[{
 "For nets that contain a ",
 StyleBox["CrossEntropyLossLayer", "CodeText"],
 ", the following built-in measurements are available:"
}], "Text",
 CellChangeTimes->{3.944621194218502*^9},
 CellID->1763401830,ExpressionUUID->"c35955ec-8fc9-4ad0-a4c2-9e679f6f4bdf"],

Cell[CellGroupData[{

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Accuracy", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tfraction of correctly classified examples"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621241867425*^9}},
 CellID->72744563,ExpressionUUID->"6596c275-b5ff-47bf-adb5-7e6eff35bd54"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Accuracy", "CodeText"],
 "\[CloseCurlyDoubleQuote]",
 StyleBox["->n\t             ", "CodeText"],
 "fraction of examples with the correct result in the top n"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212174317636`*^9}, {
  3.944621256738263*^9, 3.944621267205832*^9}},
 CellID->2069211933,ExpressionUUID->"9595c00d-0c1c-4074-8d3d-c0da8fcab321"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["AreaUnderROCCurve", "CodeText"],
 "\[CloseCurlyDoubleQuote] area under the ROC curve for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621218129534*^9}, {
  3.9446212714911013`*^9, 3.944621275753878*^9}},
 CellID->353700415,ExpressionUUID->"22fc332a-5bc6-4488-8f6c-0e52dcee12f5"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["CohenKappa", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tCohen\[CloseCurlyQuote]s kappa coefficient"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621218665984*^9}, {
  3.944621289222212*^9, 3.944621289932116*^9}},
 CellID->2085395126,ExpressionUUID->"f3692ad1-1d7d-4bf8-984d-41b59bcc5928"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ConfusionMatrix", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tcounts cij of class i examples classified as \
class j"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212192364492`*^9}, {
  3.9446212932871923`*^9, 3.9446212936046953`*^9}},
 CellID->411935780,ExpressionUUID->"912df69f-0673-47ab-8a06-60273c52d990"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ConfusionMatrixPlot", "CodeText"],
 "\[CloseCurlyDoubleQuote] plot of the confusion matrix"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621219804459*^9}},
 CellID->1077665511,ExpressionUUID->"30eed65b-41e1-4b4a-af0c-1f7e45d1b446"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Entropy", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tentropy measured in nats"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621220417767*^9}, {
  3.9446213013588057`*^9, 3.944621302062995*^9}},
 CellID->321786811,ExpressionUUID->"5667433c-2098-445f-bb16-8703f499a2b4"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ErrorRate", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tfraction of incorrectly classified examples"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212210016327`*^9}, {
  3.944621305079441*^9, 3.944621305604724*^9}},
 CellID->713269140,ExpressionUUID->"44877c7f-037f-43fd-9928-1216d689097c"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ErrorRate", "CodeText"],
 "\[CloseCurlyDoubleQuote]",
 StyleBox["->n\t             ", "CodeText"],
 "fraction of examples with the incorrect result in the top n"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212215733957`*^9}, {
  3.944621314289095*^9, 3.944621328869405*^9}},
 CellID->535053637,ExpressionUUID->"3258e634-883a-4b23-ab72-bdb612b0e05d"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["F1Score", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tF1 score for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212222036133`*^9}, {
  3.944621332771044*^9, 3.944621333380457*^9}},
 CellID->111290354,ExpressionUUID->"9edf484d-9fec-4373-9b3e-3f437760dc04"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FScore", "CodeText"],
 "\[CloseCurlyDoubleQuote]",
 StyleBox["->\[Beta]\t             ", "CodeText"],
 "F\[Beta] score for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212227895403`*^9}, {
  3.944621340284442*^9, 3.94462134690337*^9}},
 CellID->968949682,ExpressionUUID->"ac76088f-efce-4906-bd8d-688c16e8e0ea"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FalseDiscoveryRate", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tfalse discovery rate for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621223402624*^9}, {
  3.944621351280677*^9, 3.94462135164042*^9}},
 CellID->580979945,ExpressionUUID->"f4725e16-6130-4949-9a1a-5599de2b14af"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FalseNegativeNumber", "CodeText"],
 "\[CloseCurlyDoubleQuote] number of false negative examples"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621224049295*^9}},
 CellID->621748090,ExpressionUUID->"1607ddf8-19cd-4eee-8fc6-f609f5a9937c"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FalseNegativeRate", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tfalse negative rate for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212247111473`*^9}, {
  3.9446213592024517`*^9, 3.944621359453043*^9}},
 CellID->591830936,ExpressionUUID->"e3f07a18-edfc-4863-b76f-192723cac0b4"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FalseOmissionRate", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tfalse omission rate for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621225351666*^9}, {
  3.944621363569334*^9, 3.944621363848205*^9}},
 CellID->1691741076,ExpressionUUID->"d96f486c-a22e-4b78-beb3-9b57c2620dee"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FalsePositiveNumber", "CodeText"],
 "\[CloseCurlyDoubleQuote] number of false positive examples"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621225981881*^9}},
 CellID->1024801987,ExpressionUUID->"d1c8301f-5f7d-4112-957c-b4d577f89ec8"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FalsePositiveRate", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tfalse positive rate for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621226600829*^9}, {
  3.9446213699831657`*^9, 3.944621370207138*^9}},
 CellID->1091977729,ExpressionUUID->"6796cc5d-a709-448e-8fcb-1cc53268a4d9"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Informedness", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tinformedness for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621227211903*^9}, {
  3.9446213744257107`*^9, 3.94462137470303*^9}},
 CellID->2136626791,ExpressionUUID->"1f4771f4-1c80-4afb-b340-350ae04c1448"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Markedness", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tmarkedness for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621227845128*^9}, {
  3.944621378277719*^9, 3.944621380000614*^9}},
 CellID->1765013086,ExpressionUUID->"71d6ed05-cded-43f1-a78d-7af65032a39c"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["MatthewsCorrelationCoefficient", "CodeText"],
 "\[CloseCurlyDoubleQuote] \tMatthews correlation coefficient for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212284770393`*^9}, 
   3.944621388734303*^9},
 CellID->1770702165,ExpressionUUID->"3c0c4b06-24f6-4bfe-828d-7a04941ad3be"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["NegativePredictiveValue", "CodeText"],
 "\[CloseCurlyDoubleQuote] \t\tnegative predictive value for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621229072891*^9}, {
  3.944621386662792*^9, 3.944621387623424*^9}},
 CellID->1560784750,ExpressionUUID->"6f59ab5d-9d04-4a58-ac51-08b4025c9cd8"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Perplexity", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\texponential of the entropy"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.94462122974996*^9}, {
  3.94462139321984*^9, 3.944621394197174*^9}},
 CellID->971829087,ExpressionUUID->"4315e64c-d071-4ba0-98ba-2351893edb9b"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Precision", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tprecision for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212304294987`*^9}, {
  3.944621397447796*^9, 3.9446213979287663`*^9}},
 CellID->1970918951,ExpressionUUID->"46ac9e15-8ca9-480c-ac29-6e1b2326b8aa"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Recall", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\trecall rate for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621231101091*^9}, {
  3.944621401006102*^9, 3.944621401452567*^9}},
 CellID->1476524962,ExpressionUUID->"e505939f-9fbf-46e0-babc-e0c896c794ff"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ROCCurve", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\treceiver operating characteristics (ROC) curve \
for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621231819557*^9}, {
  3.944621405039207*^9, 3.944621405485855*^9}},
 CellID->2093470432,ExpressionUUID->"670e3ad3-ffb8-4d3c-b4db-dbd7fa5a8c16"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ROCCurvePlot", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tplot of the ROC curve"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212324773493`*^9}, {
  3.944621408413232*^9, 3.9446214097823877`*^9}},
 CellID->1418843434,ExpressionUUID->"75c4bfe7-d101-4d4b-8604-9a8b5a2a76cf"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["ScottPi", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tScott\[CloseCurlyQuote]s pi coefficient"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.9446212331074047`*^9}, {
  3.944621413272567*^9, 3.944621413770495*^9}},
 CellID->1401395108,ExpressionUUID->"b3fbba00-d599-4cb3-a6d8-9705e5071101"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["Specificity", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tspecificity for each class"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621233751336*^9}, {
  3.944621417470874*^9, 3.944621417922061*^9}},
 CellID->455456640,ExpressionUUID->"658c38b4-b5f8-4e40-964e-dc76fdf4971a"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TrueNegativeNumber", "CodeText"],
 "\[CloseCurlyDoubleQuote] number of true negative examples"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621211468316*^9, 3.944621234413233*^9}},
 CellID->1833583575,ExpressionUUID->"e5f4e1bb-a8ba-43b0-8596-ffa300d3c9bd"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["TruePositiveNumber", "CodeText"],
 "\[CloseCurlyDoubleQuote] number of true positive examples"
}], "ItemParagraph",
 CellChangeTimes->{3.944621211468316*^9},
 CellID->1754663765,ExpressionUUID->"afe86a6a-e608-427b-bbd6-488a3ebacd74"]
}, Open  ]],

Cell[TextData[{
 "For nets that contain a ",
 StyleBox["MeanSquaredLossLayer", "CodeText"],
 " or ",
 StyleBox["MeanAbsoluteLossLayer", "CodeText"],
 ", the following built-in measurements are available:"
}], "Text",
 CellChangeTimes->{{3.9446214332480707`*^9, 3.9446214381084833`*^9}},
 CellID->1376566539,ExpressionUUID->"844dd27a-6dd5-4828-a1d1-2152f95d9275"],

Cell[CellGroupData[{

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["FractionVarianceUnexplained", "CodeText"],
 "\[CloseCurlyDoubleQuote]the fraction of output variance left unexplained by \
the net"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621453548151*^9, 3.944621475797505*^9}},
 CellID->725086303,ExpressionUUID->"d4e2671c-196b-4ccf-be2f-782c8a19859f"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["IntersectionOverUnion", "CodeText"],
 "\[CloseCurlyDoubleQuote]\tintersection over union for bounding boxes"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621453548151*^9, 3.9446214720034103`*^9}},
 CellID->1283165476,ExpressionUUID->"8cbe4977-4841-417d-87a4-17df74fbe699"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["MeanDeviation", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\tmean absolute value of the residuals"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621453548151*^9, 3.944621479774856*^9}},
 CellID->1699070005,ExpressionUUID->"65a5b819-746c-48e5-8606-b8778f8bcc64"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["MeanSquare", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tmean square of the residuals"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621453548151*^9, 3.94462148348785*^9}},
 CellID->1575674346,ExpressionUUID->"329d76b0-8a83-43b5-9bad-efa0da80e55f"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["RSquared", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\t\tcoeficient of determination"
}], "ItemParagraph",
 CellChangeTimes->{{3.944621453548151*^9, 3.9446214869152517`*^9}},
 CellID->815284584,ExpressionUUID->"d6975a6b-08b0-4ac5-a9f5-eec15fd5eb0f"],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]",
 StyleBox["StandardDeviation", "CodeText"],
 "\[CloseCurlyDoubleQuote]\t\troot mean square of the residuals"
}], "ItemParagraph",
 CellChangeTimes->{
  3.944621453548151*^9, {3.944621490134275*^9, 3.944621490581242*^9}},
 CellID->1121866115,ExpressionUUID->"9b6fa5d4-0f2e-4d12-bb4b-4dcc32a216f2"]
}, Open  ]],

Cell[TextData[{
 "During the training process, ",
 StyleBox["NetTrain", "CodeText"],
 " will compute these measurements at various intervals (e.g., after each \
training batch or after each training epoch) and provide them as part of the \
training progress output. This information can help you monitor the \
performance of your neural network as it learns from the data and make \
decisions about training parameters or model architecture."
}], "Text",
 CellChangeTimes->{{3.94462149862988*^9, 3.944621501865345*^9}},
 CellID->1379869999,ExpressionUUID->"f971983e-cc12-469b-ba0f-bdc644b7f799"],

Cell["code 5.8", "CodeCaption",
 CellChangeTimes->{{3.944621512682254*^9, 3.94462151397086*^9}},
 CellID->168705963,ExpressionUUID->"7417b787-d249-4fcd-a98d-572dbda12c29"],

Cell["\<\
(* The code demonstrates the training of a neural network using a noisy \
dataset and subsequent analysis of the training results. Initially, a \
synthetic dataset with added noise based on a Gaussian distribution is \
generated. Subsequently, a neural network architecture is defined with two \
hidden layers, each comprising 150 units and utilizing Tanh activation \
functions. The neural network is then trained using the noisy dataset, and \
the training results are stored in mlpTrainingResults. The code further \
inspects various properties of the trained network, including the loss plot, \
mean batches per second, optimization method, and the trained network itself: \
*)\
\>", "comment",
 CellChangeTimes->{{3.944621521656556*^9, 3.944621524841694*^9}},
 CellID->531911462,ExpressionUUID->"68aa1fe9-5982-45ca-9687-d6b41467590c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"noisyData", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"x", "->", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}], "]"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", ".15"}], "]"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "3"}], ",", "3", ",", ".2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mlp", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{"150", ",", "Tanh", ",", "150", ",", "Tanh", ",", "1"}], "}"}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mlpTrainingResults", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"mlp", ",", "noisyData", ",", "All"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"mlpTrainingResults", "[", "\"\<LossPlot\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"mlpTrainingResults", "[", "\"\<MeanBatchesPerSecond\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"mlpTrainingResults", "[", "\"\<OptimizationMethod\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"mlpTrainingResults", "[", "\"\<TrainedNet\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"mlpTrainingResults", "[", "\"\<TrainingNet\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.944621529227034*^9, 3.9446216385383863`*^9}},
 CellLabel->"In[107]:=",
 CellID->982353162,ExpressionUUID->"d302b6a4-fa28-4280-acbf-030e00db8954"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                 ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], Center,
                Center, 32], 
              InsetBox[
               FormBox[
                FrameBox[
                 StyleBox["\"uninitialized\"", 
                  RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                  StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                 FrameStyle -> None, FrameMargins -> {{0, 0}, {-1.5, -1.5}}, 
                 RoundingRadius -> 3, BaselinePosition -> (Center -> Center), 
                 StripOnInput -> False], TraditionalForm], {14, 14}]}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
              PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[
                    0.817375, 0.31808499999999995`, 0.3521274999999998], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9939125, 0.9772695, 0.97840425]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[0.7565, 0.09078, 0.1361699999999998], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.04791666666666667, 0.6274509803921569, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                 ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], Center,
                Center, 32], 
              InsetBox[
               FormBox[
                FrameBox[
                 StyleBox["\"uninitialized\"", 
                  RGBColor[0.66, 0, 0], FontSize -> -3 + Inherited, 
                  StripOnInput -> False], Background -> GrayLevel[1, 0.9], 
                 FrameStyle -> None, FrameMargins -> {{0, 0}, {-1.5, -1.5}}, 
                 RoundingRadius -> 3, BaselinePosition -> (Center -> Center), 
                 StripOnInput -> False], TraditionalForm], {14, 14}]}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
              PlotRange -> {{-12, 40}, {-2, 30}}, ImageSize -> {60, 36}}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{150, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {150}, "$OutputSize" -> 150, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {150}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{150, 150}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {150}, "$OutputSize" -> 150, 
                    "$InputSize" -> 150, "$InputDimensions" -> {150}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {150}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 150}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 150, "$InputDimensions" -> {150}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 150\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 150\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 150\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 150\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{150, NeuralNetworks`SizeT}, 
            NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {150}, "$OutputSize" -> 150, "$InputSize" -> 
          NeuralNetworks`SizeT, "$InputDimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>|>, 
      "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
          "$Dimensions" -> {150}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>|>, 
      "3" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{150, 150}, NeuralNetworks`RealT], "Biases" -> 
          NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {150}, "$OutputSize" -> 150, "$InputSize" -> 
          150, "$InputDimensions" -> {150}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>|>, 
      "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
          "$Dimensions" -> {150}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>|>, 
      "5" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> NeuralNetworks`TensorT[{1, 150}, NeuralNetworks`RealT], 
          "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 150, 
          "$InputDimensions" -> {150}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{150}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"]}, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.1.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.94462159191061*^9, 3.9446216388908777`*^9},
 CellLabel->"Out[108]=",
 CellID->819554507,ExpressionUUID->"8c0a8228-691c-4c73-b190-8e0bb03e8547"],

Cell[BoxData[
 DynamicModuleBox[{
  Progress`ProgressDump`forceRedraw$$ = {{{9, 1, 1, 2, 1, 1, 1, 2, 5, 2}, {9, 
   1, 1, 2, 1, 1, 1, 2, 8, 2}, {9, 1, 1, 2, 1, 1, 1, 2, 13, 2}}, {}}, 
  Progress`ProgressDump`open$$ = True, Progress`ProgressDump`clock$$ = 0, 
  Progress`ProgressDump`maxTime$$ = DirectedInfinity[1]}, 
  OverlayBox[{
   AnimatorBox[Dynamic[Progress`ProgressDump`clock$$], {0., 
     DirectedInfinity[1], 0.4},
    AnimationRate->1,
    AnimationRunTime->0.3051118850708008,
    AnimationTimeIndex->0.3051118850708008,
    AppearanceElements->None,
    ImageSize->{1, 1}], 
   DynamicWrapperBox[
    DynamicBox[ToBoxes[
      Progress`GenerateProgressPanel[{
       "Progress" :> NeuralNetworks`Private`NetTrain`$progressFraction, 
        " Progress" :> NeuralNetworks`Private`NetTrain`row[
          Round[NeuralNetworks`Private`NetTrain`$progressFraction 100], "% ", 
          "(round ", NeuralNetworks`Private`NetTrain`$round, 
          If[
           Not[
            TrueQ[NeuralNetworks`Private`NetTrain`$noRoundLimit]], {
           "/", NeuralNetworks`Private`NetTrain`$maxTrainingRoundsIndic}], 
          If[
           TrueQ[NeuralNetworks`Private`NetTrain`$showBatch], {
           ", batch ", NeuralNetworks`Private`NetTrain`$batch, "/", 
            NeuralNetworks`Private`NetTrain`$batchesPerRound}], ")"], "Total" :> 
        NeuralNetworks`Private`NetTrain`row[
         NeuralNetworks`Private`NetTrain`$absoluteBatch, 
          If[
           Not[
            TrueQ[NeuralNetworks`Private`NetTrain`$noBatchLimit]], {
           "/", NeuralNetworks`Private`NetTrain`$maxBatches}], " batches, ", 
          NeuralNetworks`Private`NetTrain`batchSize 
          NeuralNetworks`Private`NetTrain`$absoluteBatch, 
          If[
           Not[
            TrueQ[NeuralNetworks`Private`NetTrain`$noBatchLimit]], {
           "/", NeuralNetworks`Private`NetTrain`batchSize 
            NeuralNetworks`Private`NetTrain`$maxBatches}], " examples"], 
        "Time" :> If[
          TrueQ[NeuralNetworks`Private`NetTrain`$timeElapsed > 0], 
          NeuralNetworks`Private`NetTrain`row[
           GeneralUtilities`TimeString[
            Round[NeuralNetworks`Private`NetTrain`$timeElapsed]], 
           " elapsed, ", 
           If[
            And[
             TrueQ[
              And[
              NeuralNetworks`Private`NetTrain`$timeElapsed > 1, 
               NeuralNetworks`Private`NetTrain`$absoluteBatch > 4]], 
             Not[NeuralNetworks`Private`NetTrain`$noRoundLimit]], {
             GeneralUtilities`TimeString[
              Round[NeuralNetworks`Private`NetTrain`$timeRemaining]], 
             " left, "}], 
           NeuralNetworks`Private`NetTrain`rateForm[
           NeuralNetworks`Private`NetTrain`$batchRate 
            NeuralNetworks`Private`NetTrain`$updatesPerBatch 
            NeuralNetworks`Private`NetTrain`batchSize], " examples/s"], ""], 
        "Method" :> 
        Row[{"ADAM", " optimizer, ", "batch size ", 31, ", ", "CPU"}], "" :> 
        NeuralNetworks`Private`NetTrain`row["learning rate ", 
          ScientificForm[MXNetLink`$LastGlobalLearningRate, 3]], "" :> 
        NeuralNetworks`Private`NetTrain`fixedWidthRow[
          Map[NeuralNetworks`Private`NetTrain`keystyle, {"current", "round", 
            If[
             TrueQ[NeuralNetworks`Private`NetTrain`$doValidation], 
             "validation", Nothing]}]], Tooltip["loss", 
          Column[{
            Row[{"Measurement: ", "loss"}]}]] :> 
        NeuralNetworks`Private`NetTrain`fixedWidthRow[{
           If[
            And[
             TrueQ[True], 
             AssociationQ[
             NeuralNetworks`Private`NetTrain`$lastReportingObservation]], 
            NeuralNetworks`Private`NetTrain`lossForm[
             Identity[
              Lookup[
              NeuralNetworks`Private`NetTrain`$lastReportingObservation, 
               "Loss", None]]], 
            NeuralNetworks`Private`NetTrain`keystyle["n.a."]], 
           If[
            AssociationQ[NeuralNetworks`Private`NetTrain`$roundMeasurements], 
            
            NeuralNetworks`Private`NetTrain`lossForm[
             Identity[
              Lookup[
              NeuralNetworks`Private`NetTrain`$roundMeasurements, "Loss", 
               None]]], Nothing], 
           If[
            TrueQ[NeuralNetworks`Private`NetTrain`$doValidation], 
            If[
            NeuralNetworks`Private`NetTrain`$computingValidation, 
             "computing...", 
             NeuralNetworks`Private`NetTrain`lossForm[
              Identity[
               Lookup[
               NeuralNetworks`Private`NetTrain`$validationMeasurements, 
                "Loss", None]]]], Nothing]}], Center :> 
        NeuralNetworks`Private`NetTrain`stackMetricPlots[
         NeuralNetworks`Private`NetTrain`$lastLossPlotBoxes, 
          NeuralNetworks`Private`NetTrain`$lastMetricPlotBoxes, 
          NeuralNetworks`Private`NetTrain`$metricFlipper]}, <|{
        "Title" -> "Training Progress", "Type" -> "Grid", "Environment" -> 
         "Notebook", 
         "Parameters" -> {
          "Progress" :> NeuralNetworks`Private`NetTrain`$progressFraction, 
           " Progress" :> NeuralNetworks`Private`NetTrain`row[
             Round[NeuralNetworks`Private`NetTrain`$progressFraction 100], 
             "% ", "(round ", NeuralNetworks`Private`NetTrain`$round, 
             If[
              Not[
               TrueQ[NeuralNetworks`Private`NetTrain`$noRoundLimit]], {
              "/", NeuralNetworks`Private`NetTrain`$maxTrainingRoundsIndic}], 
             
             If[
              TrueQ[NeuralNetworks`Private`NetTrain`$showBatch], {
              ", batch ", NeuralNetworks`Private`NetTrain`$batch, "/", 
               NeuralNetworks`Private`NetTrain`$batchesPerRound}], ")"], 
           "Total" :> NeuralNetworks`Private`NetTrain`row[
            NeuralNetworks`Private`NetTrain`$absoluteBatch, 
             If[
              Not[
               TrueQ[NeuralNetworks`Private`NetTrain`$noBatchLimit]], {
              "/", NeuralNetworks`Private`NetTrain`$maxBatches}], 
             " batches, ", NeuralNetworks`Private`NetTrain`batchSize 
             NeuralNetworks`Private`NetTrain`$absoluteBatch, 
             If[
              Not[
               TrueQ[NeuralNetworks`Private`NetTrain`$noBatchLimit]], {
              "/", NeuralNetworks`Private`NetTrain`batchSize 
               NeuralNetworks`Private`NetTrain`$maxBatches}], " examples"], 
           "Time" :> If[
             TrueQ[NeuralNetworks`Private`NetTrain`$timeElapsed > 0], 
             NeuralNetworks`Private`NetTrain`row[
              GeneralUtilities`TimeString[
               Round[NeuralNetworks`Private`NetTrain`$timeElapsed]], 
              " elapsed, ", 
              If[
               And[
                TrueQ[
                 And[
                 NeuralNetworks`Private`NetTrain`$timeElapsed > 1, 
                  NeuralNetworks`Private`NetTrain`$absoluteBatch > 4]], 
                Not[NeuralNetworks`Private`NetTrain`$noRoundLimit]], {
                GeneralUtilities`TimeString[
                 Round[NeuralNetworks`Private`NetTrain`$timeRemaining]], 
                " left, "}], 
              NeuralNetworks`Private`NetTrain`rateForm[
              NeuralNetworks`Private`NetTrain`$batchRate 
               NeuralNetworks`Private`NetTrain`$updatesPerBatch 
               NeuralNetworks`Private`NetTrain`batchSize], " examples/s"], 
             ""], "Method" :> 
           Row[{"ADAM", " optimizer, ", "batch size ", 31, ", ", "CPU"}], "" :> 
           NeuralNetworks`Private`NetTrain`row["learning rate ", 
             ScientificForm[MXNetLink`$LastGlobalLearningRate, 3]], "" :> 
           NeuralNetworks`Private`NetTrain`fixedWidthRow[
             Map[
             NeuralNetworks`Private`NetTrain`keystyle, {"current", "round", 
               If[
                TrueQ[NeuralNetworks`Private`NetTrain`$doValidation], 
                "validation", Nothing]}]], Tooltip["loss", 
             Column[{
               Row[{"Measurement: ", "loss"}]}]] :> 
           NeuralNetworks`Private`NetTrain`fixedWidthRow[{
              If[
               And[
                TrueQ[True], 
                AssociationQ[
                NeuralNetworks`Private`NetTrain`$lastReportingObservation]], 
               NeuralNetworks`Private`NetTrain`lossForm[
                Identity[
                 Lookup[
                 NeuralNetworks`Private`NetTrain`$lastReportingObservation, 
                  "Loss", None]]], 
               NeuralNetworks`Private`NetTrain`keystyle["n.a."]], 
              If[
               AssociationQ[
               NeuralNetworks`Private`NetTrain`$roundMeasurements], 
               NeuralNetworks`Private`NetTrain`lossForm[
                Identity[
                 Lookup[
                 NeuralNetworks`Private`NetTrain`$roundMeasurements, "Loss", 
                  None]]], Nothing], 
              If[
               TrueQ[NeuralNetworks`Private`NetTrain`$doValidation], 
               If[
               NeuralNetworks`Private`NetTrain`$computingValidation, 
                "computing...", 
                NeuralNetworks`Private`NetTrain`lossForm[
                 Identity[
                  Lookup[
                  NeuralNetworks`Private`NetTrain`$validationMeasurements, 
                   "Loss", None]]]], Nothing]}], Center :> 
           NeuralNetworks`Private`NetTrain`stackMetricPlots[
            NeuralNetworks`Private`NetTrain`$lastLossPlotBoxes, 
             NeuralNetworks`Private`NetTrain`$lastMetricPlotBoxes, 
             NeuralNetworks`Private`NetTrain`$metricFlipper]}, "PreemptibleQ" -> 
         True, "ConsoleQ" -> True, "Evaluator" -> "Local", "EvaluationCell" -> 
         CellObject[
          "d302b6a4-fa28-4280-acbf-030e00db8954", 
           "73600028-24cd-404b-b394-faf859767367"], "TimeStart" -> 
         3.944650438987228`16.348583512764893*^9, "TimeStartLocal" -> 
         3.944650438987228`16.348583512764893*^9, "InitialTimeEstimate" -> 
         Indeterminate, "UpdateInterval" -> 0.4, "OuterUpdateInterval" -> 0.4,
          "Buttons" -> <|
          "Stop" :> (
            NeuralNetworks`Private`NetTrain`$manualStop = (
              NeuralNetworks`Private`NetTrain`$shouldStop = True); 
            NeuralNetworks`Private`NetTrain`$reasonTrainingStopped = 
             "ManualStop")|>, "Optional" -> {}, "ContainerQ" -> False, 
         "CreateContainerQ" -> False, "CurrentContainer" -> None, 
         "PreviousContainer" -> None, "ContainerName" -> None, "Cell" -> 
         Hold[Progress`ProgressDump`cell$35586], "Clock" :> 
         Dynamic[Progress`ProgressDump`clock$$], "Redraw" -> 
         Progress`ProgressDump`forceRedraw$$, "Open" :> 
         Dynamic[Progress`ProgressDump`open$$]}|>], StandardForm],
     ImageSizeCache->{437.4609375, {251.528076171875, 259.277099609375}},
     TrackedSymbols:>{Progress`ProgressDump`forceRedraw$$}], Refresh[
    Progress`ProgressDump`forceRedraw$$ = 
     With[{Progress`ProgressDump`values = Quiet[
          
          Values[{"Progress" :> 
            NeuralNetworks`Private`NetTrain`$progressFraction, " Progress" :> 
            NeuralNetworks`Private`NetTrain`row[
              Round[NeuralNetworks`Private`NetTrain`$progressFraction 100], 
              "% ", "(round ", NeuralNetworks`Private`NetTrain`$round, 
              If[
               Not[
                TrueQ[NeuralNetworks`Private`NetTrain`$noRoundLimit]], {
               "/", NeuralNetworks`Private`NetTrain`$maxTrainingRoundsIndic}], 
              If[
               TrueQ[NeuralNetworks`Private`NetTrain`$showBatch], {
               ", batch ", NeuralNetworks`Private`NetTrain`$batch, "/", 
                NeuralNetworks`Private`NetTrain`$batchesPerRound}], ")"], 
            "Total" :> NeuralNetworks`Private`NetTrain`row[
             NeuralNetworks`Private`NetTrain`$absoluteBatch, 
              If[
               Not[
                TrueQ[NeuralNetworks`Private`NetTrain`$noBatchLimit]], {
               "/", NeuralNetworks`Private`NetTrain`$maxBatches}], 
              " batches, ", NeuralNetworks`Private`NetTrain`batchSize 
              NeuralNetworks`Private`NetTrain`$absoluteBatch, 
              If[
               Not[
                TrueQ[NeuralNetworks`Private`NetTrain`$noBatchLimit]], {
               "/", NeuralNetworks`Private`NetTrain`batchSize 
                NeuralNetworks`Private`NetTrain`$maxBatches}], " examples"], 
            "Time" :> If[
              TrueQ[NeuralNetworks`Private`NetTrain`$timeElapsed > 0], 
              NeuralNetworks`Private`NetTrain`row[
               GeneralUtilities`TimeString[
                Round[NeuralNetworks`Private`NetTrain`$timeElapsed]], 
               " elapsed, ", 
               If[
                And[
                 TrueQ[
                  And[
                  NeuralNetworks`Private`NetTrain`$timeElapsed > 1, 
                   NeuralNetworks`Private`NetTrain`$absoluteBatch > 4]], 
                 Not[NeuralNetworks`Private`NetTrain`$noRoundLimit]], {
                 GeneralUtilities`TimeString[
                  Round[NeuralNetworks`Private`NetTrain`$timeRemaining]], 
                 " left, "}], 
               NeuralNetworks`Private`NetTrain`rateForm[
               NeuralNetworks`Private`NetTrain`$batchRate 
                NeuralNetworks`Private`NetTrain`$updatesPerBatch 
                NeuralNetworks`Private`NetTrain`batchSize], " examples/s"], 
              ""], "Method" :> 
            Row[{"ADAM", " optimizer, ", "batch size ", 31, ", ", "CPU"}], "" :> 
            NeuralNetworks`Private`NetTrain`row["learning rate ", 
              ScientificForm[MXNetLink`$LastGlobalLearningRate, 3]], "" :> 
            NeuralNetworks`Private`NetTrain`fixedWidthRow[
              Map[
              NeuralNetworks`Private`NetTrain`keystyle, {"current", "round", 
                If[
                 TrueQ[NeuralNetworks`Private`NetTrain`$doValidation], 
                 "validation", Nothing]}]], Tooltip["loss", 
              Column[{
                Row[{"Measurement: ", "loss"}]}]] :> 
            NeuralNetworks`Private`NetTrain`fixedWidthRow[{
               If[
                And[
                 TrueQ[True], 
                 AssociationQ[
                 NeuralNetworks`Private`NetTrain`$lastReportingObservation]], 
                
                NeuralNetworks`Private`NetTrain`lossForm[
                 Identity[
                  Lookup[
                  NeuralNetworks`Private`NetTrain`$lastReportingObservation, 
                   "Loss", None]]], 
                NeuralNetworks`Private`NetTrain`keystyle["n.a."]], 
               If[
                AssociationQ[
                NeuralNetworks`Private`NetTrain`$roundMeasurements], 
                NeuralNetworks`Private`NetTrain`lossForm[
                 Identity[
                  Lookup[
                  NeuralNetworks`Private`NetTrain`$roundMeasurements, "Loss", 
                   None]]], Nothing], 
               If[
                TrueQ[NeuralNetworks`Private`NetTrain`$doValidation], 
                If[
                NeuralNetworks`Private`NetTrain`$computingValidation, 
                 "computing...", 
                 NeuralNetworks`Private`NetTrain`lossForm[
                  Identity[
                   Lookup[
                   NeuralNetworks`Private`NetTrain`$validationMeasurements, 
                    "Loss", None]]]], Nothing]}], Center :> 
            NeuralNetworks`Private`NetTrain`stackMetricPlots[
             NeuralNetworks`Private`NetTrain`$lastLossPlotBoxes, 
              NeuralNetworks`Private`NetTrain`$lastMetricPlotBoxes, 
              NeuralNetworks`Private`NetTrain`$metricFlipper]}]]}, 
       Map[
       Position[Progress`ProgressDump`values, #, Infinity]& , {
        None, Automatic}]], UpdateInterval -> 
     Lookup[<|"Title" -> "Training Progress", "Type" -> "Grid", "Environment" -> 
        "Notebook", 
        "Parameters" -> {
         "Progress" :> NeuralNetworks`Private`NetTrain`$progressFraction, 
          " Progress" :> NeuralNetworks`Private`NetTrain`row[
            Round[NeuralNetworks`Private`NetTrain`$progressFraction 100], 
            "% ", "(round ", NeuralNetworks`Private`NetTrain`$round, 
            If[
             Not[
              TrueQ[NeuralNetworks`Private`NetTrain`$noRoundLimit]], {
             "/", NeuralNetworks`Private`NetTrain`$maxTrainingRoundsIndic}], 
            If[
             TrueQ[NeuralNetworks`Private`NetTrain`$showBatch], {
             ", batch ", NeuralNetworks`Private`NetTrain`$batch, "/", 
              NeuralNetworks`Private`NetTrain`$batchesPerRound}], ")"], 
          "Total" :> NeuralNetworks`Private`NetTrain`row[
           NeuralNetworks`Private`NetTrain`$absoluteBatch, 
            If[
             Not[
              TrueQ[NeuralNetworks`Private`NetTrain`$noBatchLimit]], {
             "/", NeuralNetworks`Private`NetTrain`$maxBatches}], " batches, ",
             NeuralNetworks`Private`NetTrain`batchSize 
            NeuralNetworks`Private`NetTrain`$absoluteBatch, 
            If[
             Not[
              TrueQ[NeuralNetworks`Private`NetTrain`$noBatchLimit]], {
             "/", NeuralNetworks`Private`NetTrain`batchSize 
              NeuralNetworks`Private`NetTrain`$maxBatches}], " examples"], 
          "Time" :> If[
            TrueQ[NeuralNetworks`Private`NetTrain`$timeElapsed > 0], 
            NeuralNetworks`Private`NetTrain`row[
             GeneralUtilities`TimeString[
              Round[NeuralNetworks`Private`NetTrain`$timeElapsed]], 
             " elapsed, ", 
             If[
              And[
               TrueQ[
                And[
                NeuralNetworks`Private`NetTrain`$timeElapsed > 1, 
                 NeuralNetworks`Private`NetTrain`$absoluteBatch > 4]], 
               Not[NeuralNetworks`Private`NetTrain`$noRoundLimit]], {
               GeneralUtilities`TimeString[
                Round[NeuralNetworks`Private`NetTrain`$timeRemaining]], 
               " left, "}], 
             NeuralNetworks`Private`NetTrain`rateForm[
             NeuralNetworks`Private`NetTrain`$batchRate 
              NeuralNetworks`Private`NetTrain`$updatesPerBatch 
              NeuralNetworks`Private`NetTrain`batchSize], " examples/s"], ""],
           "Method" :> 
          Row[{"ADAM", " optimizer, ", "batch size ", 31, ", ", "CPU"}], "" :> 
          NeuralNetworks`Private`NetTrain`row["learning rate ", 
            ScientificForm[MXNetLink`$LastGlobalLearningRate, 3]], "" :> 
          NeuralNetworks`Private`NetTrain`fixedWidthRow[
            Map[NeuralNetworks`Private`NetTrain`keystyle, {"current", "round", 
              If[
               TrueQ[NeuralNetworks`Private`NetTrain`$doValidation], 
               "validation", Nothing]}]], Tooltip["loss", 
            Column[{
              Row[{"Measurement: ", "loss"}]}]] :> 
          NeuralNetworks`Private`NetTrain`fixedWidthRow[{
             If[
              And[
               TrueQ[True], 
               AssociationQ[
               NeuralNetworks`Private`NetTrain`$lastReportingObservation]], 
              NeuralNetworks`Private`NetTrain`lossForm[
               Identity[
                Lookup[
                NeuralNetworks`Private`NetTrain`$lastReportingObservation, 
                 "Loss", None]]], 
              NeuralNetworks`Private`NetTrain`keystyle["n.a."]], 
             If[
              AssociationQ[
              NeuralNetworks`Private`NetTrain`$roundMeasurements], 
              NeuralNetworks`Private`NetTrain`lossForm[
               Identity[
                Lookup[
                NeuralNetworks`Private`NetTrain`$roundMeasurements, "Loss", 
                 None]]], Nothing], 
             If[
              TrueQ[NeuralNetworks`Private`NetTrain`$doValidation], 
              If[
              NeuralNetworks`Private`NetTrain`$computingValidation, 
               "computing...", 
               NeuralNetworks`Private`NetTrain`lossForm[
                Identity[
                 Lookup[
                 NeuralNetworks`Private`NetTrain`$validationMeasurements, 
                  "Loss", None]]]], Nothing]}], Center :> 
          NeuralNetworks`Private`NetTrain`stackMetricPlots[
           NeuralNetworks`Private`NetTrain`$lastLossPlotBoxes, 
            NeuralNetworks`Private`NetTrain`$lastMetricPlotBoxes, 
            NeuralNetworks`Private`NetTrain`$metricFlipper]}, "PreemptibleQ" -> 
        True, "ConsoleQ" -> True, "Evaluator" -> "Local", "EvaluationCell" -> 
        CellObject[
         "d302b6a4-fa28-4280-acbf-030e00db8954", 
          "73600028-24cd-404b-b394-faf859767367"], "TimeStart" -> 
        3.944650438987228`16.348583512764893*^9, "TimeStartLocal" -> 
        3.944650438987228`16.348583512764893*^9, "InitialTimeEstimate" -> 
        Indeterminate, "UpdateInterval" -> 0.4, "OuterUpdateInterval" -> 0.4, 
        "Buttons" -> <|
         "Stop" :> (
           NeuralNetworks`Private`NetTrain`$manualStop = (
             NeuralNetworks`Private`NetTrain`$shouldStop = True); 
           NeuralNetworks`Private`NetTrain`$reasonTrainingStopped = 
            "ManualStop")|>, "Optional" -> {}, "ContainerQ" -> False, 
        "CreateContainerQ" -> False, "CurrentContainer" -> None, 
        "PreviousContainer" -> None, "ContainerName" -> None, "Cell" -> 
        Hold[Progress`ProgressDump`cell$35586], "Clock" -> Dynamic[None]|>, 
       "OuterUpdateInterval"], TrackedSymbols :> {}],
    ImageSizeCache->{437.4609375, {251.528076171875, 259.277099609375}}]}, 
   All, 2],
  DynamicModuleValues:>{}]], "PrintTemporary",
 CellChangeTimes->{3.944621638989656*^9},
 CellLabel->"During evaluation of In[107]:=",
 CellID->292487291,ExpressionUUID->"ccff3253-d0cf-45a1-bf14-455943d93640"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1027},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->"RDS-book.nb",
ExpressionUUID->"8861bace-5584-420b-8e0c-c51fd7c6d3a1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[554, 20, 4177, 105, 130, "Text",ExpressionUUID->"67aab6c7-b186-4fbc-a04a-683b7453f682",
 CellID->912160115],
Cell[CellGroupData[{
Cell[4756, 129, 354, 4, 133, "Section",ExpressionUUID->"4fba7fed-0087-40ae-a263-55e5b8fe4d49",
 CellID->622795188],
Cell[5113, 135, 1069, 22, 190, "Note",ExpressionUUID->"2c93b86d-f330-4fb3-b295-cb7eba6efbe1",
 CellID->1196547533],
Cell[6185, 159, 955, 14, 311, "Text",ExpressionUUID->"abb872f7-a2dc-4890-b8f6-dd579fc3a08b",
 CellID->1246293200],
Cell[7143, 175, 578, 9, 163, "Text",ExpressionUUID->"dd6834d3-8b07-4ff0-b32e-52dd92adf9c3",
 CellID->2008925822],
Cell[7724, 186, 538, 8, 163, "Text",ExpressionUUID->"15d8bd33-7a5f-45ab-a19f-6af26b471ce2",
 CellID->197928578],
Cell[8265, 196, 725, 11, 193, "Text",ExpressionUUID->"24812bfa-4a87-4987-b27d-c7f190a51a05",
 CellID->463822985],
Cell[8993, 209, 1056, 15, 340, "Text",ExpressionUUID->"ebcdb152-6059-4fe4-9a3a-f92f6b81f7db",
 CellID->1865419725],
Cell[10052, 226, 478, 8, 134, "Text",ExpressionUUID->"9231f46d-9650-4936-b1f9-3e53ef184ce0",
 CellID->715490214],
Cell[10533, 236, 438, 7, 134, "Text",ExpressionUUID->"8deee16b-2967-44af-8828-ef043eb1ef0b",
 CellID->1500655646],
Cell[10974, 245, 438, 7, 134, "Text",ExpressionUUID->"ccf6795f-e6ad-46b6-b774-ff35b0735d98",
 CellID->791589773],
Cell[11415, 254, 592, 9, 163, "Text",ExpressionUUID->"e013528b-0e36-487b-ad40-20e70b658e51",
 CellID->1017817514],
Cell[12010, 265, 746, 15, 193, "Text",ExpressionUUID->"c40073ed-5fa8-4104-b1e7-bdafedf2af7c",
 CellID->1340308819],
Cell[12759, 282, 554, 10, 134, "Text",ExpressionUUID->"17c4f9d6-c903-4f41-84e9-854d20ad83fa",
 CellID->804463106],
Cell[13316, 294, 592, 10, 163, "Text",ExpressionUUID->"5ff1c90e-a71d-40a2-abad-41df7762f5e1",
 CellID->2104012558],
Cell[13911, 306, 612, 10, 193, "Text",ExpressionUUID->"382170c4-29ac-4181-94be-6f9a4adeac37",
 CellID->842850862],
Cell[14526, 318, 499, 9, 134, "Text",ExpressionUUID->"b098c35d-1d75-4033-9686-0f90b34a8367",
 CellID->954926975],
Cell[15028, 329, 807, 16, 193, "Text",ExpressionUUID->"3d04242b-8969-4950-b38b-5537c0dc1cf0",
 CellID->629017772],
Cell[15838, 347, 588, 9, 163, "Text",ExpressionUUID->"57f01989-d1f0-4ea3-b74b-4f1cf0444932",
 CellID->1062357157],
Cell[16429, 358, 562, 9, 163, "Text",ExpressionUUID->"9a90aa75-b335-42d1-9936-a5a66bd81146",
 CellID->1909147870],
Cell[CellGroupData[{
Cell[17016, 371, 186, 2, 68, "Subsection",ExpressionUUID->"ac6c0f46-b724-4c17-9fec-582bf3635ba5",
 CellID->921939233],
Cell[CellGroupData[{
Cell[17227, 377, 343, 6, 42, "ItemParagraph",ExpressionUUID->"428062be-c0c3-46c5-b6ca-0ec50d9370c7",
 CellID->54693742],
Cell[17573, 385, 364, 7, 66, "ItemParagraph",ExpressionUUID->"4db3b860-101b-491a-bb62-2060fd2aacad",
 CellID->539470276],
Cell[17940, 394, 396, 6, 42, "ItemParagraph",ExpressionUUID->"65d2e950-9785-4c38-bec3-811a0f36a5d7",
 CellID->200881860],
Cell[18339, 402, 278, 5, 42, "ItemParagraph",ExpressionUUID->"5e718b51-bbd4-4711-a30e-10a174a277fc",
 CellID->17506570],
Cell[18620, 409, 209, 3, 72, "Note",ExpressionUUID->"fb07644c-7efe-4947-9c0d-b1a933b5282e",
 CellID->1838721527]
}, Open  ]],
Cell[18844, 415, 475, 9, 104, "Text",ExpressionUUID->"8ebfd4e1-14c1-4664-a180-20a71c10502a",
 CellID->1933531287],
Cell[19322, 426, 452, 9, 104, "Text",ExpressionUUID->"5819979f-bf5c-4ee8-b4ab-75828162550d",
 CellID->188575394],
Cell[19777, 437, 448, 8, 104, "Text",ExpressionUUID->"6e4c77ca-d589-4116-8590-ded470b0cf66",
 CellID->801919873],
Cell[20228, 447, 483, 9, 104, "Text",ExpressionUUID->"f8e2f171-5f5b-4a46-a5ef-1a11ffc65588",
 CellID->592499881],
Cell[20714, 458, 175, 2, 65, "CodeCaption",ExpressionUUID->"fe4ef3ab-8f22-434d-a786-4de3a5923847",
 CellID->1092583201],
Cell[20892, 462, 1063, 16, 306, "comment",ExpressionUUID->"a39d6387-d665-4278-b73f-de85fe88e331",
 CellID->957375671],
Cell[CellGroupData[{
Cell[21980, 482, 1783, 44, 309, "Input",ExpressionUUID->"e116a5b0-b91e-4638-a2ea-95ef11389a4f",
 CellID->2002463053],
Cell[23766, 528, 226983, 4626, 371, "Output",ExpressionUUID->"6b8a70e3-ef29-49d8-8e15-fffa818f8d7c",
 CellID->2063829186],
Cell[250752, 5156, 2889, 69, 209, "Output",ExpressionUUID->"1bcd63b1-011c-48b7-9815-d52c016ecebe",
 CellID->621262758]
}, Open  ]],
Cell[253656, 5228, 172, 2, 65, "CodeCaption",ExpressionUUID->"150164d6-dc2e-4379-96ed-e40b24305adb",
 CellID->497681992],
Cell[253831, 5232, 869, 13, 225, "comment",ExpressionUUID->"fe597cd2-47e5-4a89-86d8-e9a105ed4b42",
 CellID->1563782102],
Cell[CellGroupData[{
Cell[254725, 5249, 856, 22, 145, "Input",ExpressionUUID->"ea8818b0-3402-4ed9-87a9-b404f7f05056",
 CellID->852840970],
Cell[255584, 5273, 118156, 2386, 471, "Output",ExpressionUUID->"e26168ae-0dc5-4329-86bc-40568b31e414",
 CellID->595758447],
Cell[373743, 7661, 173, 3, 45, "Output",ExpressionUUID->"2ba4d852-dd6d-480f-99ea-9683bb9a7bf4",
 CellID->1343456415]
}, Open  ]],
Cell[373931, 7667, 173, 2, 65, "CodeCaption",ExpressionUUID->"88cbe0b5-6b4b-4b8d-aff7-b60a661ea0ad",
 CellID->635327940],
Cell[374107, 7671, 598, 9, 198, "comment",ExpressionUUID->"bc262e96-5c53-420d-b171-3d17b7280bc0",
 CellID->1434963849],
Cell[CellGroupData[{
Cell[374730, 7684, 1582, 47, 262, "Input",ExpressionUUID->"83fd4a4d-5bb3-48ff-939c-2328a2c9d1dd",
 CellID->1271753736],
Cell[376315, 7733, 23575, 472, 90, "Output",ExpressionUUID->"e5529509-8570-4af6-8a96-a2dc6e2656ab",
 CellID->1962630137],
Cell[399893, 8207, 295, 7, 45, "Output",ExpressionUUID->"7694418d-2d0b-4c0b-8464-152880ea1d6e",
 CellID->575894639],
Cell[400191, 8216, 296, 7, 45, "Output",ExpressionUUID->"97bb3776-1d8c-4c01-82d5-6c6d40fef70e",
 CellID->352400644],
Cell[400490, 8225, 742, 20, 68, "Output",ExpressionUUID->"e97c26d9-f93c-4876-8b6a-a114e6fa377f",
 CellID->37725282],
Cell[401235, 8247, 974, 27, 91, "Output",ExpressionUUID->"4364f49a-834b-4073-b09a-2ed8d270178b",
 CellID->541138709]
}, Open  ]],
Cell[CellGroupData[{
Cell[402246, 8279, 347, 6, 42, "ItemParagraph",ExpressionUUID->"958d906f-a185-47cc-a1eb-66ce20af931f",
 CellID->177735147],
Cell[402596, 8287, 325, 6, 66, "ItemParagraph",ExpressionUUID->"bce72efe-864c-46c0-8320-4b18ca71a8ef",
 CellID->30744650],
Cell[402924, 8295, 377, 7, 66, "ItemParagraph",ExpressionUUID->"f4ad2b09-1db0-467b-bb52-03e95ea7d498",
 CellID->558128210],
Cell[403304, 8304, 205, 3, 72, "Note",ExpressionUUID->"66eac030-441f-476f-8b2c-b9d92d77890d",
 CellID->810962282]
}, Open  ]],
Cell[403524, 8310, 287, 5, 75, "Text",ExpressionUUID->"2cfe22f0-63dc-4155-833d-de48e6dccf8d",
 CellID->1951957785],
Cell[403814, 8317, 253, 5, 75, "Text",ExpressionUUID->"7898ab86-0d0d-48bd-b670-e408f59b6ec2",
 CellID->98845228],
Cell[404070, 8324, 172, 2, 65, "CodeCaption",ExpressionUUID->"6356c742-4f27-4d61-b712-e5b9a17764e5",
 CellID->878860648],
Cell[404245, 8328, 886, 13, 279, "comment",ExpressionUUID->"30b61746-d714-4c90-8ef8-790b67059bcc",
 CellID->724671897],
Cell[CellGroupData[{
Cell[405156, 8345, 1718, 41, 402, "Input",ExpressionUUID->"8c294210-adfb-41ae-9e06-bf069589cc74",
 CellID->1277593942],
Cell[406877, 8388, 33288, 658, 408, "Output",ExpressionUUID->"70b33d6a-3ecd-4084-9b0e-002cfe74c4d8",
 CellID->947381443],
Cell[440168, 9048, 65179, 1217, 236, "Output",ExpressionUUID->"f947499f-56f8-4346-94e6-d361e3e682ae",
 CellID->1196153643],
Cell[505350, 10267, 65384, 1218, 236, "Output",ExpressionUUID->"22a35d44-6ed9-4d94-b553-997811e6046f",
 CellID->1159858334],
Cell[570737, 11487, 65179, 1217, 236, "Output",ExpressionUUID->"fac015e7-d551-4cc0-88dd-8f783adc9ba9",
 CellID->1029955719],
Cell[635919, 12706, 173, 3, 45, "Output",ExpressionUUID->"56008ef6-e1ea-4b54-98b6-299e01ff410d",
 CellID->1747574413],
Cell[636095, 12711, 131893, 2448, 484, "Output",ExpressionUUID->"459d45ce-fcee-4db7-92aa-f1d7fde0b770",
 CellID->349319272],
Cell[767991, 15161, 300615, 5607, 408, "Output",ExpressionUUID->"91d9e507-0423-426e-b5aa-4e3a48ceae6e",
 CellID->1936197253]
}, Open  ]],
Cell[1068621, 20771, 174, 2, 65, "CodeCaption",ExpressionUUID->"6bab135a-1340-47d2-a8f9-6068adefb5f7",
 CellID->847528180],
Cell[1068798, 20775, 1260, 19, 306, "comment",ExpressionUUID->"df6f93d1-a58a-43ef-ad6a-5958643e9dbc",
 CellID->1032845936],
Cell[CellGroupData[{
Cell[1070083, 20798, 829, 20, 145, "Input",ExpressionUUID->"602b8db2-4b1d-4076-927a-a2db564444ae",
 CellID->1434114704],
Cell[1070915, 20820, 101809, 2069, 435, "Output",ExpressionUUID->"8e72c1ca-ec62-41cf-ba39-442c001b2256",
 CellID->1792348384],
Cell[1172727, 22891, 65179, 1217, 236, "Output",ExpressionUUID->"396fe0f5-f9fb-4d67-8a9f-f32eabc29a5b",
 CellID->1246173419],
Cell[1237909, 24110, 131326, 2439, 169, "Output",ExpressionUUID->"98babf99-6a14-4e2c-8d33-8468588c2782",
 CellID->28643942]
}, Open  ]],
Cell[1369250, 26552, 174, 2, 65, "CodeCaption",ExpressionUUID->"03c1a4b4-0d35-4e96-8e8d-6630daf89cde",
 CellID->382396266],
Cell[1369427, 26556, 694, 10, 198, "comment",ExpressionUUID->"8f8bb0bc-44d1-4815-a579-97f6651ad284",
 CellID->382364883],
Cell[CellGroupData[{
Cell[1370146, 26570, 499, 12, 74, "Input",ExpressionUUID->"001ca146-5525-4e84-913a-1900d87311d7",
 CellID->2125293798],
Cell[1370648, 26584, 62762, 1171, 236, "Output",ExpressionUUID->"a4f4b138-ea17-48cb-9af0-577b39d937a1",
 CellID->877048800],
Cell[1433413, 27757, 453, 13, 45, "Output",ExpressionUUID->"306443aa-ff30-494e-980b-53a6dd45ea7b",
 CellID->231428592]
}, Open  ]],
Cell[1433881, 27773, 173, 2, 65, "CodeCaption",ExpressionUUID->"103a4491-1454-4dbb-924e-87f3e5d156c6",
 CellID->1327205123],
Cell[1434057, 27777, 611, 10, 144, "comment",ExpressionUUID->"95aaa01b-04a7-470d-a6eb-62cfbffbaa7d",
 CellID->2101663652],
Cell[CellGroupData[{
Cell[1434693, 27791, 925, 25, 121, "Input",ExpressionUUID->"83fbe633-0e5f-4561-b999-54e97fc19464",
 CellID->533688799],
Cell[1435621, 27818, 24320, 491, 141, "Output",ExpressionUUID->"3a69e1bb-39f0-4fe5-afdf-2a8522fa7f96",
 CellID->1876370138],
Cell[1459944, 28311, 435, 12, 45, "Output",ExpressionUUID->"3ab146e3-95df-4954-bf11-2b64e1e94ef8",
 CellID->355553171],
Cell[1460382, 28325, 15069, 317, 288, "Output",ExpressionUUID->"d1febadb-8e3b-41cc-b844-f4f864ed0dae",
 CellID->1482639043]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1475500, 28648, 190, 2, 68, "Subsection",ExpressionUUID->"3d643ac4-d627-481f-b38a-8c115467c9e3",
 CellID->1016916310],
Cell[1475693, 28652, 467, 8, 91, "ItemParagraph",ExpressionUUID->"9b71d8b2-cf3c-4c9e-b604-4c73d234428c",
 CellID->386505054],
Cell[1476163, 28662, 651004, 10679, 668, "Text",ExpressionUUID->"82104a12-7c1c-41b3-9f1d-cc818f2c144a",
 CellID->1997995669],
Cell[2127170, 39343, 479, 9, 104, "Text",ExpressionUUID->"556048f2-3a85-450c-9dcf-547da5e08e15",
 CellID->111420744],
Cell[CellGroupData[{
Cell[2127674, 39356, 380, 7, 66, "ItemParagraph",ExpressionUUID->"cfc87b65-90ab-4d43-b04d-bf1f049f86c6",
 CellID->42704224],
Cell[2128057, 39365, 418, 7, 66, "ItemParagraph",ExpressionUUID->"2e3bcb92-ba98-4a99-9785-cd993f5a6d06",
 CellID->2007057266],
Cell[2128478, 39374, 363, 6, 66, "ItemParagraph",ExpressionUUID->"3466f98f-35cc-4f00-84ee-ffdc70bbad8a",
 CellID->326669783]
}, Open  ]],
Cell[2128856, 39383, 163, 2, 45, "Text",ExpressionUUID->"c9804898-a66a-4bb0-8b3b-1addd5fc081c",
 CellID->1812170925],
Cell[CellGroupData[{
Cell[2129044, 39389, 423, 8, 66, "ItemParagraph",ExpressionUUID->"78c76c88-77d4-44ab-9fea-1f142f469a70",
 CellID->1411103760],
Cell[2129470, 39399, 378, 7, 42, "ItemParagraph",ExpressionUUID->"2c18b1b5-7899-4025-ba25-8b5024b0d43c",
 CellID->484091863],
Cell[2129851, 39408, 374, 7, 42, "ItemParagraph",ExpressionUUID->"d7e49101-7a10-4458-a3d5-c39ee5a2f945",
 CellID->1082804842],
Cell[2130228, 39417, 395, 7, 66, "ItemParagraph",ExpressionUUID->"d5b0c65d-de19-4119-a454-9c8dfd2132e3",
 CellID->706222292],
Cell[2130626, 39426, 359, 7, 42, "ItemParagraph",ExpressionUUID->"c253f0e6-626e-4a3a-8095-d386907cd879",
 CellID->1090342507],
Cell[2130988, 39435, 384, 7, 42, "ItemParagraph",ExpressionUUID->"c73feeaa-fe30-40ce-8ca9-1c63035b040a",
 CellID->617291555],
Cell[2131375, 39444, 411, 8, 42, "ItemParagraph",ExpressionUUID->"a4a56622-44c3-4303-9fc3-8736fedef5cc",
 CellID->934610898],
Cell[2131789, 39454, 407, 8, 42, "ItemParagraph",ExpressionUUID->"ccab805d-894d-4c7b-88e9-75e0a3b5b4cc",
 CellID->392488438],
Cell[2132199, 39464, 398, 8, 42, "ItemParagraph",ExpressionUUID->"b6a69a17-a264-4e1f-8512-27faf6ffc10a",
 CellID->1781289280],
Cell[2132600, 39474, 408, 8, 42, "ItemParagraph",ExpressionUUID->"0735e3b0-d3cc-4b2f-9066-cbd613330461",
 CellID->1583794904],
Cell[2133011, 39484, 402, 8, 42, "ItemParagraph",ExpressionUUID->"3fc1bbf9-61bc-46b1-9ecb-9d1c40b03913",
 CellID->1356247075],
Cell[2133416, 39494, 399, 8, 42, "ItemParagraph",ExpressionUUID->"dcda3dc3-95ae-424d-b8e3-f5933a97ff4f",
 CellID->850586221],
Cell[2133818, 39504, 403, 8, 42, "ItemParagraph",ExpressionUUID->"e44b8ac4-fa7f-4dc7-aa10-525b734187e5",
 CellID->307147793],
Cell[2134224, 39514, 415, 8, 66, "ItemParagraph",ExpressionUUID->"ccd8c90c-e3c0-4f25-af78-e90cca9b269b",
 CellID->330400683],
Cell[2134642, 39524, 415, 8, 66, "ItemParagraph",ExpressionUUID->"bc0cfa22-7653-4cfd-96cc-8033573f3c6b",
 CellID->259853817],
Cell[2135060, 39534, 411, 8, 66, "ItemParagraph",ExpressionUUID->"cded2c86-f65c-4ace-bd8b-0de7b39fe567",
 CellID->459770610],
Cell[2135474, 39544, 399, 8, 42, "ItemParagraph",ExpressionUUID->"d9be08d7-edcf-4c01-b1e3-87a4fa344a34",
 CellID->1574122401],
Cell[2135876, 39554, 392, 8, 42, "ItemParagraph",ExpressionUUID->"c754a1f8-0311-4212-9c3c-9f8c9428d074",
 CellID->1995830156],
Cell[2136271, 39564, 396, 8, 42, "ItemParagraph",ExpressionUUID->"d42484a8-3a0a-48b8-94fd-115716a20b5d",
 CellID->1194041134],
Cell[2136670, 39574, 419, 8, 66, "ItemParagraph",ExpressionUUID->"91f93825-8e6e-4677-b63a-4487f22c1afa",
 CellID->682199208],
Cell[2137092, 39584, 414, 8, 66, "ItemParagraph",ExpressionUUID->"83db5c03-1808-4f2c-a613-2dfa031a52a0",
 CellID->882465051],
Cell[2137509, 39594, 411, 8, 66, "ItemParagraph",ExpressionUUID->"58795ab8-394f-45a8-ab99-3fff31e2a2b0",
 CellID->717386281],
Cell[2137923, 39604, 384, 8, 42, "ItemParagraph",ExpressionUUID->"690c81ae-6c72-44d6-87df-d8f4933913e2",
 CellID->184168501],
Cell[2138310, 39614, 410, 8, 66, "ItemParagraph",ExpressionUUID->"46e7e492-60ad-45c0-9566-405718878317",
 CellID->1065388809],
Cell[2138723, 39624, 402, 8, 42, "ItemParagraph",ExpressionUUID->"7661a62d-83a5-44ab-b9c7-8b5483c4660c",
 CellID->1161297326],
Cell[2139128, 39634, 398, 8, 42, "ItemParagraph",ExpressionUUID->"8b2b2530-fe78-40d5-885b-3131d29ecb65",
 CellID->401921484],
Cell[2139529, 39644, 397, 8, 42, "ItemParagraph",ExpressionUUID->"92206023-b540-4841-a58e-92e5a687b6db",
 CellID->1475921214],
Cell[2139929, 39654, 395, 8, 42, "ItemParagraph",ExpressionUUID->"bbf0b337-5733-4aeb-ad4d-a722280b3683",
 CellID->1762643871],
Cell[2140327, 39664, 388, 8, 42, "ItemParagraph",ExpressionUUID->"1fef4334-df3e-4c50-bea4-5e664a3440c3",
 CellID->1490701495],
Cell[2140718, 39674, 400, 8, 42, "ItemParagraph",ExpressionUUID->"20ec6dfc-cd59-461d-be2b-b4cf5414ad68",
 CellID->638534051],
Cell[2141121, 39684, 446, 9, 66, "ItemParagraph",ExpressionUUID->"b00ad6fa-c064-4bff-8c6d-4abd531885b5",
 CellID->740605196],
Cell[2141570, 39695, 436, 8, 66, "ItemParagraph",ExpressionUUID->"f8a5bca5-e072-4050-adf1-630e56fc0510",
 CellID->854836459],
Cell[2142009, 39705, 464, 9, 66, "ItemParagraph",ExpressionUUID->"9b99cb5e-bf51-48af-b59c-d228011f2d85",
 CellID->300229605],
Cell[2142476, 39716, 463, 9, 66, "ItemParagraph",ExpressionUUID->"9c20a39c-a51b-4dd6-b4ad-362b1086dd28",
 CellID->1293312938],
Cell[2142942, 39727, 423, 8, 66, "ItemParagraph",ExpressionUUID->"02b13ba1-5b84-4de2-983a-f19b16342e05",
 CellID->870566764],
Cell[2143368, 39737, 463, 9, 93, "ItemParagraph",ExpressionUUID->"990f06d3-2dba-4f49-b2da-275cf7637bda",
 CellID->1837405828],
Cell[2143834, 39748, 475, 8, 66, "ItemParagraph",ExpressionUUID->"200eec97-b7f9-4ff9-8bbd-b62488f686c2",
 CellGroupingRules->{"GroupTogetherNestedGrouping", 15000.},
 CellID->1063643933],
Cell[2144312, 39758, 367, 7, 42, "ItemParagraph",ExpressionUUID->"32966986-7f2f-4cc0-a34b-30c7e7051982",
 CellID->1636673273],
Cell[2144682, 39767, 363, 7, 42, "ItemParagraph",ExpressionUUID->"76a9c85b-2a57-4b0d-af92-13fe6d51e0a0",
 CellID->1660358284],
Cell[2145048, 39776, 381, 8, 42, "ItemParagraph",ExpressionUUID->"b8752c65-61e6-444a-8766-e0181545a48e",
 CellID->174139208],
Cell[2145432, 39786, 421, 9, 42, "ItemParagraph",ExpressionUUID->"27a82d4a-1815-4414-b33d-b141c94a90c9",
 CellID->1656360832],
Cell[2145856, 39797, 378, 8, 42, "ItemParagraph",ExpressionUUID->"fc24b31d-c28f-483c-b1dc-d30b8da70edd",
 CellID->1336512512],
Cell[2146237, 39807, 397, 8, 42, "ItemParagraph",ExpressionUUID->"8253b7df-0f59-4a2f-bd71-0f8cff3555c5",
 CellID->1685857694],
Cell[2146637, 39817, 356, 7, 42, "ItemParagraph",ExpressionUUID->"4c840e0a-7bee-4639-9a1d-64da4b4718be",
 CellID->649463758],
Cell[2146996, 39826, 381, 8, 42, "ItemParagraph",ExpressionUUID->"8f41b85a-cd70-4809-a9ad-361bd36b86c6",
 CellID->319944176],
Cell[2147380, 39836, 399, 8, 42, "ItemParagraph",ExpressionUUID->"b72ca4b5-ebde-4ce5-b6c6-40e28f47f6ea",
 CellID->1661363902],
Cell[2147782, 39846, 410, 8, 66, "ItemParagraph",ExpressionUUID->"442a3c61-7478-4d08-9149-f2c3403e9243",
 CellID->869391228],
Cell[2148195, 39856, 370, 7, 42, "ItemParagraph",ExpressionUUID->"af04777c-2b7e-4f75-b009-43ce35098661",
 CellID->1420562160],
Cell[2148568, 39865, 389, 8, 42, "ItemParagraph",ExpressionUUID->"4e62a2e2-fc1c-4d24-a297-eae0ada5eb73",
 CellID->1192849681],
Cell[2148960, 39875, 374, 7, 42, "ItemParagraph",ExpressionUUID->"a9ccfe00-986d-4380-afee-80dd7028ae90",
 CellID->14279416],
Cell[2149337, 39884, 349, 7, 42, "ItemParagraph",ExpressionUUID->"78513335-a93e-4c9b-b23a-576cc3979858",
 CellID->30449445],
Cell[2149689, 39893, 370, 7, 42, "ItemParagraph",ExpressionUUID->"4a39b998-250b-4fc8-94b9-f293f2613ff3",
 CellID->1489030348],
Cell[2150062, 39902, 374, 7, 42, "ItemParagraph",ExpressionUUID->"d24531dc-2549-4eb6-8350-60bd5f2a3f02",
 CellID->1990375792],
Cell[2150439, 39911, 374, 7, 42, "ItemParagraph",ExpressionUUID->"3ffb0a24-7967-4c97-b745-1e526bb33e00",
 CellID->248889796],
Cell[2150816, 39920, 394, 8, 66, "ItemParagraph",ExpressionUUID->"726de7a9-a55a-4d8e-b346-750ba976ea82",
 CellID->75158417],
Cell[2151213, 39930, 366, 7, 42, "ItemParagraph",ExpressionUUID->"fd71ef26-e2e7-4284-8241-8a955b817c8e",
 CellID->415241336],
Cell[2151582, 39939, 412, 8, 66, "ItemParagraph",ExpressionUUID->"2b74b047-f89e-486f-945f-ec2c17394af7",
 CellID->945018067],
Cell[2151997, 39949, 376, 7, 42, "ItemParagraph",ExpressionUUID->"cd7b65f2-2227-46bc-9020-46509bb202b5",
 CellID->596507684],
Cell[2152376, 39958, 355, 7, 42, "ItemParagraph",ExpressionUUID->"2f7a44a7-b6bb-4f6b-bb2e-4bb351fa0fa4",
 CellID->1932329870],
Cell[2152734, 39967, 381, 7, 42, "ItemParagraph",ExpressionUUID->"de0ed78d-d174-4a27-a64e-5959df6522f5",
 CellID->1307637338],
Cell[2153118, 39976, 388, 8, 42, "ItemParagraph",ExpressionUUID->"6211987b-3640-45d5-b966-7569e4b13576",
 CellID->221755536],
Cell[2153509, 39986, 354, 7, 42, "ItemParagraph",ExpressionUUID->"ca96d6c7-87bd-41df-bde1-12294b2d5774",
 CellID->634742132],
Cell[2153866, 39995, 371, 7, 42, "ItemParagraph",ExpressionUUID->"39385e27-9635-48cf-9526-b86e7e386236",
 CellID->289374396],
Cell[2154240, 40004, 378, 7, 42, "ItemParagraph",ExpressionUUID->"59d0f38f-1c1d-4069-a88d-f056705c0b3f",
 CellID->1148334821],
Cell[2154621, 40013, 339, 7, 42, "ItemParagraph",ExpressionUUID->"b5e46b24-f185-44a9-bd74-45c482b04b28",
 CellID->447466540],
Cell[2154963, 40022, 359, 7, 42, "ItemParagraph",ExpressionUUID->"26126dc3-3b00-440f-bdba-7e0d58e5c644",
 CellID->752009936],
Cell[2155325, 40031, 367, 7, 42, "ItemParagraph",ExpressionUUID->"3e545eb2-88f7-4595-b244-0f7f0607dee5",
 CellID->234552848],
Cell[2155695, 40040, 416, 8, 66, "ItemParagraph",ExpressionUUID->"c47e42f7-f2b3-48f4-abe7-cd796f43dfb1",
 CellID->1838496056],
Cell[2156114, 40050, 403, 8, 42, "ItemParagraph",ExpressionUUID->"1601eae3-d39f-43f9-ad04-484ba059af96",
 CellID->786765837],
Cell[2156520, 40060, 354, 7, 42, "ItemParagraph",ExpressionUUID->"7cc3fdd4-7a36-4880-abe1-664b23812e09",
 CellID->1006660943],
Cell[2156877, 40069, 373, 8, 42, "ItemParagraph",ExpressionUUID->"31f1bfc5-5fd3-4188-bdcd-eb91528a2f4d",
 CellID->1316062047],
Cell[2157253, 40079, 365, 7, 42, "ItemParagraph",ExpressionUUID->"e6d036fe-eb16-411c-a83b-548fbd9a1e07",
 CellID->92759283],
Cell[2157621, 40088, 364, 7, 42, "ItemParagraph",ExpressionUUID->"7c9aa92a-9f0a-4e91-bb1e-9829a6a6e500",
 CellID->2036337608],
Cell[2157988, 40097, 387, 8, 42, "ItemParagraph",ExpressionUUID->"86cb0ea5-8c6f-4491-aa2b-a422d4a87659",
 CellID->1831083673],
Cell[2158378, 40107, 381, 8, 42, "ItemParagraph",ExpressionUUID->"74d7caed-9ca6-43dc-a2e0-d6750338efe1",
 CellID->2007334207],
Cell[2158762, 40117, 426, 9, 42, "ItemParagraph",ExpressionUUID->"666b2958-be5f-4b4c-988f-03a477af7c3e",
 CellID->56559210],
Cell[2159191, 40128, 421, 9, 42, "ItemParagraph",ExpressionUUID->"d8b6be95-9651-4d9f-b1f4-8424cff80c24",
 CellID->132960882],
Cell[2159615, 40139, 396, 8, 66, "ItemParagraph",ExpressionUUID->"74635ed6-83cd-4592-a0d1-c26484ced10c",
 CellID->1690124213],
Cell[2160014, 40149, 392, 8, 42, "ItemParagraph",ExpressionUUID->"c5164358-3ee4-445c-8374-cd11cfa03b47",
 CellID->2051696004],
Cell[2160409, 40159, 382, 8, 42, "ItemParagraph",ExpressionUUID->"52b2bae9-e94f-44a8-b32c-a62d267b7c73",
 CellID->130281156],
Cell[2160794, 40169, 388, 8, 66, "ItemParagraph",ExpressionUUID->"555b9799-6b00-4328-83e7-e6dca0bf4632",
 CellID->1221883523],
Cell[2161185, 40179, 373, 8, 66, "ItemParagraph",ExpressionUUID->"c5560502-50bc-4157-a3c9-0d6b2abd0296",
 CellID->855426985],
Cell[2161561, 40189, 364, 6, 66, "ItemParagraph",ExpressionUUID->"73c54e2f-cd8f-44ec-b65f-f2bed2c1d64a",
 CellID->1766224930]
}, Open  ]],
Cell[2161940, 40198, 255, 6, 45, "Text",ExpressionUUID->"d60671a1-3b88-47cb-baeb-36284b0c1055",
 CellID->1957152979],
Cell[CellGroupData[{
Cell[2162220, 40208, 366, 7, 42, "ItemParagraph",ExpressionUUID->"1394c348-cc54-4a37-882b-12e40f03fe7c",
 CellID->606157538],
Cell[2162589, 40217, 378, 8, 42, "ItemParagraph",ExpressionUUID->"20f5b7ef-e7a3-4f66-95d2-9ee8bd4ac35e",
 CellID->1721075207],
Cell[2162970, 40227, 372, 7, 42, "ItemParagraph",ExpressionUUID->"1aaea544-e65e-4292-a00b-9e01a827da01",
 CellID->884693009],
Cell[2163345, 40236, 376, 8, 42, "ItemParagraph",ExpressionUUID->"6d19f778-9729-4f9f-ba07-52e713248e52",
 CellID->779084220],
Cell[2163724, 40246, 408, 8, 42, "ItemParagraph",ExpressionUUID->"0b206680-63df-48ac-a164-8cae5f52d71b",
 CellID->1290239691],
Cell[2164135, 40256, 355, 7, 42, "ItemParagraph",ExpressionUUID->"f7421397-570b-4c8f-84cc-15cd03173895",
 CellID->1661295185],
Cell[2164493, 40265, 369, 8, 42, "ItemParagraph",ExpressionUUID->"ee649d42-a482-4f53-96e3-cb3db87824b1",
 CellID->512365088],
Cell[2164865, 40275, 383, 8, 42, "ItemParagraph",ExpressionUUID->"5dd94ad7-7cad-4c8e-8cd3-2e569fc53d9b",
 CellID->1031228036],
Cell[2165251, 40285, 373, 7, 42, "ItemParagraph",ExpressionUUID->"2ca5cf22-f0b6-4ade-a1d4-25acf2fbcdbc",
 CellID->1893429863],
Cell[2165627, 40294, 330, 7, 42, "ItemParagraph",ExpressionUUID->"22c81449-0d71-4bb5-88cd-2879b0bdc565",
 CellID->739189731],
Cell[2165960, 40303, 369, 7, 42, "ItemParagraph",ExpressionUUID->"7da6ad28-9338-4ef8-8578-45d9b1038ec4",
 CellID->1950590540],
Cell[2166332, 40312, 452, 9, 66, "ItemParagraph",ExpressionUUID->"6f0f4824-d10c-4202-8ebd-b72e8b3a24d0",
 CellID->683138949],
Cell[2166787, 40323, 382, 8, 42, "ItemParagraph",ExpressionUUID->"eee6fed2-f952-4256-8c8c-89eed4c86858",
 CellID->1225747907],
Cell[2167172, 40333, 374, 7, 42, "ItemParagraph",ExpressionUUID->"76267c2e-5c19-4672-ac11-f8ecdb3cb2fb",
 CellID->378254588],
Cell[2167549, 40342, 373, 8, 42, "ItemParagraph",ExpressionUUID->"a1aa6993-aa9b-4ec0-b1b3-f92a9773d068",
 CellID->1905329643],
Cell[2167925, 40352, 358, 7, 42, "ItemParagraph",ExpressionUUID->"95551b4f-ed9e-4d30-933b-8ce85b7eb7c3",
 CellID->559687120],
Cell[2168286, 40361, 367, 8, 42, "ItemParagraph",ExpressionUUID->"a770da5b-f4bd-45ea-90b2-1f0f430782e1",
 CellID->1583926480],
Cell[2168656, 40371, 390, 8, 42, "ItemParagraph",ExpressionUUID->"9f164c0d-35e1-46bd-85db-dbb997356494",
 CellID->29166055],
Cell[2169049, 40381, 350, 7, 42, "ItemParagraph",ExpressionUUID->"fb566595-5513-42e0-942e-54c8d1be6821",
 CellID->1178026604],
Cell[2169402, 40390, 360, 7, 42, "ItemParagraph",ExpressionUUID->"dbd012cf-d70d-41e9-b374-6274e75e1b79",
 CellID->882872307],
Cell[2169765, 40399, 378, 7, 42, "ItemParagraph",ExpressionUUID->"973f83a0-da09-46c7-86f6-d4ad81cdfcf9",
 CellID->2121925477],
Cell[2170146, 40408, 426, 8, 66, "ItemParagraph",ExpressionUUID->"d84c4fb5-298b-430b-b505-29e83e87a126",
 CellID->807001632],
Cell[2170575, 40418, 361, 7, 42, "ItemParagraph",ExpressionUUID->"cfab095c-c725-4690-b5da-dda42510c811",
 CellID->132937754],
Cell[2170939, 40427, 365, 7, 42, "ItemParagraph",ExpressionUUID->"02412e4e-f1dc-4291-9842-a46aed813fec",
 CellID->2032289507],
Cell[2171307, 40436, 394, 8, 42, "ItemParagraph",ExpressionUUID->"8c484990-4164-453f-b113-96ed521273df",
 CellID->571508408],
Cell[2171704, 40446, 395, 8, 42, "ItemParagraph",ExpressionUUID->"a4ebe216-9d88-4574-a278-d848f70ee958",
 CellID->1477440555],
Cell[2172102, 40456, 382, 8, 42, "ItemParagraph",ExpressionUUID->"918e4913-e1a7-4bcc-8418-414ff792d0ce",
 CellID->1992976616],
Cell[2172487, 40466, 352, 7, 42, "ItemParagraph",ExpressionUUID->"af4daee0-8b3c-4014-a752-82dd822323b1",
 CellID->2004404565],
Cell[2172842, 40475, 381, 8, 42, "ItemParagraph",ExpressionUUID->"add5e2ba-90db-4c76-bba3-5fe79f5e113b",
 CellID->1613599396],
Cell[2173226, 40485, 375, 7, 42, "ItemParagraph",ExpressionUUID->"d5c37cac-393c-475f-9188-6417eec907b3",
 CellID->1067009156],
Cell[2173604, 40494, 368, 7, 42, "ItemParagraph",ExpressionUUID->"f971af66-07a9-4461-bc02-d9726e2c6a46",
 CellID->720717640],
Cell[2173975, 40503, 370, 7, 42, "ItemParagraph",ExpressionUUID->"b36a0ecc-280f-4ba7-8927-91457e233a88",
 CellID->36546538],
Cell[2174348, 40512, 364, 7, 42, "ItemParagraph",ExpressionUUID->"bb465310-fcd8-4514-b85b-6e5188063876",
 CellID->187344034],
Cell[2174715, 40521, 394, 7, 42, "ItemParagraph",ExpressionUUID->"b4be5328-5f95-499c-96e6-7ce3c3870052",
 CellID->944530959],
Cell[2175112, 40530, 378, 7, 42, "ItemParagraph",ExpressionUUID->"7fbc602a-62ed-410d-b2e1-5a10872a4ba9",
 CellID->1453195467],
Cell[2175493, 40539, 412, 8, 66, "ItemParagraph",ExpressionUUID->"ebcb7122-a056-4481-ab6f-0cdb2636f70b",
 CellID->802036012],
Cell[2175908, 40549, 411, 8, 66, "ItemParagraph",ExpressionUUID->"e037fafb-c815-4bd8-abd1-0fb74b48c6e6",
 CellID->804741556],
Cell[2176322, 40559, 440, 8, 66, "ItemParagraph",ExpressionUUID->"e862a718-764c-473f-b74e-1bfbd77d3e57",
 CellID->1404171685],
Cell[2176765, 40569, 438, 8, 66, "ItemParagraph",ExpressionUUID->"bb6880dc-6287-4a4f-9ff8-f6ae93cf70be",
 CellID->1713776889],
Cell[2177206, 40579, 396, 8, 42, "ItemParagraph",ExpressionUUID->"d42fb79f-63f0-4de8-a9e8-c1579b3b2bc5",
 CellID->222373340],
Cell[2177605, 40589, 411, 8, 66, "ItemParagraph",ExpressionUUID->"a02d2b63-8f2f-4b92-a289-41edf899565f",
 CellID->55656390],
Cell[2178019, 40599, 209, 3, 72, "Note",ExpressionUUID->"9bf96e92-7316-4b6f-ae62-d2279070effa",
 CellID->1316823341]
}, Open  ]],
Cell[2178243, 40605, 368, 7, 75, "Text",ExpressionUUID->"7cd001c9-5c66-4461-9a3e-6c6817d6d28d",
 CellID->89691735],
Cell[2178614, 40614, 386, 6, 104, "Text",ExpressionUUID->"3725221e-d06c-45a9-81c0-eb1cb44de704",
 CellID->693436511],
Cell[2179003, 40622, 538, 10, 104, "Text",ExpressionUUID->"2a22717f-d292-483c-b95d-09fc933ed2af",
 CellID->678507557],
Cell[2179544, 40634, 1487, 31, 193, "Text",ExpressionUUID->"6e405d03-35ab-4e41-bf86-a7e40b77eaa9",
 CellID->1724601743],
Cell[2181034, 40667, 390, 7, 93, "ItemParagraph",ExpressionUUID->"35e86d1d-67d9-496c-85b3-8f9bbcc0bcfb",
 CellID->1093646728],
Cell[2181427, 40676, 261, 6, 45, "Text",ExpressionUUID->"ae00f12d-12c1-43c2-9bdc-f07f4093b226",
 CellID->1324678712],
Cell[CellGroupData[{
Cell[2181713, 40686, 301, 6, 42, "ItemParagraph",ExpressionUUID->"a6ae36c7-fab8-4797-8ff9-19932dfc9f71",
 CellID->912144135],
Cell[2182017, 40694, 314, 6, 42, "ItemParagraph",ExpressionUUID->"12a19ed5-8995-4792-9947-6292314f3cd3",
 CellID->32179794],
Cell[2182334, 40702, 363, 7, 42, "ItemParagraph",ExpressionUUID->"c26ab06b-b51e-487e-801c-1fbf49ef1c7a",
 CellID->2039836087],
Cell[2182700, 40711, 380, 7, 42, "ItemParagraph",ExpressionUUID->"3dd7732d-d559-4343-81ff-4295e8351671",
 CellID->1813849018],
Cell[2183083, 40720, 358, 7, 42, "ItemParagraph",ExpressionUUID->"04da175b-94fd-48fd-8a34-ae5d323dd6ff",
 CellID->864654230],
Cell[2183444, 40729, 374, 7, 42, "ItemParagraph",ExpressionUUID->"826c8fd9-86d1-4050-94ae-f1d831f8e914",
 CellID->931677985],
Cell[2183821, 40738, 364, 7, 42, "ItemParagraph",ExpressionUUID->"7590b9dc-6406-4909-9cb8-0cb974020033",
 CellID->485731668]
}, Open  ]],
Cell[2184200, 40748, 278, 6, 75, "Text",ExpressionUUID->"c35955ec-8fc9-4ad0-a4c2-9e679f6f4bdf",
 CellID->1763401830],
Cell[CellGroupData[{
Cell[2184503, 40758, 312, 6, 42, "ItemParagraph",ExpressionUUID->"6596c275-b5ff-47bf-adb5-7e6eff35bd54",
 CellID->72744563],
Cell[2184818, 40766, 427, 9, 42, "ItemParagraph",ExpressionUUID->"9595c00d-0c1c-4074-8d3d-c0da8fcab321",
 CellID->2069211933],
Cell[2185248, 40777, 368, 7, 42, "ItemParagraph",ExpressionUUID->"22fc332a-5bc6-4488-8f6c-0e52dcee12f5",
 CellID->353700415],
Cell[2185619, 40786, 366, 7, 42, "ItemParagraph",ExpressionUUID->"f3692ad1-1d7d-4bf8-984d-41b59bcc5928",
 CellID->2085395126],
Cell[2185988, 40795, 386, 8, 42, "ItemParagraph",ExpressionUUID->"912df69f-0673-47ab-8a06-60273c52d990",
 CellID->411935780],
Cell[2186377, 40805, 309, 6, 42, "ItemParagraph",ExpressionUUID->"30eed65b-41e1-4b4a-af0c-1f7e45d1b446",
 CellID->1077665511],
Cell[2186689, 40813, 346, 7, 42, "ItemParagraph",ExpressionUUID->"5667433c-2098-445f-bb16-8703f499a2b4",
 CellID->321786811],
Cell[2187038, 40822, 367, 7, 42, "ItemParagraph",ExpressionUUID->"44877c7f-037f-43fd-9928-1216d689097c",
 CellID->713269140],
Cell[2187408, 40831, 429, 9, 42, "ItemParagraph",ExpressionUUID->"3258e634-883a-4b23-ab72-bdb612b0e05d",
 CellID->535053637],
Cell[2187840, 40842, 345, 7, 42, "ItemParagraph",ExpressionUUID->"9edf484d-9fec-4373-9b3e-3f437760dc04",
 CellID->111290354],
Cell[2188188, 40851, 401, 9, 42, "ItemParagraph",ExpressionUUID->"ac76088f-efce-4906-bd8d-688c16e8e0ea",
 CellID->968949682],
Cell[2188592, 40862, 363, 7, 42, "ItemParagraph",ExpressionUUID->"f4725e16-6130-4949-9a1a-5599de2b14af",
 CellID->580979945],
Cell[2188958, 40871, 313, 6, 42, "ItemParagraph",ExpressionUUID->"1607ddf8-19cd-4eee-8fc6-f609f5a9937c",
 CellID->621748090],
Cell[2189274, 40879, 366, 7, 42, "ItemParagraph",ExpressionUUID->"e3f07a18-edfc-4863-b76f-192723cac0b4",
 CellID->591830936],
Cell[2189643, 40888, 363, 7, 42, "ItemParagraph",ExpressionUUID->"d96f486c-a22e-4b78-beb3-9b57c2620dee",
 CellID->1691741076],
Cell[2190009, 40897, 314, 6, 42, "ItemParagraph",ExpressionUUID->"d1c8301f-5f7d-4112-957c-b4d577f89ec8",
 CellID->1024801987],
Cell[2190326, 40905, 365, 7, 42, "ItemParagraph",ExpressionUUID->"6796cc5d-a709-448e-8fcb-1cc53268a4d9",
 CellID->1091977729],
Cell[2190694, 40914, 352, 7, 42, "ItemParagraph",ExpressionUUID->"1f4771f4-1c80-4afb-b340-350ae04c1448",
 CellID->2136626791],
Cell[2191049, 40923, 349, 7, 42, "ItemParagraph",ExpressionUUID->"71d6ed05-cded-43f1-a78d-7af65032a39c",
 CellID->1765013086],
Cell[2191401, 40932, 369, 7, 42, "ItemParagraph",ExpressionUUID->"3c0c4b06-24f6-4bfe-828d-7a04941ad3be",
 CellID->1770702165],
Cell[2191773, 40941, 378, 7, 42, "ItemParagraph",ExpressionUUID->"6f59ab5d-9d04-4a58-ac51-08b4025c9cd8",
 CellID->1560784750],
Cell[2192154, 40950, 347, 7, 42, "ItemParagraph",ExpressionUUID->"4315e64c-d071-4ba0-98ba-2351893edb9b",
 CellID->971829087],
Cell[2192504, 40959, 351, 7, 42, "ItemParagraph",ExpressionUUID->"46ac9e15-8ca9-480c-ac29-6e1b2326b8aa",
 CellID->1970918951],
Cell[2192858, 40968, 346, 7, 42, "ItemParagraph",ExpressionUUID->"e505939f-9fbf-46e0-babc-e0c896c794ff",
 CellID->1476524962],
Cell[2193207, 40977, 385, 8, 42, "ItemParagraph",ExpressionUUID->"670e3ad3-ffb8-4d3c-b4db-dbd7fa5a8c16",
 CellID->2093470432],
Cell[2193595, 40987, 349, 7, 42, "ItemParagraph",ExpressionUUID->"75c4bfe7-d101-4d4b-8604-9a8b5a2a76cf",
 CellID->1418843434],
Cell[2193947, 40996, 362, 7, 42, "ItemParagraph",ExpressionUUID->"b3fbba00-d599-4cb3-a6d8-9705e5071101",
 CellID->1401395108],
Cell[2194312, 41005, 350, 7, 42, "ItemParagraph",ExpressionUUID->"658c38b4-b5f8-4e40-964e-dc76fdf4971a",
 CellID->455456640],
Cell[2194665, 41014, 312, 6, 42, "ItemParagraph",ExpressionUUID->"e5f4e1bb-a8ba-43b0-8596-ffa300d3c9bd",
 CellID->1833583575],
Cell[2194980, 41022, 288, 6, 42, "ItemParagraph",ExpressionUUID->"afe86a6a-e608-427b-bbd6-488a3ebacd74",
 CellID->1754663765]
}, Open  ]],
Cell[2195283, 41031, 362, 8, 75, "Text",ExpressionUUID->"844dd27a-6dd5-4828-a1d1-2152f95d9275",
 CellID->1376566539],
Cell[CellGroupData[{
Cell[2195670, 41043, 348, 7, 42, "ItemParagraph",ExpressionUUID->"d4e2671c-196b-4ccf-be2f-782c8a19859f",
 CellID->725086303],
Cell[2196021, 41052, 328, 6, 42, "ItemParagraph",ExpressionUUID->"8cbe4977-4841-417d-87a4-17df74fbe699",
 CellID->1283165476],
Cell[2196352, 41060, 314, 6, 42, "ItemParagraph",ExpressionUUID->"65a5b819-746c-48e5-8606-b8778f8bcc64",
 CellID->1699070005],
Cell[2196669, 41068, 304, 6, 42, "ItemParagraph",ExpressionUUID->"329d76b0-8a83-43b5-9bad-efa0da80e55f",
 CellID->1575674346],
Cell[2196976, 41076, 303, 6, 42, "ItemParagraph",ExpressionUUID->"d6975a6b-08b0-4ac5-a9f5-eec15fd5eb0f",
 CellID->815284584],
Cell[2197282, 41084, 340, 7, 42, "ItemParagraph",ExpressionUUID->"9b6fa5d4-0f2e-4d12-bb4b-4dcc32a216f2",
 CellID->1121866115]
}, Open  ]],
Cell[2197637, 41094, 595, 10, 163, "Text",ExpressionUUID->"f971983e-cc12-469b-ba0f-bdc644b7f799",
 CellID->1379869999],
Cell[2198235, 41106, 171, 2, 65, "CodeCaption",ExpressionUUID->"7417b787-d249-4fcd-a98d-572dbda12c29",
 CellID->168705963],
Cell[2198409, 41110, 849, 13, 279, "comment",ExpressionUUID->"68aa1fe9-5982-45ca-9687-d6b41467590c",
 CellID->531911462],
Cell[CellGroupData[{
Cell[2199283, 41127, 1607, 40, 309, "Input",ExpressionUUID->"d302b6a4-fa28-4280-acbf-030e00db8954",
 CellID->982353162],
Cell[2200893, 41169, 30846, 610, 90, "Output",ExpressionUUID->"8c0a8228-691c-4c73-b190-8e0bb03e8547",
 CellID->819554507],
Cell[2231742, 41781, 21852, 437, 520, "PrintTemporary",ExpressionUUID->"ccff3253-d0cf-45a1-bf14-455943d93640",
 CellID->292487291]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

